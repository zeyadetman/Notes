{"/":{"title":"Zeyad's Notes","content":"\n# Welcome to my notes\n\nHi, This is my [digital garden](https://jzhao.xyz/posts/networked-thought/) built using the awesome project [Quartz 3.3](https://quartz.jzhao.xyz/) and [obsidian app](https://obsidian.md/).\n\n## About me\nI'm Zeyad a software engineer from [Egypt üá™üá¨](https://en.wikipedia.org/wiki/Kafr_El_Dawwar), working as a Fullstack engineer ([[frontend]] heavily). My type is [INTJ](https://www.crystalknows.com/personality-type/intj) Currently I spend most of my time learning [[programming-languages|Coding]]\n\n[QA](QA.md)\n\n[Find me on the Internet](https://www.zeyadetman.com/about)\n\n[Follow me on twitter](https://twitter.com/zeyadetman)\n\n## About this site\nI created this site to track the things that might be useful to be shared with you, It's not like [my blog](https://zeyadetman.com), the blog is more specific for articles I write, but here you'll find my favs and notes üìù. for more information about how I created this site open the [[setup]] page.\n\n","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/QA":{"title":"Q\u0026A","content":"\nThis page will be for questions that I got from social media and i found them useful for community.\n\nIf you've questions send them to me on [My LinkedIn Account](https://www.linkedin.com/in/zeyadetman).\n\n\u003eQ: I have been hoping to pursue a career in software engineering / web development I have studied Python, HTML, CSS, JS and am starting to work my way through React I know this is very much the basics and am trying to work out the paths that other people with experience have taken, Would you have any advice?\n\n\nPractice smart.\n\na. Open figma community.\nb. Search for a template of an idea you love to implement.\nc. Start implementing it using react.\n\nWhile practicing try to see how the others implement this part, how they organize the folder structure, how they manage the state, which is better react query or redux thunk or sagas, how to create custom hook to do specific function, challenge yourself to do hard/new to you parts.\n\nThen you can add auth functionality, you can use orm to connect a db, search for how to build your database, how to build api for it, how to add some security features to your app.\n\nAfter building the fullstack app, you will like part more than the other, I mean frontend or backend, then begin your career with it. Don‚Äôt start your career as a fullstack, focus on side and then increase your knowledge of the other side step by step. \n\n- Use Typescript.\n- Share your app on your linkedin and github accounts, also highlight the good parts of the app/codebase.\n- Ask the experienced devs to give you some advises or reviews on the implemented code.\n- Build a blog.\n- Share articles.","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/articles/mui-design-system":{"title":"Customize MUI theme with TypeScript","content":"\n\u003e [Published on my Blog](https://zeyadetman.com/posts/mui-design-system)\n\nOk, this is a quick tutorial on how to customize the default theme in [mui v5](https://mui.com/material-ui/getting-started/overview/). we'll just customize the button component.\n\nProject Template [here](https://github.com/zeyadetman/ts-mui-nextjs-storybook-boilerplate)\n\n## First thing, let's create our folder structure.\nOur folder structure is one of the basic setup we will do on our tutorial. it helps us to know where we will write our code in an organized way.\nOk, so I prefer this structure while setup any theming whatever the ui framework I use.\n\n```bash\n.\n‚îî‚îÄ‚îÄ theme/\n    ‚îú‚îÄ‚îÄ foundations/\n    ‚îÇ   ‚îú‚îÄ‚îÄ palette.ts\n    ‚îÇ   ‚îú‚îÄ‚îÄ typography.ts\n    ‚îÇ   ‚îú‚îÄ‚îÄ ...\n    ‚îÇ   ‚îî‚îÄ‚îÄ index.ts\n    ‚îú‚îÄ‚îÄ components/\n    ‚îÇ   ‚îú‚îÄ‚îÄ button.ts\n    ‚îÇ   ‚îú‚îÄ‚îÄ ...\n    ‚îÇ   ‚îî‚îÄ‚îÄ index.ts\n    ‚îî‚îÄ‚îÄ index.ts\n```\n\nNow, we have two main folder, the first one will be `foundations` folder, and it used for basic theme variables, and the other one is `components` for components theming.\nIn each folder we created `index.ts` file to export all from it.\n\n## *Next,*  let's build the theme from the end to beginning.\n\nopen the `theme/index.ts` to import our `foundations` and `components` that structure our theme\n\n```ts\nimport { components } from \"theme/components\";\nimport { foundations } from \"./foundations\";\nimport { createTheme, ThemeOptions } from \"@mui/material\";\n\nconst themeOptions: Omit\u003cThemeOptions, \"components\"\u003e = {\n  ...foundations,\n};\n\nexport const theme: ThemeOptions = createTheme({\n  ...themeOptions,\n  components: {\n    ...components,\n  },\n});\n\n```\n\nNo magic, ha?\n`ThemeOptions` will perfectly handles the types for the passed properties. We excluded the `components` from `themeOptions` vars and passed it inside the `createTheme` function, you can modify it to update it directly inside the variable.\n\n![[Pasted image 20221123060835.png]] Based on mui, Here's the `ThemeOptions` interface, this will make our writing code is super easy and straightforward. How?\nWe need to customize the `theme` colors for example, it called `palette` and its type is `PaletteOptions` \n\nSo here's our `theme/foundations/palette.ts`\n\n```ts\nimport { PaletteOptions } from \"@mui/material\";\n\nexport const palette: PaletteOptions = {\n  common: {\n    white: \"#fff\",\n    black: \"#000\",\n  },\n  primary: {\n    main: \"#33A3FF\",\n    light: \"#53B1FD66\",\n  },\n};\n```\n\nAnd because we've used the correct Interface so the editor will help us continue writing the remain properties\n\n![[Pasted image 20221123061345.png]] \n\n**The Question** will be, What if I need to add a new color schema.\n**The Answer** is Simple as this\n\n```ts\ndeclare module \"@mui/material/styles\" {\n  export interface PaletteOptions {\n    blue?: PaletteColorOptions;\n  }\n}\n```\n\nHow did I know about `PaletteColorOptions` ? it's not a magic, I clicked on `PaletteOptions` and checked the type for the already existing colors schema.\n\n![[Pasted image 20221123061927.png]]\n\nOk, until now everything is super easy right?\n\n## What about customizing the components theme?\n\nOk ok, the MUI Button component located [here](https://mui.com/material-ui/react-button/) and they call it [`MuiButton`](https://mui.com/material-ui/api/button/#component-name).\nBut let's create the `components` object that will be exported inside the `createTheme`.\n\nand it's simple as this `theme/components/index.ts`\n\n```ts\nimport { Components } from \"@mui/material\";\n\nexport const components: Components = {};\n```\n\nafter that TS will help you writing your components.\n\n![[Pasted image 20221123062847.png]]\n\nFirst thing, let's create our type for the `MuiButton` component theme, open the `theme/components/button.ts`\n\n```ts\ntype muiButton = {\n  defaultProps?: ComponentsProps[\"MuiButton\"];\n  styleOverrides?: ComponentsOverrides\u003cTheme\u003e[\"MuiButton\"];\n  variants?: ComponentsVariants[\"MuiButton\"];\n};\n```\n\nWe got it from the `.d.ts` file located in the mui package files inside the `node_modules` folder. No magic!\n\n[Note: Feel free to use interfaces or types for this.](https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#differences-between-type-aliases-and-interfaces)\n\nAfter that let's create our custom theme for `MuiButton` \n\n```ts\ndeclare module \"@mui/material/Button\" {\n  export interface ButtonPropsVariantOverrides {\n    isActive: true;\n  }\n}\n\nexport const MuiButton: muiButton = {\n  variants: [\n    {\n      props: { variant: \"isActive\" },\n      style: ({\n        theme,\n      }: {\n        theme: Theme;\n      }) =\u003e {\n\n        return {\n          color: theme.palette.common.white,\n        };\n      },\n    },\n  ],\n};\n```\n\n1. I created a new variant for the `Button` you can use it inside your code.\n2. TS will be your guide while customizing the component.\n\n*Note: I added `export` word before `interface ButtonPropsVariantOverrides` to avoid the eslint rule* [`unused-imports/no-unused-vars`](https://github.com/sweepline/eslint-plugin-unused-imports/blob/master/docs/rules/no-unused-imports.md)\n\nNow, We need to wrap our app with this theme\n\n```tsx\nimport { theme } from \"theme\";\n\n\u003cThemeProvider theme={theme}\u003e\n\t{children}\n\u003c/ThemeProvider\u003e\n```\n\nTada! üéâ \n\nAnother Things about [Design Systems](frontend/design-systems.md) or [Frontend](frontend/frontend.md)\n\nProject Template [here](https://github.com/zeyadetman/ts-mui-nextjs-storybook-boilerplate)","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/backend/backend":{"title":"Backend","content":"\n## Articles\n\n-   [Efficient Pagination Using Deferred Joins.](https://aaronfrancis.com/2022/efficient-pagination-using-deferred-joins).\n\n\n**See more:**\n[nodejs](backend/nodejs.md)\n[nestjs](backend/nestjs.md)\n[graphql](backend/graphql.md)\n[database](database/database.md)","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/backend/graphql":{"title":"GraphQL","content":"\n- [From #backend to #frontend typed application with GraphQL #typescript](https://olivier-thomas.medium.com/from-backend-to-frontend-typed-application-with-graphql-2d52d61b946a)","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/backend/nestjs":{"title":"NestJS","content":"\n[Documentation | NestJS - A progressive Node.js framework](https://docs.nestjs.com/)\n\n## Build NestJS App\n\n-   [Build a REST API with NestJS, Prisma, PostgreSQL and Swagger.](https://www.prisma.io/blog/nestjs-prisma-rest-api-7D056s1BmOL0)\n\n## Tools\n\n-   [nestjs/throttler](https://github.com/nestjs/throttler): A rate limiting module for NestJS to work with Fastify, Express, GQL, Websockets, and RPC üß≠\n\n## Articles\n\n-   [NestJS vs. Express.js](https://blog.logrocket.com/nestjs-vs-express-js/).","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/backend/nodejs":{"title":"NodeJS","content":"\n## Articles\n\n- [Best Practices for Scaling Your Node.js REST APIs.](https://www.freecodecamp.org/news/nodejs-api-best-practices-for-scaling/)\n- [How To Work with Files Using Streams in Node.js](https://www.digitalocean.com/community/tutorials/how-to-work-with-files-using-streams-in-node-js)\n- [How To Scale Node.js Applications with Clustering](https://www.digitalocean.com/community/tutorials/how-to-scale-node-js-applications-with-clustering)\n- [How To Handle Asynchronous Tasks with Node.js and BullMQ](https://www.digitalocean.com/community/tutorials/how-to-handle-asynchronous-tasks-with-node-js-and-bullmq)\n- \n\n## Setup a new app\n\n-   [How to set up TypeScript with Node.js and Express](https://blog.logrocket.com/how-to-set-up-node-typescript-express/)\n-   [Bulletproof node.js project architecture üõ°Ô∏è](https://softwareontheroad.com/ideal-nodejs-project-structure).\n\n","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/books/api-design-patterns":{"title":"API Design Patterns","content":"\n## Notes\n\n### Chapter 1\n\n- RPC: Remote Procedure Call because it calls a remote function 'procedure'.\n- APIs are special types of interfaces that define how two computer systems interact with one another, coming in many forms, such as downloadable libraries and web APIs.\n-  Web APIs are special because they expose functionality over a network, hiding the specific implementation or computational requirements needed for that functionality.\n- A list of RPC-oriented APIs, may be something like\n\n```\nScheduleFlight()    -\u003e Schedules a new flight\nGetFlightDetails()  -\u003e Shows information about a specific flight\nShowAllBookings()   -\u003e Shows all travel plans currently booked\nCancelReservation() -\u003e Cancels an existing flight reservation\nRescheduleFlight()  -\u003e Reschedules an existing flight to another date or time\nUpgradeTrip()       -\u003e Upgrades from economy class to first class\n```\n\nBut if we want to call each of them publicly, how can we remember that? For example, we need to remember whether the way to see all of our bookings is `ShowFlights()`, `ShowAllFlights()`, `ListFlights()`, or `ListAllFlights()` (in this case, it‚Äôs `ShowAllFlights()`). But what can we do to solve this? The answer comes in the form of standardization \"Resource orientation\" resource-oriented APIs.\n`\u003cStandardMethod\u003e\u003cResource\u003e()`\n\n**StandardMethod**: GET, POST, ...etc\n**Resource**: in the prev example is the *FlightReservation*. \n\n`GET\u003cFlightReservation\u003e()`\n\n#### What makes an API \"good\"?\n- **Operational**: it must do the thing users actually want. there may be nonoperational requirements related to things like *latency* and *accuracy*.\n- **Expressive**.\n- **Simple**.\n- **Predictable**.\n\n### Chapter 2\n\n- **Software design pattern:** is what happens when a particular design can be applied over and over to lots of similar software problems.\n- **Anatomy of an API design pattern**: *Name, Motivation, Overview, Implementation, Trade-offs.*\n- API design patterns are important because APIs are generally very ‚Äúrigid‚Äù and therefore not easy to change, so design patterns help minimize the need for large structural changes.","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/books/books":{"title":"","content":"[api-design-patterns](books/api-design-patterns.md)","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/career/management":{"title":"Management","content":"\n## Giving Feedback\n- [20 Positive Feedback Examples For Work In 2022 - It Really Matters](https://snacknation.com/blog/positive-feedback-examples/)\n- [Employee feedback: Examples to guide and drive development](https://www.cultureamp.com/blog/employee-feedback-examples)\n- ","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/career/paths":{"title":"Career Paths","content":"\n## Frontend\nIf you're a **beginner** and want to learn frontend then here's my recommendation: [[roadmap]]\n\n\n## Computer Science","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/clean-code/clean-code":{"title":"Clean Code","content":"\n[[learning-notes]]\n\n## Awesome\n- [An organized learning path on Clean Code, Test-Driven Development, Legacy Code, Refactoring, Domain-Driven Design and Microservice Architecture](https://github.com/joebew42/study-path)\n\n**See more:**\n[links](clean-code/links.md)\n","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/clean-code/links":{"title":"Clean Code Discussions","content":"\nOk, So I separated these stuff from the main page [clean-code](clean-code/clean-code.md) to make this page for discussions and more specific topics.\n\n\n## Readability Over Abstraction\n\n-   [https://softwareengineering.stackexchange.com/questions/60900/do-abstractions-have-to-reduce-code-readability](https://softwareengineering.stackexchange.com/questions/60900/do-abstractions-have-to-reduce-code-readability)\n-   [https://en.wikipedia.org/wiki/KISS_principle](https://en.wikipedia.org/wiki/KISS_principle)\n-   [https://softwareengineering.stackexchange.com/questions/202477/can-too-much-abstraction-be-bad](https://softwareengineering.stackexchange.com/questions/202477/can-too-much-abstraction-be-bad)\n-   [https://softwareengineering.stackexchange.com/questions/398739/too-much-abstraction-making-code-hard-to-extend](https://softwareengineering.stackexchange.com/questions/398739/too-much-abstraction-making-code-hard-to-extend)\n-   [https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction](https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction)","lastmodified":"2023-08-22T12:26:53.126026979Z","tags":null},"/cli/cli":{"title":"CLI","content":"\nIn this page will document my knowledge on command line interface.\n\n## My setup\n\n-   [Tmux](https://github.com/tmux/tmux/wiki) for terminal management.\n-   [Starship](https://starship.rs/) as shell prompt.\n\n## Productivity tools\n\n-   [https://github.com/ankitpokhrel/jira-cli](https://github.com/ankitpokhrel/jira-cli)\n\n\n**See more:**\n[curl](cli/curl.md)\n[learn-cli](cli/learn-cli.md)\n[tmux](cli/tmux.md)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/cli/curl":{"title":"cURL","content":"\n## Articles\n\n-   [Linux curl Command Explained with Examples](https://phoenixnap.com/kb/curl-command).\n\n## Examples\n\n```bash\ncurl -X POST \u003chttps://getpocket.com/v3/oauth/authorize\u003e -d \"code=string\u0026consumer_key=string\"\n```\n\n-   `-X` to specify the request type.\n-   `-d` data.","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/cli/learn-cli":{"title":"Learn CLI","content":"\n## Resources\n\n-   [explainshell.com](https://explainshell.com/) write down a command-line to see the help text that matches each argument.","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/cli/tmux":{"title":"TMUX","content":"\n[tmux](https://github.com/tmux/tmux/wiki) is one of my favorite tools to manage terminal.\n\n## Articles\n\n-   [Writing Your tmux Config: a Detailed Guide](https://thevaluable.dev/tmux-config-mouseless/)\n-   [Organize Your Work With tmux Sessions](https://blog.dnmfarrell.com/post/organize-your-work-with-tmux/)\n-   [Everything you need to know about tmux ‚Äì Introduction](https://arcolinux.com/everthing-you-need-to-know-about-tmux-introduction/)\n\n## Cheatsheet\n\n-   [https://tmuxcheatsheet.com/](https://tmuxcheatsheet.com/)\n-   [https://gist.github.com/MohamedAlaa/2961058](https://gist.github.com/MohamedAlaa/2961058)\n\n## My Config\n\n-   You‚Äôll find my [`[.tmux.conf` file here](https://github.com/zeyadetman/dotfiles/blob/main/.tmux.conf).\n-   Find my [tmux stars ‚≠êÔ∏è on github](https://github.com/stars/zeyadetman/lists/tmux).","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/code-snippets/center-in-css":{"title":"Center elements in Css","content":"\n## Centering div\n\n- Using Grid\n```css\n.parent {\n  display: grid;\n  place-items: center;\n}\n```","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/code-snippets/code-snippets":{"title":"Code Snippets","content":"\n1. [golang](programming-languages/golang.md)\n- [[tic-tac-toe]]\n\n\n2. CSS.\n- [[center-in-css]]","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/code-snippets/tic-tac-toe":{"title":"Tic Tac Toe using golang","content":"\n#golang\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\n\txoBoard := [3][3]string{}\n\n\ttype player struct {\t\n\t\tname string\n\t\tmark string\n\t}\n\n\tplayer1 := player{mark: \"X\"}\n\tplayer2 := player{mark: \"O\"}\n\tfmt.Println(\"Welcome to Tic Tac Toe!\")\n\tfmt.Println(\"Player 1, please enter your name:\")\n\tfmt.Scanln(\u0026player1.name)\n\tfmt.Println(\"Player 2, please enter your name:\")\n\tfmt.Scanln(\u0026player2.name)\n\t\n\tfmt.Println(\"Now we have two players, \" + player1.name + \" and \" + player2.name + \", let's start the game!\")\n\t\n\tcurrentPlayer := player1\n\tx, y := 0, 0\n\n  \n\n\tfor {\n\t\tfmt.Println(\"Player \" + currentPlayer.mark + \", please enter the row and column number of the cell you want to mark:\")\n\t\tfmt.Scanln(\u0026x, \u0026y)\n\t\t\n\t\tif xoBoard[x][y] == \"\" {\n\t\t\tif x \u003e= 0 \u0026\u0026 x \u003c 3 \u0026\u0026 y \u003e= 0 \u0026\u0026 y \u003c 3 {\n\t\t\t\txoBoard[x][y] = currentPlayer.mark\n\t\t\t} else {\n\t\t\t\tfmt.Println(\"Please enter a valid cell number!\")\n\t\t\t\tcontinue\n\t\t\t}\n\t\t} else {\n\t\t\tfmt.Println(\"This cell is already marked, please choose another one!\")\n\t\t\tcontinue\n\t\t}\n\t\n\t\t// validation\n\t\t\n\t\tfor i := 0; i \u003c 3; i++ {\n\t\t\tif xoBoard[i][0] == xoBoard[i][1] \u0026\u0026 xoBoard[i][1] == xoBoard[i][2] \u0026\u0026 xoBoard[i][0] == currentPlayer.mark {\n\t\t\t\tfmt.Println(\"Player \" + currentPlayer.mark + \" wins!\")\n\t\t\t\treturn\n\t\t\t} else if xoBoard[0][i] == xoBoard[1][i] \u0026\u0026 xoBoard[1][i] == xoBoard[2][i] \u0026\u0026 xoBoard[0][i] == currentPlayer.mark {\n\t\t\t\tfmt.Println(\"Player \" + currentPlayer.mark + \" wins!\")\n\t\t\t\treturn\n\t\t\t} else if xoBoard[0][0] == xoBoard[1][1] \u0026\u0026 xoBoard[1][1] == xoBoard[2][2] \u0026\u0026 xoBoard[0][0] == currentPlayer.mark {\n\t\t\t\tfmt.Println(\"Player \" + currentPlayer.mark + \" wins!\")\n\t\t\t\treturn\n\t\t\t} else if xoBoard[0][2] == xoBoard[1][1] \u0026\u0026 xoBoard[1][1] == xoBoard[2][0] \u0026\u0026 xoBoard[0][2] == currentPlayer.mark {\n\t\t\t\tfmt.Println(\"Player \" + currentPlayer.mark + \" wins!\")\n\t\t\t\treturn\n\t\t\t} else if xoBoard[0][0] != \"\" \u0026\u0026 xoBoard[0][1] != \"\" \u0026\u0026 xoBoard[0][2] != \"\" \u0026\u0026 xoBoard[1][0] != \"\" \u0026\u0026 xoBoard[1][1] != \"\" \u0026\u0026 xoBoard[1][2] != \"\" \u0026\u0026 xoBoard[2][0] != \"\" \u0026\u0026 xoBoard[2][1] != \"\" \u0026\u0026 xoBoard[2][2] != \"\" {\n\t\t\t\tfmt.Println(\"It's a tie!\")\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\t\n\t\tfmt.Println(xoBoard[0])\n\t\tfmt.Println(xoBoard[1])\n\t\tfmt.Println(xoBoard[2])\n\t\t\n\t\tif currentPlayer.mark == \"X\" {\n\t\t\tcurrentPlayer = player2\n\t\t} else {\n\t\t\tcurrentPlayer = player1\n\t\t}\n\t}\n}\n```","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/database/database":{"title":"Databases","content":"\n## Tools\n\n-   [Table Plus.](https://tableplus.com/)\n-   [Mysql Workbench](https://www.mysql.com/products/workbench/)\n\n## Concepts\n\n### Normalization\n- [Learn Database Normalization - 1NF, 2NF, 3NF, 4NF, 5NF ‚≠êÔ∏è](https://www.youtube.com/watch?v=GFQaEYEc8_8)\n- [1st, 2nd and 3rd Normal Form (Database Normalisation)](https://youtu.be/J-drts33N8g)\n\n### N+1 Problem\n- [What is the N+1 Problem in GraphQL?](https://medium.com/the-marcy-lab-school/what-is-the-n-1-problem-in-graphql-dd4921cb3c1a)\n- [Understanding, identifying and fixing the N+1 query¬†problem](https://schneide.blog/2021/12/06/understanding-identifying-and-fixing-the-n1-query-problem/)\n\n\n## Articles\n\n-   [Difference between Natural join and Inner Join in SQL](https://www.geeksforgeeks.org/difference-between-natural-join-and-inner-join-in-sql/)\n\n**See more**\n[firebase](database/firebase.md)\n[postgresql](database/postgresql.md)\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/database/firebase":{"title":"Firebase","content":"\n[https://firebase.google.com/](https://firebase.google.com/)\n\n## Articles\n\n-   [7 tips on Firebase security rules and the Admin SDK](https://firebase.blog/posts/2019/03/firebase-security-rules-admin-sdk-tips).","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/database/postgresql":{"title":"PostgreSQL","content":"\n[https://www.postgresql.org/](https://www.postgresql.org/) .\n\n## Learning\n\n-   [https://www.postgresqltutorial.com/](https://www.postgresqltutorial.com/) If you prefer reading tutorials (with hands on).\n\n## Tools\n\n-   [https://www.pgadmin.org/](https://www.pgadmin.org/)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/design-patterns/behavioral":{"title":"Behavioral Design Patterns","content":"\n#### [Strategy Design Pattern (Behavioral)](https://www.thisdot.co/blog/clean-up-your-code-with-design-patterns-in-javascript)\n\nDefine a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm exist very independently from clients that use it.\n\n[![strategy-pattern](https://camo.githubusercontent.com/5a9d9c6c2071047d1b316ac2e2a0c874f52af235aa90e3c95ddf408ba698058e/68747470733a2f2f696d616765732e636f6e74656e7466756c2e636f6d2f7a6f6a7a7a646f7030667a782f66534433624f35555759494370626e7950327a726c2f34333233316439373036653834326439353831313537646666376236626332332f53747261746567792e676966)](https://camo.githubusercontent.com/5a9d9c6c2071047d1b316ac2e2a0c874f52af235aa90e3c95ddf408ba698058e/68747470733a2f2f696d616765732e636f6e74656e7466756c2e636f6d2f7a6f6a7a7a646f7030667a782f66534433624f35555759494370626e7950327a726c2f34333233316439373036653834326439353831313537646666376236626332332f53747261746567792e676966)\n\n\n```ts\n\n/**\n * The Context defines the interface of interest to clients.\n */\nclass Context {\n\n    private strategy: Strategy;\n\n    constructor(strategy: Strategy) {\n        this.strategy = strategy;\n    }\n\n    public setStrategy(strategy: Strategy) {\n        this.strategy = strategy;\n    }\n\n    public doSomeBusinessLogic(): void {\n        console.log('Context: Sorting data using the strategy (not sure how it\\'ll do it)');\n        const result = this.strategy.doAlgorithm(['a', 'b', 'c', 'd', 'e']);\n        console.log(result.join(','));\n    }\n}\n\ninterface Strategy {\n    doAlgorithm(data: string[]): string[];\n}\n\nclass ConcreteStrategyA implements Strategy {\n    public doAlgorithm(data: string[]): string[] {\n        return data.sort();\n    }\n}\n\nclass ConcreteStrategyB implements Strategy {\n    public doAlgorithm(data: string[]): string[] {\n        return data.reverse();\n    }\n}\n\nconst context = new Context(new ConcreteStrategyA());\nconsole.log('Client: Strategy is set to normal sorting.');\ncontext.doSomeBusinessLogic();\n\nconsole.log('');\n\nconsole.log('Client: Strategy is set to reverse sorting.');\ncontext.setStrategy(new ConcreteStrategyB());\ncontext.doSomeBusinessLogic();\n\n\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/design-patterns/design-patterns":{"title":"Design Patterns","content":"\nDesign patterns is a kinda tough to be remembered, so i created this pages to list what design patterns i do know, and what i need to know, and some links i find it useful.\n\n## Articles\n\n-   [Learning Design Patterns: A Summary.](https://lo-victoria.com/learning-design-patterns-a-summary)\n-   [Decorator design pattern](https://refactoring.guru/design-patterns/decorator)\n\n## Learn more\n- https://github.com/AbdurRKhalid/Design-Patterns\n- \n\n**See more:**\n[behavioral](design-patterns/behavioral.md)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/devops/devops":{"title":"Devops","content":"\n## Feature Flags\n\n### Articles\n\n- https://www.atlassian.com/continuous-delivery/principles/feature-flags","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/frontend/assets-illustrations":{"title":"Assets \u0026 Illustrations","content":"\n* 100,000 icons, illustrations and emoji for all your projects. ([streamlinehq.com](https://www.streamlinehq.com))\n* Open-source illustrations for any idea you can imagine and create. ([https://undraw.co/](https://undraw.co))\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/frontend/colors":{"title":"Colors","content":"\n#### Generate color palette\n\n* [https://coolors.co/](https://coolors.co)\n\n#### Generate Color Gradients\n\nhttps://www.joshwcomeau.com/gradient-generator/\n\n\n**My Preferred colors theme**\n\n* [https://colorable.jxnblk.com/090808/fab828](https://colorable.jxnblk.com/090808/fab828)\n![[Pasted image 20221024140943.png]]\n* [https://colorable.jxnblk.com/b73e25/001f31](https://colorable.jxnblk.com/b73e25/001f31)\n![[Pasted image 20221024140924.png]]\n* [https://colorable.jxnblk.com/f5a58b/065771](https://colorable.jxnblk.com/f5a58b/065771)\n![[Pasted image 20221024141003.png]]","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/frontend/design-systems":{"title":"Design Systems","content":"\n### Visualize your components\n\n* [https://github.com/react-cosmos/react-cosmos](https://github.com/react-cosmos/react-cosmos)\n* [storybook](https://storybook.js.org/)\n\n### Document your components\n\n* [react-styleguide](https://github.com/styleguidist/react-styleguidist)\n\n### Books\n\n* [Invision design system handbook.](https://s3.amazonaws.com/designco-web-assets/uploads/2019/05/InVision\\_DesignSystemsHandbook.pdf)\n\n### Articles\n\n* [Component Based Design System With Styled-System.](https://varun.ca/styled-system/)\n* [UI component explorers ‚Äî your new favorite tool](https://www.chromatic.com/blog/ui-component-explorers---your-new-favorite-tool/)\n* [Customize MUI theme with TypeScript](articles/mui-design-system.md) - *by me*\n\n### Design Systems\n\n* [Building Box.](https://www.figma.com/community/file/1048327171347943164)\n\n### Rich Components\n\n* [https://baseweb.design/](https://baseweb.design/) (Uber design system)\n* [https://chakra-ui.com/](https://chakra-ui.com/)\n\n### Build your own\n\n* [https://theme-ui.com/](https://theme-ui.com/)\n* [https://styled-system.com/](https://styled-system.com/)\n\n### Courses\n\n* [Design Systems with React \u0026 Storybook.](https://frontendmasters.com/courses/design-systems/)\n\n### Colors\n[colors](frontend/colors.md)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/frontend/frontend":{"title":"Frontend Articles","content":"\n### Layout\n\n* [https://css-tricks.com/the-inside-problem/](https://css-tricks.com/the-inside-problem/)\n\n### Performance\n\n* [Embracing modern image formats.](https://www.joshwcomeau.com/performance/embracing-modern-image-formats)\n* [Best Practices on How to Compress Images For Reactjs.](https://tamalweb.com/compress-images-reactjs#use-webpavif-images-for-even-better-compression)\n* [Blogged Answers: A (Mostly) Complete Guide to React Rendering Behavior](https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/)\n* [When Does React Render Your Component?](https://www.zhenghao.io/posts/react-rerender)\n\n### Regular Expressions\n\n* [Lookahead and lookbehind in javascript.](https://javascript.info/regexp-lookahead-lookbehind)\n\n### Design System\n[[frontend/design-systems#Articles|Desgin System Articles]]\n\n### Styles\n- [The Surprising Truth About Pixels and Accessibility](https://www.joshwcomeau.com/css/surprising-truth-about-pixels-and-accessibility/)\n\n### Icons\n[https://lucide.dev](https://lucide.dev)\n\n### Animation\n- [Framer Motion.](https://www.framer.com/motion/)\n\n**Read more...**\n- [reactjs](reactjs/reactjs.md)\n- [assets-illustrations](frontend/assets-illustrations.md)\n- [colors](frontend/colors.md)\n- [design-systems](frontend/design-systems.md)\n- [roadmap](frontend/roadmap.md)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/frontend/interview":{"title":"Interview Prep","content":"\n\n## Resources \n- [This discussion on leetcode](https://leetcode.com/discuss/interview-question/1074798/frontend-interview-preparation-resources-1-4-years-exp) is one of my best resources in the frontend interview prep.\n\n\n### JavaScript\n[[javascript]]\n- https://jsvault.com/ collection of tricky JS interview questions.","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/frontend/pwa":{"title":"PWA","content":"\n[How we built Twitter Lite](https://blog.twitter.com/engineering/en_us/topics/open-source/2017/how-we-built-twitter-lite)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/frontend/roadmap":{"title":"Frontend Roadmap","content":"\n# Frontend\n\n## Frontend Learning Path (Updated 2022)\n\n### Notes before learning\n\n1. Most of online courses just introduce basic information of the _**X**_ in its current version of _**X**_, they will not introduce everything, and you'll not learn everything from courses, **Documentations** is the most important source/guide that you have to learn how to use it to use their product (_**X**_).\n2. Applying what you're learning is a regular activity that you must do while learning anything in programming, **code** everything you learn.\n3. While learning or doing, you'll definitely struggle in doing things, I strongly recommend create a [stackoverflow.com](http://stackoverflow.com) or [reddit.com](https://reddit.com) account and **ASK** the community, please don't hesitate to ask communities, [Learn how to ask a good question](https://stackoverflow.com/help/how-to-ask) it's a powerful skill!\n4. Use coding communities like **GitHub** to share what you're coding with the public, It'll be a reference for you in the future as well, Although it'll help you to get job opportunities because people know you're sharing code about _**X**_.\n5. Don't get distracted, You wanna learn _**X**_** ** and you've asked someone, you got a resource, go with it, then apply! Don't spend your days getting the perfect resource to learn _**X**_, __ in tech you never stop learning, so just start with any and increase your knowledge then.\n6. Don't compare yourself to others, you don't have the same abilities, time, environment, anything, you're completely different/unique, persistence is the common factor for success.\n\n### Path\n\n_Skip what you already know._\n\n_**If you prefer learning from videos.**_\n\n#### Introducing to internet\n\n* \\[en]\\[video] [https://www.youtube.com/watch?v=7\\_LPdttKXPc](https://www.youtube.com/watch?v=7\\_LPdttKXPc\\\u0026ab\\_channel=Aaron)\n* \\[en]\\[video] [https://www.youtube.com/watch?v=Sfzo4xm5eX8](https://www.youtube.com/watch?v=Sfzo4xm5eX8\\\u0026ab\\_channel=BLASTERTECHNOLOGY)\n* \\[en]\\[article] [https://www.hp.com/us-en/shop/tech-takes/how-does-the-internet-work](https://www.hp.com/us-en/shop/tech-takes/how-does-the-internet-work)\n* \\[ar]\\[video] [https://www.youtube.com/watch?v=w1GpaH8XIUE](https://www.youtube.com/watch?v=w1GpaH8XIUE)\n\n#### HTML\n\n* \\[en]\\[video] [https://www.youtube.com/watch?v=pQN-pnXPaVg](https://www.youtube.com/watch?v=pQN-pnXPaVg)\n* \\[ar]\\[video] [https://www.youtube.com/watch?v=q3yFo-t1ykw](https://www.youtube.com/watch?v=q3yFo-t1ykw\\\u0026t=1109s)\n\n#### CSS\n\n* \\[en]\\[video] [https://www.youtube.com/watch?v=1Rs2ND1ryYc](https://www.youtube.com/watch?v=1Rs2ND1ryYc)\n* \\[ar]\\[video] [https://www.youtube.com/watch?v=Z-5QVutAEW4](https://www.youtube.com/watch?v=Z-5QVutAEW4\\\u0026t=4735s)\n\n#### HTML and CSS Practice\n\n_Practice as much as you can, You could start with the next two resources:_\n\n* \\[en]\\[video] [https://www.youtube.com/watch?v=O7WbVj5apxU](https://www.youtube.com/watch?v=O7WbVj5apxU)\n* \\[ar]\\[video] [https://www.youtube.com/watch?v=cARGOrtiWt4](https://www.youtube.com/watch?v=cARGOrtiWt4)\n\n#### Javascript\n[Javascript](programming-languages/javascript.md)\n\n* \\[en]\\[video] [https://www.youtube.com/watch?v=PkZNo7MFNFg](https://www.youtube.com/watch?v=PkZNo7MFNFg\\\u0026t=9574s)\n* \\[ar]\\[video] [https://www.youtube.com/watch?v=Ai\\_0ONyPay4](https://www.youtube.com/watch?v=Ai\\_0ONyPay4\\\u0026t=5606s)\n\n#### Javascript Practice\n\n_Practice as much as you can, You could start with the next two resources:_\n\n* \\[en]\\[video] [https://www.youtube.com/watch?v=3PHXvlpOkf4](https://www.youtube.com/watch?v=3PHXvlpOkf4)\n\n#### React\n[Reactjs](reactjs/reactjs.md)\n\n* \\[en]\\[video] [https://www.youtube.com/watch?v=LlvBzyy-558](https://www.youtube.com/watch?v=LlvBzyy-558)\n* \\[en]\\[video] [https://www.youtube.com/watch?v=MfIoAG3e7p4](https://www.youtube.com/watch?v=MfIoAG3e7p4)\n\n#### React Practice\n\n* \\[playlist] [https://www.youtube.com/watch?v=GDa8kZLNhJ4\\\u0026list=PL6QREj8te1P6wX9m5KnicnDVEucbOPsqR](https://www.youtube.com/watch?v=GDa8kZLNhJ4\\\u0026list=PL6QREj8te1P6wX9m5KnicnDVEucbOPsqR)\n\n\n\n#### What's next?\n\nNow, you able to get your first job as frontend developer, you have a good portfolio (GitHub, LinkedIn, Stack overflow), you've built apps.\n\nSome topics you can learn after that:\n\n* Micro frontends.\n* [Design Systems](frontend/design-systems.md)\n* Testing.\n* Server side rendering.\n* [Git](git/git.md)\n* state machine.\n* [Design Patterns](design-patterns/design-patterns.md)\n* learn other frontend frameworks.\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/git/git":{"title":"Git","content":"\nHere's one of the best things to learn git by doing: https://wyag.thb.lt\n\n## Visualizations\n- [A Visual Git Reference](https://marklodato.github.io/visual-git-guide/index-en.html)\n\n## Tutorials\n- [A Better Model for Stacked (GitHub) Pull Requests](https://timothya.com/blog/git-stack/#rebase-no-conflict)\n\n**See more**\n- [git-log](git/git-log.md)\n- [git-bisect](git/git-bisect.md)\n- [jira-ticket-git-flow](scripts/jira-ticket-git-flow.md)\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/git/git-bisect":{"title":"Git Bisect","content":"\nYou can use `git bisect` to search for the first commit that cause an error or something.\n\n`git bisect start`\n\nI've published a video about it you can [view it from here](https://youtu.be/bkxvSQ0WMuE)\n\nhttps://www.youtube.com/watch?ab_channel=ZeyadEtman\u0026v=bkxvSQ0WMuE\"\n\nMore details on [Git Documentation](https://git-scm.com/docs/git-bisect).\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/git/git-log":{"title":"Git Log","content":"\n### Git Log\n\n#### Search commits for specific word\n\n`git log -S \"import { blabla }\" --oneline`\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/git/tips":{"title":"Git Tips \u0026 Tricks","content":"\n## Ignore files changes in git locally\n\n- **You can ignore files from the worktree** \n`git update-index --skip-worktree [files]`\n- **Remove files from ignoring**\n`git update-index --no-skip-worktree [files]`\n- **To list the files you've added before**\n`git ls-files -v . | grep \"^S\"`\n\nTo understand this line: \n- https://git-scm.com/docs/git-ls-files\n- https://stackoverflow.com/a/42363882/5721245\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/keycloak/handle-https":{"title":"Configure Keycloak instance to run on localhost using https on macOS","content":"\n## Prerequisites\n\n- You're using macOS.\n- You have keycloak instance running on your machine.\n- I'll use chrome for this tutorial.\n\n## Problems\n\nThe problem is we need to serve from two ports, the first one is the keycloak admin instance (Keycloak Dashboard), and the second one is the client which uses the keycloak service. we need to serve them via the secure protocol **https**. \n\n### Your connection is not private\n\nSo when we try to use https on localhost, we'll face _your connection is not private_ error, because we're serving localhost via https\n\n![Your connection is not private](Pasted%20image%2020230807040814.png)\n\nTo Solve this error All you have to do is write chrome://flags in the chrome url, and then search for *Allow invalid certificates for resources loaded from localhost.* to enable it.\n\n![](Pasted%20image%2020230807041239.png)\n\nGreat! So now we can do the request to localhost with an invalid certificate.\n\n### Certificate is not valid\n\nNow we're facing this error\n\n![The current case](Pasted%20image%2020230807040044.png)\n\nWhen you click over it, you'll see that the certificate is not valid, in the next steps we'll trust this certificate\n\n![](Pasted%20image%2020230807040342.png)\n\nTo solve this issue, we need to trust the certificate on our machine, to do this\n1. Click on *Certificate is not valid* button.\n2. You'll see a Certificate Viewer popup, Click on the details tab.\n3. Click on **Export** and select **PKCS #7, single certificate**.\n4. Open **Keychain Access** app on your macOS and select **Login**.\n5. File \u003e Import Items \u003e select the file/certificate you've exported from chrome.\n6. Click on the certificate \u003e Trust \u003e Always Trust.\n\nGreat! Now we passed the localhost issue for the client.\n\nThe last step is creating a new certificate for keycloak instance, and trust it on our machine.\n\n### Keycloak certificate\n\nTo create a new certificate on macOS, copy this command and put it on your terminal\n\n```bash\n openssl req -x509 -out localhost.crt -keyout localhost.key \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config \u003c( \\\n   printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")\n   \n```\n\nThis will create two files for you, the first one is `localhost.crt` the certificate itself, and the second one is the localhost key, we'll use both in the keycloak folder configuration so you can copy them.\n\n![](Pasted%20image%2020230807043106.png)\n\nYou can use them via a keycloak/certs folder.\n\n- localhost.crt -\u003e keycloak-server.pem\n- localhost.key -\u003e keycloak-server-key.pem\n\nYou can also use this command\n\n````bash\nbin/kc.[sh|bat] start --https-certificate-file=/path/to/certfile.pem --https-certificate-key-file=/path/to/keyfile.pem\n````\n\n\n\n### Resources\n\n- https://www.keycloak.org/server/enabletls\n- https://letsencrypt.org/docs/certificates-for-localhost/\n\n\n*Have you learned something new? Want to learn more?*\n\n[tips](git/tips.md)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/learning-notes":{"title":"Learning Notes","content":"\n- **SOLID** principles and how to apply them in your mind before your code.\n- **OOP** even if you're writing functional code, you have to know Object Oriented Programming to strengthen your knowledge.\n- **Design Patterns** is a great examples on how to use OOP and SOLID Principles in a real use cases, try to use them in your code.\n- Data structures and Algorithms even if you'll not implement them inside you code, know basics.\n- Git and how to use it in your daily work.","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/oop/oop":{"title":"Object Oriented Programming","content":"\n## Polymorphism\n\n### Articles\n\n[Polymorphic this Type in TypeScript | DigitalOcean](https://www.digitalocean.com/community/tutorials/typescript-polymorphic-this)\n\n-   [https://www.cloudhadoop.com/2018/07/learn-overloading-in-typescript-with.html](https://www.cloudhadoop.com/2018/07/learn-overloading-in-typescript-with.html)\n-   [https://www.cloudhadoop.com/2018/09/typescript-understanding-polymorphism.html](https://www.cloudhadoop.com/2018/09/typescript-understanding-polymorphism.html)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/problem-solving/me-on-problem-solving":{"title":"Follow me for PS","content":"\nHere's my digital presence on the popular problem solving sites.\n\n[**CodeForces.**](http://codeforces.com/profile/zeyadetman)\n\n[**LeetCode.**](https://leetcode.com/zeyadetman/)\n\n[**uHunt.**](https://uhunt.onlinejudge.org/id/322321)\n\n[**HackerRank.**](https://www.hackerrank.com/zeyadetman)\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/problem-solving/problem-solving":{"title":"Problem Solving","content":"\n# Sorting Algorithms Resources\n\n### Complexity of Sort Types\n[http://stackoverflow.com/questions/1933759/when-is-each-sorting-algorithm-used](http://stackoverflow.com/questions/1933759/when-is-each-sorting-algorithm-used)\n\n### Visual\n[http://visualgo.net/sorting](http://visualgo.net/sorting)\n[https://www.toptal.com/developers/sorting-algorithms](https://www.toptal.com/developers/sorting-algorithms)\n\n## Resources to get started\n- [Mustafa Saad sheet.](https://goo.gl/unDETI) ‚≠êÔ∏è\n- [How to use LeetCode to help yourself efficiently and effectively (for beginners)](https://leetcode.com/discuss/career/450215/How-to-use-LeetCode-to-help-yourself-efficiently-and-effectively-(for-beginners))\n\n\n## IDEs\n- **C++:** [Code::Blocks](https://www.codeblocks.org/)\n\n**See more:**\n[Follow me](problem-solving/me-on-problem-solving.md)\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/productivity":{"title":"Productivity","content":"## Articles\n\n* [Ten Years of Logging My Life.](https://chaidarun.com/ten-years-of-logging-my-life)\n* [Pmarca Guide to Personal Productivity](https://fictivekin.github.io/pmarchive-jekyll/guide_to_personal_productivity.html)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/programming-languages/cpp":{"title":"C++ Programming Languages","content":"\n# C++ notes for PS\n\nThis is my notes for problem solving in c++, that I've learned while coding in C++ and found them helpful.\n\n#### convert string to lowercase.\n\n```cpp\ntrasform(s.begin(),s.end(),s.begin(),::tolower);\n```\n\n#### check this character is alpha.\n\n```cpp\nisalpha(char);\n```\n\n#### check the character is in upper case\n\n```cpp\nisupper(char);\n```\n\n#### Import all libs\n\n```cpp\n\u003cbits/stdc++.h\u003e\n```\n\n#### copy contents of deque of chars into string\n\n```cpp\nstd::string ss(dqu.begin(),dqu.end());\n```\n\n#### Modulo of a negative number [\\[Example\\]](http://codeforces.com/contest/450/problem/B)\n\n```cpp\n(?n)%k == (k?(n%k))%k\n```\n\n#### Find substring\n\n```cpp\nstd::size_t zero7 = s.find(\"0000000\"); if(zero7!=std::string::npos) found=true;\n```\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/programming-languages/golang":{"title":"GO Lang","content":"\n#golang \n\n## Articles\n- [How to become a Golang developer: 10 steps career path](https://www.softkraft.co/how-to-become-golang-developer)\n\n## Syntax\n\n- Variables\n```go\npackage main\nimport {\n  \"fmt\"\n}\n\nfunc main() {\n\tvar var1 string = \"Hello\"\n\tvar var2 int32 = 43\n\tvar3 := 44; // int\n\tvar4 := \"hello\" // string\n\tconst var5 = 5;\n\tvar5 = 6 // [error] cannot assign to var5 (untyped int constant 5)\n\n\n\ttype obj struct {\n\t\tname string\n\t\tage  int\n\t}\n\n\tobj1 := obj{name: \"zeyad\", age: 27}\n}\n```\n\n- If and Switch\n```go\n...\nx := 4\nif x \u003e= 4 {\n\tfmt.Println(\"Greater\")\n} else if x == 4 {\n\tfmt.Println(\"Equal\")\n} else {\n\tfmt.Println(\"Less\")\n}\n\n\n\np := myString{value: \"Zeyad\", key: \"name\"}\n\n  \n\nswitch p.key {\n\tcase \"name\":\n\t\tfmt.Println(\"Name is\", p.value)\n\tcase \"age\":\n\t\tfmt.Println(\"Age is\", p.value)\n\tdefault:\n\t\tfmt.Println(\"No value\")\n}\n...\n```\n\n- Arrays\n```go\n\narr0 := [10]string\narr1 := [5]int{1, 2, 3, 4, 5}\narr[2] = 10\n\nvar arr2 = [10]string{}\nfmt.Println(arr)\nfmt.Println(len(arr)) //length\n\nmatrix := [2][3]int{}\nmatrix[0][0] = 1\nfmt.Println(matrix)\n```\n\n- Loops\n```go\nvar seq [4][4]int\nfor i := 0; i \u003c len(seq); i++ {\n\tfor j := 0; j \u003c len(seq[i]); j++ {\n\t\tseq[i][j] = i + j\n\t}\n}\n\ncounter := 6\nfor counter != 0 {\n\tfmt.Println(counter)\n\tcounter--\n}\n\nfor {\n\tfmt.Println(\"infinite loop\")\n}\n```\n\n- Hands on [[tic-tac-toe]]\n- Slices.\n```go\nvar slice1 = []string{}\nvar slice2 = []string{\"aaa\"}\nslice3 := make([]string, 0) // 0 length\nslice1 = append(slice2, \"a\")\n\nslice3 = append(slice3, \"a\")\nslice3 = append(slice3, \"b\")\n\nslice1[0] = \"b\"\nfmt.Println(slice2, slice1, slice3) // [aaa] [b a] [a b]\n\ncopy(slice2, slice1)                // copy(dest, src) copying is depending on the length of the dest\nfmt.Println(slice2, slice1, slice3) // [b] [b a] [a b]\n\nslice1 = append(slice1, \"c\")\n\ns := slice1[0:2] // by reference from 0 to 2 (not including 2), but it'll not expand\nslice1[0] = \"d\"\nfmt.Println(s, slice1) // [d a] [d a c]\n```\n\n- Maps\n```go\nmaptest := map[string]string{\n\t\"key1\": \"value1\",\n\t\"key2\": \"value2\",\n}\n\nfmt.Println(maptest)\n\nmap2 := make(map[string]string)\nmap2[\"key1\"] = \"value1\"\nmap2[\"key2\"] = \"value2\"\n\ndelete(map2, \"key1\")\n\n// we use ok to check if the key exists and differentiate between default value and the actual value\nv, ok := map2[\"key1\"] // ok is false if key is not present, true otherwise\n\nfmt.Println(v, ok) // prints \" \" false\n\nmap3 := map[string][]string{\n\t\"key1\": []string{\"value1\", \"value2\"}, // redundant type\n\t\"key2\": {\"value1\", \"value2\"},         // redundant type (solved)\n}\n\nfmt.Println(map3)\n```\n\n- Range\n```go\n// Range\n\narr1 := []string{\"zeyad\", \"vvv\", \"drrr\", \"llooo\"}\nmap1 := map[string]string{\n\t\"ass\":  \"asda\",\n\t\"key1\": \"value1\",\n}\n\nfor k, v := range arr1 {\n\tfmt.Println(k, v)\n}\n\nfor k, v := range map1 {\n\tfmt.Println(k, v)\n}\n```\n\n- Functions\n```go\npackage main\n\nimport \"fmt\"\n\nfunc pl(s string) {\n\tfmt.Println(s)\n}\n\nfunc plAll(params ...interface{}) { // interface is a generic datatype, similar to ...rest in javascript\n\tfmt.Println(len(params))\n}\n\nfunc f1(x, y int) int { // similar to f1(x int, y int)\n\treturn x + y\n}\n\nfunc f2(x string) (string, int) { // return multiple values\n\treturn x, len(x) // hello 5\n}\n\nfunc f3(x string) (r string, count int) { // return vars declared here no need to return them\n\tr = x\n\tcount = len(x)\n\treturn\n}\n\nfunc main() {\n\tfmt.Println(f3(\"hello\"))\n\tvar x func(x, y int) int // function as datatype\n\tx = f1\n\tfmt.Println(x(3, 4)) // 7\n}\n```\n\n- Pointers\n```go\npackage main\n\nimport \"fmt\"\n\nfunc set(s *string) {\n\t*s = \"zzz\" // changing the x var as well\n}\n\nfunc main() {\n\tvar x string = \"zeyad\"\n\tset(\u0026x) // sending the reference\n\n\tfmt.Println(x, \u0026x)\n}\n```\n\n- Structs\n```go\npackage main\n\nimport \"fmt\"\n\ntype player struct {\n\tfirstName string\n\tlastName  string\n\tid        int\n}\n\ntype game struct {\n\tplayers map[string]*player // map of reference of structs\n}\n\ntype gameBase struct {\n\tgame // game struct as an \"embedded field\"\n\tnext *gameBase\n}\n\n// create a function on a struct\nfunc (g *game) iteratePlayers() []string {\n\tfmt.Println(\"GGG: \", g.players)\n\tresult := []string{}\n\tfor _, val := range g.players {\n\t\tresult = append(result, val.firstName)\n\t}\n\n\treturn result\n}\n\nfunc main() {\n\n\tg := \u0026game{\n\t\tplayers: make(map[string]*player),\n\t}\n\n\tp1 := player{}\n\tp2 := player{firstName: \"John\", lastName: \"Doe\", id: 2}\n\tg.players[\"p1\"] = \u0026p1\n\tg.players[\"p2\"] = \u0026p2\n\tp1.firstName = \"zeyad\"\n\tfmt.Println(g, p1) // \u0026{map[p1:0xc00010e1b0]} {zeyad  0}\n\tplayerNames := g.iteratePlayers()\n\tfmt.Println(playerNames) // [zeyad John]\n\n\t// chaining\n\tgb := \u0026gameBase{}\n\tgb.iteratePlayers() // This Works\n}\n\n```\n\n- Interfaces\n\n\n## Notes\n- [You cannot use methods on structs if you declared your struct inside function.](https://stackoverflow.com/questions/42010112/implications-of-defining-a-struct-inside-a-function-vs-outside)\n- [Go Variable Scope](https://www.programiz.com/golang/variable-scope)\n\n## Resources\n- [Learn Go with Tests](https://quii.gitbook.io/learn-go-with-tests/)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/programming-languages/javascript":{"title":"Javascript Programming Languages","content":"\n## Articles\n\n-   [When to Use Bind(), Call(), and Apply() in JavaScript.](https://betterprogramming.pub/when-to-use-bind-call-and-apply-in-javascript-1ae9d7fa66d5)\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/programming-languages/notes-on-typescript":{"title":"Notes on Typescript","content":"\n- **Pick** `Pick\u003ctype, keys\u003e`\nPick keys only from type.\n\n- **Omit** `Omit\u003ctype, ‚Äúkey1‚Äù | ‚Äúkey2‚Äù\u003e` **opposite Pick**\nPick all from *type* exclude *keys*.\n\n- **Record** `Record\u003ckeys, type\u003e`\nConstruct object with keys and values of type *type*.\n\n\n\n[typescript](programming-languages/typescript.md)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/programming-languages/programming-languages":{"title":"Programming Languages","content":"\nNotes from my knowledge about programming languages.\n\n- [javascript](programming-languages/javascript.md)\n- [cpp](programming-languages/cpp.md)\n- [golang](golang.md)\n- [typescript](programming-languages/typescript.md)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/programming-languages/typescript":{"title":"Typescript","content":"\n## Articles with Reactjs.\nThis articles I found them useful while you're writing typescript with [[reactjs/reactjs]]\n\n- [Build strongly typed polymorphic components with React and TypeScript](https://blog.logrocket.com/build-strongly-typed-polymorphic-components-react-typescript/)\n- [Useful Patterns by Use Case](https://github.com/typescript-cheatsheets/react/blob/main/docs/advanced/patterns_by_usecase.md)\n- [React TypeScript Cheatsheet](https://react-typescript-cheatsheet.netlify.app/)\n- [TypeScript Generics for People Who Gave Up on Understanding Generics](https://ts.chibicode.com/generics/)\n\n## Advanced Topics\n- [Generics](https://www.typescriptlang.org/docs/handbook/2/generics.html)\n- [Performance](https://github.com/microsoft/TypeScript/wiki/Performance)\n- [ArrayT\u003e vs T[]: Which is better?](https://www.totaltypescript.com/array-types-in-typescript)\n\n## Tutorials\n- [Learn react and typescript ‚≠êÔ∏è](https://youtube.com/playlist?list=PLNqp92_EXZBJ4CBroxVBJEpAXoz1g-naZ)\n- [Advanced Typescript by Matt Pocock ‚≠êÔ∏è](https://youtube.com/playlist?list=PLIvujZeVDLMx040-j1W4WFs1BxuTGdI_b)\n\n## Articles\n- [How To Use Generics in TypeScript](https://www.digitalocean.com/community/tutorials/how-to-use-generics-in-typescript) #generics #typescript \n\n\n## Tools\n- [Typescript coverage.](https://github.com/alexcanessa/typescript-coverage-report)\n\n\n[notes-on-typescript](content/programming-languages/notes-on-typescript.md)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/reactjs/libraries":{"title":"ReactJS Libraries","content":"\n## Libraries [[reactjs]]\nThis includes some bookmarks for reactjs libraries.\n\n## Charts\n- [React Google Charts](https://react-google-charts.com/)\n- [15 React Chart Libraries For Your Web Projects](https://technostacks.com/blog/react-chart-libraries/)\n- [Top 5 React chart libraries](https://blog.logrocket.com/top-5-react-chart-libraries/)\n\n## Image and Gallery\n- [react-slick](https://github.com/akiran/react-slick)\n- \n\n## React Query\n- [Building The Real App With React Query](https://www.smashingmagazine.com/2022/01/building-real-app-react-query/)\n- [Clean API Architecture for React Project](https://www.upbeatcode.com/react/clean-api-architecture-for-react-project/)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/reactjs/nextjs":{"title":"","content":"\n## Building a new app boilerplates\n\n- https://giga-stack.vercel.app/\n- https://refine.new/\n- \n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/reactjs/reactjs":{"title":"ReactJS Articles","content":"### Articles [[reactjs]]\n\n[React Docs](https://beta.reactjs.org/)\n\n* [3 React Component Design Patterns You Should Know About.](https://blog.openreplay.com/3-react-component-design-patterns-you-should-know-about)\n* [‚öõÔ∏è üöÄ React Component Patterns](https://dev.to/alexi\\_be3/react-component-patterns-49ho#provider-pattern).\n* [SOLID Principles in React](https://www.everydayreact.com/articles/solid-principles-in-react) \n* [Ultimate React Component Patterns with Typescript 2.8](https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935)\n* [Add E2E testing to CI/CD - amplify \u0026 cypress](https://amplify-sns.workshop.aws/en/80_e2e_test/00_-cypress.html)\n* [Managing Access Control in a React App](https://levelup.gitconnected.com/access-control-in-a-react-ui-71f1df60f354)\n* [How To Secure React Applications Against XSS Attacks with HTTP-Only Cookies](https://www.digitalocean.com/community/tutorials/how-to-secure-react-applications-against-xss-attacks-with-http-only-cookies)\n* \n\n## Mocking\n- For mocking the APIs in the reactjs code, I use [mswjs](https://github.com/mswjs/msw/) it's easy and powerful, give it a try.\n\n## Blogs\n- https://www.everydayreact.com/articles\n\n## Project Starter\n\n- [NextJS + StorybookJS + Material-UI + Jest + SWR](https://itnext.io/nextjs-storybookjs-material-ui-jest-swr-fe2ff5cb9af8)\n- [Storybook With React \u0026 TypeScript](https://www.erikmudrak.com/post/storybook-with-react-typescript)\n\n## Libraries\n[[libraries]]\n\n## Tricks\n[tricks](reactjs/tricks.md)\n\n## Videos\n- https://youtu.be/bGzanfKVFeU\n\n\n[typescript](content/programming-languages/typescript.md)\n[tech-stacks](content/tech/tech-stacks.md)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/reactjs/tricks":{"title":"Tricks in ReactJS","content":"\n## Forms\n\n* Using forms. [(source)](https://twitter.com/asidorenko\\_/status/1482679799374098433?s=20)\n![[Pasted image 20221024141905.png]]","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/scripts/jira-ticket-git-flow":{"title":"Create a branch from jira ticket and push changes to it","content":"\n# Create a branch from jira ticket and push changes to it.\n\n### Create a branch from jira ticket and push changes to it.\n\nhttps://twitter.com/zeyadetman/status/1483423110774861825\n\n**Code:**\n\n```\n#!bin/bash\n\npushit () {\n    echo \"Getting data...\";\n    jira issue list -a\"Zeyad Etman\" -s\"IN PROGRESS\";\n    echo \"\\nPlease enter ticket id: \"\n    read id;\n    echo \"\\n\"\n    desc=$(jira issue list -q \"key = $id\" --plain);\n    A=$(awk -F\"$id\" '{print $2}' \u003c\u003c\u003c $desc)\n    B=$(awk -F\"In Progress\" '{print $1}' \u003c\u003c\u003c $A | xargs echo -n)\n    commitMessage=\"$id: $B\"\n    echo \"\\n$commitMessage\"\n    echo \"Pushing and committing...\\n\"\n    git checkout -b $id\n    git add .\n    git commit -m \"$commitMessage\"\n    git push origin $id\n\n}\n\npushit\n\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/setup":{"title":"Setup","content":"\nI have some previous experiments about [note-taking](https://www.reddit.com/r/NoteTaking) and building your custom website to share these notes with public, I think this happened because of the mix of my career as a [[frontend]] engineer in this time and being curious about gaining knowledge and trying different things.\n\nThe first note-taking I've used is [evernote](https://evernote.com/), I used it to keep track of my tasks in the college in around 2016, this was a great app for keep track of tasks, assignments, lectures I want to study, lectures I missed. but all of the notes in this time was private and specific to my life, so in that case evernote was suitable for this basic usage, and it was free in multiple devices.\n\nAfter that I tried different apps to take notes and tracking things, Until I settle on this setup.\n\n## Setup\n\n### Tools\n- macbook pro 2019 - 2.4 GHz Quad-Core Intel Core i5 üíª \n- iPhone 11üì± \n- Apple Watch ‚åöÔ∏è \n\n### Apps\n- [streaks](https://streaksapp.com/) is one of the main apps for my setup, I use it to track the habits, including reading, sleeping times, work and breaks, and other small tasks. This app is running on all of my devices and they all share same tasks, I'm keeping them private.\n- [Notion](https://www.notion.so/) I use it to track the private stuff, like long term plans, work notes, religious lessons, side projects plans, reading list. It's a powerful tool for these things, actually I'm new to notion but notion is a rich note-taking app and i found it suitable to me.\n- [Obsidian](https://obsidian.md/) is the [crm](https://en.wikipedia.org/wiki/Content_management_system)-like of this site, and public posts except for [my blog](https://zeyadetman.com) at least until now, I don't have so much working with obsidian but I can list the 3 tools that I've used to build this site in the next sub items.\n\t- [quartz](https://github.com/jackyzha0/quartz) Is the engine of the site, I use it to publish my notes from obsidian vault to the internet.\n\t- [obsidian-git](https://github.com/denolehov/obsidian-git) I use it to sync between obsidian vault and github, to automate the deployment process, it's also helpful to sync the vault data between devices.\n\t- [remotely-save](https://github.com/remotely-save/remotely-save) I use it to backup the vaults on dropbox, to avoid losing data that may happen by the previous tool.\n\n\n### Resources\n- [obsidian publishing workflow](https://notes.aadimator.com/SBYNtPHqsTW9Ck1Kuoxsu/)\n- [setup your digital garden using quartz](https://quartz.jzhao.xyz/notes/setup/)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/system-design/system-design":{"title":"","content":"\n## Articles\n- [Reducing Slack‚Äôs memory footprint](https://slack.engineering/reducing-slacks-memory-footprint/)\n\n## System Design Resources\n- [Front end system design interview - applications](https://www.frontendinterviewhandbook.com/front-end-system-design/applications/)\n- [System design interview guide for Software Engineers](https://www.techinterviewhandbook.org/system-design/)\n- [System design interview for IT companies](https://github.com/checkcheckzz/system-design-interview)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/tech/interview":{"title":"Software Engineering Interview","content":"\n- [Tech Interview Handbook](https://www.techinterviewhandbook.org/)","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/tech/tech-stacks":{"title":"Tech Stacks for building apps","content":"\n- [source](https://twitter.com/steventey/status/1613928952921300992)\n‚óÜ @nextjs ‚Äì framework\n‚óÜ @vercel ‚Äì deployment\n‚óÜ @nextauthjs ‚Äì auth\n‚óÜ @prisma ‚Äì ORM\n‚óÜ @railway ‚Äì postgres\n‚óÜ @tailwindcss ‚Äì CSS\n‚óÜ @framermotion ‚Äì animations\n‚óÜ @radix_ui ‚Äì UI primitives\n‚óÜ @typescript + @PrettierCode + @geteslint ‚Äì code quality\n\n\n\n- [source](https://twitter.com/t3dotgg/status/1657488850472804353)\n[@vercel](https://twitter.com/vercel) for deployments\n[@ClerkDev](https://twitter.com/ClerkDev) for auth\n[@upstash](https://twitter.com/upstash) for redis, cron \u0026 kafka\n[@AxiomFM](https://twitter.com/AxiomFM) for logging\n[@PlanetScale](https://twitter.com/PlanetScale) for database\nhttps://clerk.com -\u003e Auth\n\n\n[Source](https://x.com/namyakhann/status/1692831270143754495?s=46)\nThe ultimate startup tech stack in 2023:\n\nDeploy ‚Üí @Vercel\nDesign ‚Üí @Figma\nAuth ‚Üí @ClerkDev\nPayment ‚Üí @Stripe\nNo Code ‚Üí @Framer\nFramework ‚Üí @Nextjs\nEmail ‚Üí @Resendlabs\nDatabase ‚Üí @Supabase\nDashboard ‚Üí @tremorlabs\nAnimation ‚Üí @Framer Motion\nUI ‚Üí @Tailwindcss @Shadcn UI\n\n\n[Source](https://x.com/realstoman/status/1692834575678910959?s=46)\n\nBuild almost anything with this @reactjs + @typescript  tech stack üöÄ\n\nüî∏Framework: @nextjs\nüî∏Styling: @tailwindcss + @shadcn \nüî∏DB: @PlanetScale or @supabase \nüî∏Auth: NextAuth\nüî∏Forms: @HookForm \nüî∏Charts: @tremorlabs \nüî∏Payments: @stripe \nüî∏Deployment: @vercel \n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null},"/tech/technical-blogs":{"title":"Technical Blogs","content":"\n# Technical Blogs\n\n* [https://v8.dev/](https://v8.dev)\n\n### Typescript and Rust\n\n* [https://fettblog.eu](https://fettblog.eu)\n\n### Backend\n\n* [https://aaronfrancis.com/articles](https://aaronfrancis.com/articles)\n\n### Frontend\n\n* [https://jxnblk.com/](https://jxnblk.com)\n* [https://www.456bereastreet.com/](https://www.456bereastreet.com)\n* [https://umaar.com/dev-tips/](https://umaar.com/dev-tips/)\n* [https://tamalweb.com/](https://tamalweb.com)\n* [https://www.upbeatcode.com/](https://www.upbeatcode.com/)\n\n### System Design and Architecture\n\n* [https://www.quastor.org/](https://www.quastor.org)\n\n### Software Engineering\n\n* [https://katiehempenius.com/](https://katiehempenius.com)\n* [https://nicolodavis.com/](https://nicolodavis.com)\n* [https://ably.com/blog/tag/ably-engineering](https://ably.com/blog/tag/ably-engineering)\n* https://timothya.com/\n* https://www.emadelsaid.com/\n* [https://www.basedash.com/blog](https://www.basedash.com/blog)\n","lastmodified":"2023-08-22T12:26:53.130027189Z","tags":null}}