<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>üë®üèª‚Äçüíª Zeyad&#039;s Notes</title>
      <link>https://notes.zeyadnotes.dev</link>
      <description>Last 50 notes on üë®üèª‚Äçüíª Zeyad&#039;s Notes</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>Architecture</title>
    <link>https://notes.zeyadnotes.dev/advanced/architecture</link>
    <guid>https://notes.zeyadnotes.dev/advanced/architecture</guid>
    <description>&lt;p&gt;Quartz is a static site generator. How does it work?&lt;/p&gt;
&lt;p&gt;This question is best answered by tracing what happens when a user (you!) runs &lt;code&gt;npx quartz build&lt;/code&gt; in the command line:&lt;/p&gt;
&lt;h2 id=&quot;on-the-server&quot;&gt;On the server&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#on-the-server&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;After running &lt;code&gt;npx quartz build&lt;/code&gt;, npm will look at &lt;code&gt;package.json&lt;/code&gt; to find the &lt;code&gt;bin&lt;/code&gt; entry for &lt;code&gt;quartz&lt;/code&gt; which points at &lt;code&gt;./quartz/bootstrap-cli.mjs&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;This file has a &lt;a href=&quot;https://en.wikipedia.org/wiki/Shebang_(Unix)&quot; class=&quot;external&quot;&gt;shebang&lt;/a&gt; line at the top which tells npm to execute it using Node.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bootstrap-cli.mjs&lt;/code&gt; is responsible for a few things:
&lt;ol&gt;
&lt;li&gt;Parsing the command-line arguments using &lt;a href=&quot;http://yargs.js.org/&quot; class=&quot;external&quot;&gt;yargs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Transpiling and bundling the rest of Quartz (which is in Typescript) to regular JavaScript using &lt;a href=&quot;https://esbuild.github.io/&quot; class=&quot;external&quot;&gt;esbuild&lt;/a&gt;. The &lt;code&gt;esbuild&lt;/code&gt; configuration here is slightly special as it also handles &lt;code&gt;.scss&lt;/code&gt; file imports using &lt;a href=&quot;https://www.npmjs.com/package/esbuild-sass-plugin&quot; class=&quot;external&quot;&gt;esbuild-sass-plugin v2&lt;/a&gt;. Additionally, we bundle ‚Äòinline‚Äô client-side scripts (any &lt;code&gt;.inline.ts&lt;/code&gt; file) that components declare using a custom &lt;code&gt;esbuild&lt;/code&gt; plugin that runs another instance of &lt;code&gt;esbuild&lt;/code&gt; which bundles for the browser instead of &lt;code&gt;node&lt;/code&gt;. Modules of both types are imported as plain text.&lt;/li&gt;
&lt;li&gt;Running the local preview server if &lt;code&gt;--serve&lt;/code&gt; is set. This starts two servers:
&lt;ol&gt;
&lt;li&gt;A WebSocket server on port 3001 to handle hot-reload signals. This tracks all inbound connections and sends a ‚Äòrebuild‚Äô message a server-side change is detected (either content or configuration).&lt;/li&gt;
&lt;li&gt;An HTTP file-server on a user defined port (normally 8080) to serve the actual website files.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;--serve&lt;/code&gt; flag is set, it also starts a file watcher to detect source-code changes (e.g. anything that is &lt;code&gt;.ts&lt;/code&gt;, &lt;code&gt;.tsx&lt;/code&gt;, &lt;code&gt;.scss&lt;/code&gt;, or packager files). On a change, we rebuild the module (step 2 above) using esbuild‚Äôs &lt;a href=&quot;https://esbuild.github.io/api/#rebuild&quot; class=&quot;external&quot;&gt;rebuild API&lt;/a&gt; which drastically reduces the build times.&lt;/li&gt;
&lt;li&gt;After transpiling the main Quartz build module (&lt;code&gt;quartz/build.ts&lt;/code&gt;), we write it to a cache file &lt;code&gt;.quartz-cache/transpiled-build.mjs&lt;/code&gt; and then dynamically import this using &lt;code&gt;await import(cacheFile)&lt;/code&gt;. However, we need to be pretty smart about how to bust Node‚Äôs &lt;a href=&quot;https://github.com/nodejs/modules/issues/307&quot; class=&quot;external&quot;&gt;import cache&lt;/a&gt; so we add a random query string to fake Node into thinking it‚Äôs a new module. This does, however, cause memory leaks so we just hope that the user doesn‚Äôt hot-reload their configuration too many times in a single session :)) (it leaks about ~350kB memory on each reload). After importing the module, we then invoke it, passing in the command line arguments we parsed earlier along with a callback function to signal the client to refresh.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;build.ts&lt;/code&gt;, we start by installing source map support manually to account for the query string cache busting hack we introduced earlier. Then, we start processing content:
&lt;ol&gt;
&lt;li&gt;Clean the output directory.&lt;/li&gt;
&lt;li&gt;Recursively glob all files in the &lt;code&gt;content&lt;/code&gt; folder, respecting the &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Parse the Markdown files.
&lt;ol&gt;
&lt;li&gt;Quartz detects the number of threads available and chooses to spawn worker threads if there are &gt;128 pieces of content to parse (rough heuristic). If it needs to spawn workers, it will invoke esbuild again to transpile the worker script &lt;code&gt;quartz/worker.ts&lt;/code&gt;. Then, a work-stealing &lt;a href=&quot;https://www.npmjs.com/package/workerpool&quot; class=&quot;external&quot;&gt;workerpool&lt;/a&gt; is then created and batches of 128 files are assigned to workers.&lt;/li&gt;
&lt;li&gt;Each worker (or just the main thread if there is no concurrency) creates a &lt;a href=&quot;https://github.com/unifiedjs/unified&quot; class=&quot;external&quot;&gt;unified&lt;/a&gt; parser based off of the plugins defined in the &lt;a href=&quot;../configuration&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;configuration&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Parsing has three steps:
&lt;ol&gt;
&lt;li&gt;Read the file into a &lt;a href=&quot;https://github.com/vfile/vfile&quot; class=&quot;external&quot;&gt;vfile&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Applied plugin-defined text transformations over the content.&lt;/li&gt;
&lt;li&gt;Slugify the file path and store it in the data for the file. See the page on &lt;a href=&quot;../advanced/paths&quot; class=&quot;internal&quot; data-slug=&quot;advanced/paths&quot;&gt;paths&lt;/a&gt; for more details about how path logic works in Quartz (spoiler: its complicated).&lt;/li&gt;
&lt;li&gt;Markdown parsing using &lt;a href=&quot;https://www.npmjs.com/package/remark-parse&quot; class=&quot;external&quot;&gt;remark-parse&lt;/a&gt; (text to &lt;a href=&quot;https://github.com/syntax-tree/mdast&quot; class=&quot;external&quot;&gt;mdast&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Apply plugin-defined Markdown-to-Markdown transformations.&lt;/li&gt;
&lt;li&gt;Convert Markdown into HTML using &lt;a href=&quot;https://github.com/remarkjs/remark-rehype&quot; class=&quot;external&quot;&gt;remark-rehype&lt;/a&gt; (&lt;a href=&quot;https://github.com/syntax-tree/mdast&quot; class=&quot;external&quot;&gt;mdast&lt;/a&gt; to &lt;a href=&quot;https://github.com/syntax-tree/hast&quot; class=&quot;external&quot;&gt;hast&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Apply plugin-defined HTML-to-HTML transformations.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Filter out unwanted content using plugins.&lt;/li&gt;
&lt;li&gt;Emit files using plugins.
&lt;ol&gt;
&lt;li&gt;Gather all the static resources (e.g. external CSS, JS modules, etc.) each emitter plugin declares.&lt;/li&gt;
&lt;li&gt;Emitters that emit HTML files do a bit of extra work here as they need to transform the &lt;a href=&quot;https://github.com/syntax-tree/hast&quot; class=&quot;external&quot;&gt;hast&lt;/a&gt; produced in the parse step to JSX. This is done using &lt;a href=&quot;https://github.com/syntax-tree/hast-util-to-jsx-runtime&quot; class=&quot;external&quot;&gt;hast-util-to-jsx-runtime&lt;/a&gt; with the &lt;a href=&quot;https://preactjs.com/&quot; class=&quot;external&quot;&gt;Preact&lt;/a&gt; runtime. Finally, the JSX is rendered to HTML using &lt;a href=&quot;https://github.com/preactjs/preact-render-to-string&quot; class=&quot;external&quot;&gt;preact-render-to-string&lt;/a&gt; which statically renders the JSX to HTML (i.e. doesn‚Äôt care about &lt;code&gt;useState&lt;/code&gt;, &lt;code&gt;useEffect&lt;/code&gt;, or any other React/Preact interactive bits). Here, we also do a bunch of fun stuff like assemble the page &lt;a href=&quot;../layout&quot; class=&quot;internal&quot; data-slug=&quot;layout&quot;&gt;layout&lt;/a&gt; from &lt;code&gt;quartz.layout.ts&lt;/code&gt;, assemble all the inline scripts that actually get shipped to the client, and all the transpiled styles. The bulk of this logic can be found in &lt;code&gt;quartz/components/renderPage.tsx&lt;/code&gt;. Other fun things of note:
&lt;ol&gt;
&lt;li&gt;CSS is minified and transformed using &lt;a href=&quot;https://github.com/parcel-bundler/lightningcss&quot; class=&quot;external&quot;&gt;Lightning CSS&lt;/a&gt; to add vendor prefixes and do syntax lowering.&lt;/li&gt;
&lt;li&gt;Scripts are split into &lt;code&gt;beforeDOMLoaded&lt;/code&gt; and &lt;code&gt;afterDOMLoaded&lt;/code&gt; and are inserted in the &lt;code&gt;&amp;#x3C;head&gt;&lt;/code&gt; and &lt;code&gt;&amp;#x3C;body&gt;&lt;/code&gt; respectively.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Finally, each emitter plugin is responsible for emitting and writing it‚Äôs own emitted files to disk.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;--serve&lt;/code&gt; flag was detected, we also set up another file watcher to detect content changes (only &lt;code&gt;.md&lt;/code&gt; files). We keep a content map that tracks the parsed AST and plugin data for each slug and update this on file changes. Newly added or modified paths are rebuilt and added to the content map. Then, all the filters and emitters are run over the resulting content map. This file watcher is debounced with a threshold of 250ms. On success, we send a client refresh signal using the passed in callback function.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;on-the-client&quot;&gt;On the client&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#on-the-client&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The browser opens a Quartz page and loads the HTML. The &lt;code&gt;&amp;#x3C;head&gt;&lt;/code&gt; also links to page styles (emitted to &lt;code&gt;public/index.css&lt;/code&gt;) and page-critical JS (emitted to &lt;code&gt;public/prescript.js&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Then, once the body is loaded, the browser loads the non-critical JS (emitted to &lt;code&gt;public/postscript.js&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Once the page is done loading, the page will then dispatch a custom synthetic browser event &lt;code&gt;&quot;nav&quot;&lt;/code&gt;. This is used so client-side scripts declared by components can ‚Äòsetup‚Äô anything that requires access to the page DOM.
&lt;ol&gt;
&lt;li&gt;If the &lt;a href=&quot;../features/SPA-Routing&quot; class=&quot;internal&quot; data-slug=&quot;features/SPA-Routing&quot;&gt;enableSPA option&lt;/a&gt; is enabled in the &lt;a href=&quot;../configuration&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;configuration&lt;/a&gt;, this &lt;code&gt;&quot;nav&quot;&lt;/code&gt; event is also fired on any client-navigation to allow for components to unregister and reregister any event handlers and state.&lt;/li&gt;
&lt;li&gt;If it‚Äôs not, we wire up the &lt;code&gt;&quot;nav&quot;&lt;/code&gt; event to just be fired a single time after page load to allow for consistency across how state is setup across both SPA and non-SPA contexts.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The architecture and design of the plugin system was intentionally left pretty vague here as this is described in much more depth in the guide on &lt;a href=&quot;../advanced/making-plugins&quot; class=&quot;internal&quot; data-slug=&quot;advanced/making-plugins&quot;&gt;making your own plugin&lt;/a&gt;.&lt;/p&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Creating your own Quartz components</title>
    <link>https://notes.zeyadnotes.dev/advanced/creating-components</link>
    <guid>https://notes.zeyadnotes.dev/advanced/creating-components</guid>
    <description>&lt;blockquote class=&quot;callout&quot; data-callout=&quot;warning&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;9&quot; x2=&quot;12&quot; y2=&quot;13&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;This guide assumes you have experience writing JavaScript and are familiar with TypeScript.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Normally on the web, we write layout code using HTML which looks something like the following:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;html&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;html&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;article&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;h1&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;An article header&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;h1&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;Some content&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;article&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This piece of HTML represents an article with a leading header that says ‚ÄúAn article header‚Äù and a paragraph that contains the text ‚ÄúSome content‚Äù. This is combined with CSS to style the page and JavaScript to add interactivity.&lt;/p&gt;
&lt;p&gt;However, HTML doesn‚Äôt let you create reusable templates. If you wanted to create a new page, you would need to copy and paste the above snippet and edit the header and content yourself. This isn‚Äôt great if we have a lot of content on our site that shares a lot of similar layout. The smart people who created React also had similar complaints and invented the concept of Components ‚Äî JavaScript functions that return JSX ‚Äî to solve the code duplication problem.&lt;/p&gt;
&lt;p&gt;In effect, components allow you to write a JavaScript function that takes some data and produces HTML as an output. &lt;strong&gt;While Quartz doesn‚Äôt use React, it uses the same component concept to allow you to easily express layout templates in your Quartz site.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;an-example-component&quot;&gt;An Example Component&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#an-example-component&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;constructor&quot;&gt;Constructor&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#constructor&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Component files are written in &lt;code&gt;.tsx&lt;/code&gt; files that live in the &lt;code&gt;quartz/components&lt;/code&gt; folder. These are re-exported in &lt;code&gt;quartz/components/index.ts&lt;/code&gt; so you can use them in layouts and other components more easily.&lt;/p&gt;
&lt;p&gt;Each component file should have a default export that satisfies the &lt;code&gt;QuartzComponentConstructor&lt;/code&gt; function signature. It‚Äôs a function that takes in a single optional parameter &lt;code&gt;opts&lt;/code&gt; and returns a Quartz Component. The type of the parameters &lt;code&gt;opts&lt;/code&gt; is defined by the interface &lt;code&gt;Options&lt;/code&gt; which you as the component creator also decide.&lt;/p&gt;
&lt;p&gt;In your component, you can use the values from the configuration option to change the rendering behaviour inside of your component. For example, the component in the code snippet below will not render if the &lt;code&gt;favouriteNumber&lt;/code&gt; option is below 0.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;interface&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  favouriteNumber&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;number&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;defaultOptions&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  favouriteNumber&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;42&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; ((userOpts&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;opts&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; { &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;userOpts&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;defaultOpts }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;YourComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(props&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponentProps&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;opts&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.favouriteNumber &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;null&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;My favourite number is {&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;opts&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.favouriteNumber}&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; YourComponent&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;satisfies&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponentConstructor&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;props&quot;&gt;Props&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#props&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Quartz component itself (lines 11-17 highlighted above) looks like a React component. It takes in properties (sometimes called &lt;a href=&quot;https://react.dev/learn/passing-props-to-a-component&quot; class=&quot;external&quot;&gt;props&lt;/a&gt;) and returns JSX.&lt;/p&gt;
&lt;p&gt;All Quartz components accept the same set of props:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;quartz/components/types.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// simplified for sake of demonstration&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponentProps&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  fileData&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzPluginData&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  cfg&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;GlobalConfiguration&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  tree&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzPluginData&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  allFiles&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzPluginData&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[]&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  displayClass&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;mobile-only&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;desktop-only&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fileData&lt;/code&gt;: Any metadata &lt;a href=&quot;../advanced/making-plugins&quot; class=&quot;internal&quot; data-slug=&quot;advanced/making-plugins&quot;&gt;plugins&lt;/a&gt; may have added to the current page.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fileData.slug&lt;/code&gt;: slug of the current page.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fileData.frontmatter&lt;/code&gt;: any frontmatter parsed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cfg&lt;/code&gt;: The &lt;code&gt;configuration&lt;/code&gt; field in &lt;code&gt;quartz.config.ts&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tree&lt;/code&gt;: the resulting &lt;a href=&quot;https://github.com/syntax-tree/hast&quot; class=&quot;external&quot;&gt;HTML AST&lt;/a&gt; after processing and transforming the file. This is useful if you‚Äôd like to render the content using &lt;a href=&quot;https://github.com/syntax-tree/hast-util-to-jsx-runtime&quot; class=&quot;external&quot;&gt;hast-util-to-jsx-runtime&lt;/a&gt; (you can find an example of this in &lt;code&gt;quartz/components/pages/Content.tsx&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allFiles&lt;/code&gt;: Metadata for all files that have been parsed. Useful for doing page listings or figuring out the overall site structure.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;displayClass&lt;/code&gt;: a utility class that indicates a preference from the user about how to render it in a mobile or desktop setting. Helpful if you want to conditionally hide a component on mobile or desktop.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;styling&quot;&gt;Styling&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#styling&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Quartz components can also define a &lt;code&gt;.css&lt;/code&gt; property on the actual function component which will get picked up by Quartz. This is expected to be a CSS string which can either be inlined or imported from a &lt;code&gt;.scss&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Note that inlined styles &lt;strong&gt;must&lt;/strong&gt; be plain vanilla CSS:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;quartz/components/YourComponent.tsx&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (() &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;YourComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;() {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;red-text&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;Example Component&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;YourComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.css &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;  p.red-text {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;    color: red;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;  `&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; YourComponent&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;satisfies&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponentConstructor&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Imported styles, however, can be from SCSS files:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;quartz/components/YourComponent.tsx&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// assuming your stylesheet is in quartz/components/styles/YourComponent.scss&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; styles &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;./styles/YourComponent.scss&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (() &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;YourComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;() {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;Example Component&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;YourComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.css &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; styles&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; YourComponent&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;satisfies&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponentConstructor&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;warning&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;9&quot; x2=&quot;12&quot; y2=&quot;13&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Quartz does not use CSS modules so any styles you declare here apply &lt;em&gt;globally&lt;/em&gt;. If you only want it to apply to your component, make sure you use specific class names and selectors.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;scripts-and-interactivity&quot;&gt;Scripts and Interactivity&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#scripts-and-interactivity&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;What about interactivity? Suppose you want to add an-click handler for example. Like the &lt;code&gt;.css&lt;/code&gt; property on the component, you can also declare &lt;code&gt;.beforeDOMLoaded&lt;/code&gt; and &lt;code&gt;.afterDOMLoaded&lt;/code&gt; properties that are strings that contain the script.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;quartz/components/YourComponent.tsx&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (() &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;YourComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;() {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;button&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;btn&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;Click me&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;button&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;YourComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.beforeDOM &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;  console.log(&quot;hello from before the page loads!&quot;)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;  `&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;YourComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.afterDOM &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;  document.getElementById(&#039;btn&#039;).onclick = () =&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;    alert(&#039;button clicked!&#039;)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;  `&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; YourComponent&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;satisfies&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponentConstructor&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;tip&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;For those coming from React, Quartz components are different from React components in that it only uses JSX for templating and layout. Hooks like &lt;code&gt;useEffect&lt;/code&gt;, &lt;code&gt;useState&lt;/code&gt;, etc. are not rendered and other properties that accept functions like &lt;code&gt;onClick&lt;/code&gt; handlers will not work. Instead, do it using a regular JS script that modifies the DOM element directly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As the names suggest, the &lt;code&gt;.beforeDOMLoaded&lt;/code&gt; scripts are executed &lt;em&gt;before&lt;/em&gt; the page is done loading so it doesn‚Äôt have access to any elements on the page. This is mostly used to prefetch any critical data.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;.afterDOMLoaded&lt;/code&gt; script executes once the page has been completely loaded. This is a good place to setup anything that should last for the duration of a site visit (e.g. getting something saved from local storage).&lt;/p&gt;
&lt;p&gt;If you need to create an &lt;code&gt;afterDOMLoaded&lt;/code&gt; script that depends on &lt;em&gt;page specific&lt;/em&gt; elements that may change when navigating to a new page, you can listen for the &lt;code&gt;&quot;nav&quot;&lt;/code&gt; event that gets fired whenever a page loads (which may happen on navigation if &lt;a href=&quot;../features/SPA-Routing&quot; class=&quot;internal&quot; data-slug=&quot;features/SPA-Routing&quot;&gt;SPA Routing&lt;/a&gt; is enabled).&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;document&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.addEventListener&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;nav&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; () &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// do page specific logic here&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// e.g. attach event listeners&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;toggleSwitch&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;document&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.querySelector&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;#switch&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;as&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;HTMLInputElement&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;toggleSwitch&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.removeEventListener&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;change&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; switchTheme)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;toggleSwitch&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.addEventListener&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;change&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; switchTheme)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is best practice to also unmount any existing event handlers to prevent memory leaks.&lt;/p&gt;
&lt;h4 id=&quot;importing-code&quot;&gt;Importing Code&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#importing-code&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Of course, it isn‚Äôt always practical (nor desired!) to write your code as a string literal in the component.&lt;/p&gt;
&lt;p&gt;Quartz supports importing component code through &lt;code&gt;.inline.ts&lt;/code&gt; files.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;quartz/components/YourComponent.tsx&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// @ts-ignore: typescript doesn&#039;t know about our inline bundling system&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// so we need to silence the error&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; script &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;./scripts/graph.inline&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (() &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;YourComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;() {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;button&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;btn&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;Click me&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;button&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;YourComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.afterDOM &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; script&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; YourComponent&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;satisfies&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponentConstructor&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz/components/scripts/graph.inline.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// any imports here are bundled for the browser&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;as&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; d3 &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;d3&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;document&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.getElementById&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;btn&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;).&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;onclick&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; () &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;alert&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;button clicked!&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally, like what is shown in the example above, you can import packages in &lt;code&gt;.inline.ts&lt;/code&gt; files. This will be bundled by Quartz and included in the actual script.&lt;/p&gt;
&lt;h3 id=&quot;using-a-component&quot;&gt;Using a Component&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#using-a-component&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;After creating your custom component, re-export it in &lt;code&gt;quartz/components/index.ts&lt;/code&gt;:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz/components/index.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; ArticleTitle &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;./ArticleTitle&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; Content &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;./pages/Content&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; Darkmode &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;./Darkmode&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; YourComponent &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;./YourComponent&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; { ArticleTitle&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; Content&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; Darkmode&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; YourComponent }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, you can use it like any other component in &lt;code&gt;quartz.layout.ts&lt;/code&gt; via &lt;code&gt;Component.YourComponent()&lt;/code&gt;. See the &lt;a href=&quot;../configuration#layout&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;layout&lt;/a&gt; section for more details.&lt;/p&gt;
&lt;p&gt;As Quartz components are just functions that return React components, you can compositionally use them in other Quartz components.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;quartz/components/AnotherComponent.tsx&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; YourComponent &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;./YourComponent&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (() &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;AnotherComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(props&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponentProps&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;It&#039;s nested!&amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;YourComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;props} /&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &amp;#x3C;/&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    )&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; AnotherComponent&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;satisfies&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponentConstructor&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;tip&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Look in &lt;code&gt;quartz/components&lt;/code&gt; for more examples of components in Quartz as reference for your own components!&lt;/p&gt;
&lt;/blockquote&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Advanced</title>
    <link>https://notes.zeyadnotes.dev/advanced/</link>
    <guid>https://notes.zeyadnotes.dev/advanced/</guid>
    <description></description>
    <pubDate>Wed, 20 Sep 2023 23:08:54 GMT</pubDate>
  </item><item>
    <title>Making your own plugins</title>
    <link>https://notes.zeyadnotes.dev/advanced/making-plugins</link>
    <guid>https://notes.zeyadnotes.dev/advanced/making-plugins</guid>
    <description>&lt;blockquote class=&quot;callout&quot; data-callout=&quot;warning&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;9&quot; x2=&quot;12&quot; y2=&quot;13&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;This part of the documentation will assume you have working knowledge in TypeScript and will include code snippets that describe the interface of what Quartz plugins should look like.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Quartz‚Äôs plugins are a series of transformations over content. This is illustrated in the diagram of the processing pipeline below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/quartz-transform-pipeline.png&quot; width=&quot;auto&quot; height=&quot;auto&quot;&gt;&lt;/p&gt;
&lt;p&gt;All plugins are defined as a function that takes in a single parameter for options &lt;code&gt;type OptionType = object | undefined&lt;/code&gt; and return an object that corresponds to the type of plugin it is.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;OptionType&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;object&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;undefined&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzPlugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;extends&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;OptionType&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (opts&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzPluginInstance&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzPluginInstance&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzTransformerPluginInstance&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzFilterPluginInstance&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzEmitterPluginInstance&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following sections will go into detail for what methods can be implemented for each plugin type. Before we do that, let‚Äôs clarify a few more ambiguous types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BuildCtx&lt;/code&gt; is defined in &lt;code&gt;quartz/ctx.ts&lt;/code&gt;. It consists of
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;argv&lt;/code&gt;: The command line arguments passed to the Quartz &lt;a href=&quot;../build&quot; class=&quot;internal&quot; data-slug=&quot;build&quot;&gt;build&lt;/a&gt; command&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cfg&lt;/code&gt;: The full Quartz &lt;a href=&quot;../configuration&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allSlugs&lt;/code&gt;: a list of all the valid content slugs (see &lt;a href=&quot;../advanced/paths&quot; class=&quot;internal&quot; data-slug=&quot;advanced/paths&quot;&gt;paths&lt;/a&gt; for more information on what a &lt;code&gt;ServerSlug&lt;/code&gt; is)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;StaticResources&lt;/code&gt; is defined in &lt;code&gt;quartz/resources.tsx&lt;/code&gt;. It consists of
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;css&lt;/code&gt;: a list of URLs for stylesheets that should be loaded&lt;/li&gt;
&lt;li&gt;&lt;code&gt;js&lt;/code&gt;: a list of scripts that should be loaded. A script is described with the &lt;code&gt;JSResource&lt;/code&gt; type which is also defined in &lt;code&gt;quartz/resources.tsx&lt;/code&gt;. It allows you to define a load time (either before or after the DOM has been loaded), whether it should be a module, and either the source URL or the inline content of the script.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;transformers&quot;&gt;Transformers&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#transformers&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Transformers &lt;strong&gt;map&lt;/strong&gt; over content, taking a Markdown file and outputting modified content or adding metadata to the file itself.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzTransformerPluginInstance&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;textTransform&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (ctx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;BuildCtx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; src&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Buffer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Buffer&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;markdownPlugins&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (ctx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;BuildCtx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;PluggableList&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;htmlPlugins&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (ctx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;BuildCtx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;PluggableList&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;externalResources&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (ctx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;BuildCtx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Partial&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;StaticResources&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All transformer plugins must define at least a &lt;code&gt;name&lt;/code&gt; field to register the plugin and a few optional functions that allow you to hook into various parts of transforming a single Markdown file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;textTransform&lt;/code&gt; performs a text-to-text transformation &lt;em&gt;before&lt;/em&gt; a file is parsed into the &lt;a href=&quot;https://github.com/syntax-tree/mdast&quot; class=&quot;external&quot;&gt;Markdown AST&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdownPlugins&lt;/code&gt; defines a list of &lt;a href=&quot;https://github.com/remarkjs/remark/blob/main/doc/plugins.md&quot; class=&quot;external&quot;&gt;remark plugins&lt;/a&gt;. &lt;code&gt;remark&lt;/code&gt; is a tool that transforms Markdown to Markdown in a structured way.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;htmlPlugins&lt;/code&gt; defines a list of &lt;a href=&quot;https://github.com/rehypejs/rehype/blob/main/doc/plugins.md&quot; class=&quot;external&quot;&gt;rehype plugins&lt;/a&gt;. Similar to how &lt;code&gt;remark&lt;/code&gt; works, &lt;code&gt;rehype&lt;/code&gt; is a tool that transforms HTML to HTML in a structured way.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;externalResources&lt;/code&gt; defines any external resources the plugin may need to load on the client-side for it to work properly.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Normally for both &lt;code&gt;remark&lt;/code&gt; and &lt;code&gt;rehype&lt;/code&gt;, you can find existing plugins that you can use to . If you‚Äôd like to create your own &lt;code&gt;remark&lt;/code&gt; or &lt;code&gt;rehype&lt;/code&gt; plugin, checkout the &lt;a href=&quot;https://unifiedjs.com/learn/guide/create-a-plugin/&quot; class=&quot;external&quot;&gt;guide to creating a plugin&lt;/a&gt; using &lt;code&gt;unified&lt;/code&gt; (the underlying AST parser and transformer library).&lt;/p&gt;
&lt;p&gt;A good example of a transformer plugin that borrows from the &lt;code&gt;remark&lt;/code&gt; and &lt;code&gt;rehype&lt;/code&gt; ecosystems is the &lt;a href=&quot;../features/Latex&quot; class=&quot;internal&quot; data-slug=&quot;features/Latex&quot;&gt;Latex&lt;/a&gt; plugin:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz/plugins/transformers/latex.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; remarkMath &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;remark-math&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; rehypeKatex &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;rehype-katex&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; rehypeMathjax &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;rehype-mathjax/svg.js&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; { QuartzTransformerPlugin } &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;../types&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;interface&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  renderEngine&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;katex&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;mathjax&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Latex&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzTransformerPlugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (opts&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;engine&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;opts&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;?.renderEngine &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;??&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;katex&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;Latex&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;markdownPlugins&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;() {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [remarkMath]&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;htmlPlugins&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;() {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (engine &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;===&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;katex&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// if you need to pass options into a plugin, you&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// can use a tuple of [plugin, options]&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [[rehypeKatex&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; { output&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;html&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; }]]&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      } &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [rehypeMathjax]&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;externalResources&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;() {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (engine &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;===&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;katex&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          css&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          js&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;              src&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/katex@0.16.7/dist/contrib/copy-tex.min.js&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;              loadTime&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;afterDOMReady&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;              contentType&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;external&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          ]&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      } &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {}&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another common thing that transformer plugins will do is parse a file and add extra data for that file:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;AddWordCount&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzTransformerPlugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; () &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;AddWordCount&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;markdownPlugins&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;() {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        () &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (tree&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; file) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// tree is an `mdast` root element&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// file is a `vfile`&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.value&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;words&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.split&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;).&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;length&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.wordcount &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; words&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      ]&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// tell typescript about our custom data fields we are adding&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// other plugins will then also be aware of this data field&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;declare&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;module&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;vfile&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;interface&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;DataMap&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    wordcount&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;number&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, you can also perform transformations over Markdown or HTML ASTs using the &lt;code&gt;visit&lt;/code&gt; function from the &lt;code&gt;unist-util-visit&lt;/code&gt; package or the &lt;code&gt;findAndReplace&lt;/code&gt; function from the &lt;code&gt;mdast-util-find-and-replace&lt;/code&gt; package.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;TextTransforms&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzTransformerPlugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; () &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;TextTransforms&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;markdownPlugins&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;() {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [() &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (tree&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; file) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// replace _text_ with the italics version&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;findAndReplace&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(tree&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt; /_(.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;)_/&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (_value&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;capture&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[]) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// inner is the text inside of the () of the regex&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;inner&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; capture&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// return an mdast node&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// https://github.com/syntax-tree/mdast&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;              type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;emphasis&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;              children&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [{ type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&#039;text&#039;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; inner }]&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          })&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;         &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// remove all links (replace with just the link content)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;         &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// match by &#039;type&#039; field on an mdast node&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;         &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// https://github.com/syntax-tree/mdast#link in this example&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;visit&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(tree&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;link&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (link&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Link&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;              type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;paragraph&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;              children: [{ type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&#039;text&#039;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; value&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;link&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.title }]&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;            }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          })&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      }]&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All transformer plugins can be found under &lt;code&gt;quartz/plugins/transformers&lt;/code&gt;. If you decide to write your own transformer plugin, don‚Äôt forget to re-export it under &lt;code&gt;quartz/plugins/transformers/index.ts&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A parting word: transformer plugins are quite complex so don‚Äôt worry if you don‚Äôt get them right away. Take a look at the built in transformers and see how they operate over content to get a better sense for how to accomplish what you are trying to do.&lt;/p&gt;
&lt;h2 id=&quot;filters&quot;&gt;Filters&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#filters&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Filters &lt;strong&gt;filter&lt;/strong&gt; content, taking the output of all the transformers and determining what files to actually keep and what to discard.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzFilterPlugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;extends&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;OptionType&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  opts&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzFilterPluginInstance&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzFilterPluginInstance&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;shouldPublish&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(ctx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;BuildCtx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; content&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;ProcessedContent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;boolean&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A filter plugin must define a &lt;code&gt;name&lt;/code&gt; field and a &lt;code&gt;shouldPublish&lt;/code&gt; function that takes in a piece of content that has been processed by all the transformers and returns a &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending on whether it should be passed to the emitter plugins or not.&lt;/p&gt;
&lt;p&gt;For example, here is the built-in plugin for removing drafts:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz/plugins/filters/draft.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; { QuartzFilterPlugin } &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;../types&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;RemoveDrafts&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzFilterPlugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&amp;#x3C;{}&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; () &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; ({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;RemoveDrafts&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;shouldPublish&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(_ctx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [_tree&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; vfile]) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// uses frontmatter parsed from transformers&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;draftFlag&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;boolean&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;vfile&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;?.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;frontmatter&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;?.draft &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;??&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;false&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;draftFlag&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;emitters&quot;&gt;Emitters&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#emitters&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Emitters &lt;strong&gt;reduce&lt;/strong&gt; over content, taking in a list of all the transformed and filtered content and creating output files.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzEmitterPlugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;extends&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;OptionType&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  opts&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzEmitterPluginInstance&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzEmitterPluginInstance&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;emit&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    ctx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;BuildCtx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    content&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;ProcessedContent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[]&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    resources&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;StaticResources&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    emitCallback&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;EmitCallback&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  )&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Promise&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FilePath&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[]&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;getQuartzComponents&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(ctx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;BuildCtx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[]&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An emitter plugin must define a &lt;code&gt;name&lt;/code&gt; field an &lt;code&gt;emit&lt;/code&gt; function and a &lt;code&gt;getQuartzComponents&lt;/code&gt; function. &lt;code&gt;emit&lt;/code&gt; is responsible for looking at all the parsed and filtered content and then appropriately creating files and returning a list of paths to files the plugin created.&lt;/p&gt;
&lt;p&gt;Creating new files can be done via regular Node &lt;a href=&quot;https://nodejs.org/api/fs.html&quot; class=&quot;external&quot;&gt;fs module&lt;/a&gt; (i.e. &lt;code&gt;fs.cp&lt;/code&gt; or &lt;code&gt;fs.writeFile&lt;/code&gt;) or via the &lt;code&gt;emitCallback&lt;/code&gt; if you are creating files that contain text. The &lt;code&gt;emitCallback&lt;/code&gt; function is the 4th argument of the emit function. It‚Äôs interface looks something like this:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;EmitCallback&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (data&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// the name of the file to emit (not including the file extension)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  slug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;ServerSlug&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// the file extension&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  ext&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;`.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;${&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;`&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// the file content to add&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  content&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Promise&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FilePath&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is a thin wrapper around writing to the appropriate output folder and ensuring that intermediate directories exist. If you choose to use the native Node &lt;code&gt;fs&lt;/code&gt; APIs, ensure you emit to the &lt;code&gt;argv.output&lt;/code&gt; folder as well.&lt;/p&gt;
&lt;p&gt;If you are creating an emitter plugin that needs to render components, there are three more things to be aware of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Your component should use &lt;code&gt;getQuartzComponents&lt;/code&gt; to declare a list of &lt;code&gt;QuartzComponents&lt;/code&gt; that it uses to construct the page. See the page on &lt;a href=&quot;../advanced/creating-components&quot; class=&quot;internal&quot; data-slug=&quot;advanced/creating-components&quot;&gt;creating components&lt;/a&gt; for more information.&lt;/li&gt;
&lt;li&gt;You can use the &lt;code&gt;renderPage&lt;/code&gt; function defined in &lt;code&gt;quartz/components/renderPage.tsx&lt;/code&gt; to render Quartz components into HTML.&lt;/li&gt;
&lt;li&gt;If you need to render an HTML AST to JSX, you can use the &lt;code&gt;toJsxRuntime&lt;/code&gt; function from &lt;code&gt;hast-util-to-jsx-runtime&lt;/code&gt; library. An example of this can be found in &lt;code&gt;quartz/components/pages/Content.tsx&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, the following is a simplified version of the content page plugin that renders every single page.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;quartz/plugins/emitters/contentPage.tsx&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;tsx&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;ContentPage&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzEmitterPlugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; () &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// construct the layout&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;layout&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FullPageLayout&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;sharedPageComponents&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;defaultContentPageLayout&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    pageBody&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Content&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; { &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;head&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;header&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;beforeBody&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;pageBody&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;left&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;right&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;footer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; } &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; layout&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;ContentPage&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;getQuartzComponents&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;() {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [head&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;header&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;beforeBody&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; pageBody&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;left&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;right&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; footer]&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;async&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;emit&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(ctx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; content&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; resources&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; emit)&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Promise&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;&amp;#x3C;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FilePath&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[]&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;cfg&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;ctx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;cfg&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.configuration&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;fps&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FilePath&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; []&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;allFiles&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.map&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;((c) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; c[&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;].data)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;tree&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;of&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; content) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;slug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;canonicalizeServer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.slug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;externalResources&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;pageResources&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(slug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; resources)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;componentData&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponentProps&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          fileData&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.data&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          externalResources&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          cfg&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          children&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; []&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          tree&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          allFiles&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;content&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;renderPage&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(slug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; componentData&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; opts&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; externalResources)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;fp&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;emit&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          content&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          slug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;file&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;data&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.slug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          ext&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;.html&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        })&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;fps&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.push&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(fp)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; fps&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that it takes in a &lt;code&gt;FullPageLayout&lt;/code&gt; as the options. It‚Äôs made by combining a &lt;code&gt;SharedLayout&lt;/code&gt; and a &lt;code&gt;PageLayout&lt;/code&gt; both of which are provided through the &lt;code&gt;quartz.layout.ts&lt;/code&gt; file.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;tip&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Look in &lt;code&gt;quartz/plugins&lt;/code&gt; for more examples of plugins in Quartz as reference for your own plugins!&lt;/p&gt;
&lt;/blockquote&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Paths in Quartz</title>
    <link>https://notes.zeyadnotes.dev/advanced/paths</link>
    <guid>https://notes.zeyadnotes.dev/advanced/paths</guid>
    <description>&lt;p&gt;Paths are pretty complex to reason about because, especially for a static site generator, they can come from so many places.&lt;/p&gt;
&lt;p&gt;A full file path to a piece of content? Also a path. What about a slug for a piece of content? Yet another path.&lt;/p&gt;
&lt;p&gt;It would be silly to type these all as &lt;code&gt;string&lt;/code&gt; and call it a day as it‚Äôs pretty common to accidentally mistake one type of path for another. Unfortunately, TypeScript does not have &lt;a href=&quot;https://en.wikipedia.org/wiki/Nominal_type_system&quot; class=&quot;external&quot;&gt;nominal types&lt;/a&gt; for type aliases meaning even if you made custom types of a server-side slug or a client-slug slug, you can still accidentally assign one to another and TypeScript wouldn‚Äôt catch it.&lt;/p&gt;
&lt;p&gt;Luckily, we can mimic nominal typing using &lt;a href=&quot;https://www.typescriptlang.org/play#example/nominal-typing&quot; class=&quot;external&quot;&gt;brands&lt;/a&gt;.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// instead of&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FullSlug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// we do&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;type&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FullSlug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; { __brand&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;full&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// that way, the following will fail typechecking&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;slug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FullSlug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;some random string&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While this prevents most typing mistakes &lt;em&gt;within&lt;/em&gt; our nominal typing system (e.g. mistaking a server slug for a client slug), it doesn‚Äôt prevent us from &lt;em&gt;accidentally&lt;/em&gt; mistaking a string for a client slug when we forcibly cast it.&lt;/p&gt;
&lt;p&gt;Thus, we still need to be careful when casting from a string to one of these nominal types in the ‚Äòentrypoints‚Äô, illustrated with hexagon shapes in the diagram below.&lt;/p&gt;
&lt;p&gt;The following diagram draws the relationships between all the path sources, nominal path types, and what functions in &lt;code&gt;quartz/path.ts&lt;/code&gt; convert between them.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;mermaid&quot;&gt;graph LR
    Browser{{Browser}} --&gt; Window{{Body}} &amp;#x26; LinkElement{{Link Element}}
    Window --&quot;getFullSlug()&quot;--&gt; FullSlug[Full Slug]
    LinkElement --&quot;.href&quot;--&gt; Relative[Relative URL]
    FullSlug --&quot;simplifySlug()&quot; --&gt; SimpleSlug[Simple Slug]
    SimpleSlug --&quot;pathToRoot()&quot;--&gt; Relative
    SimpleSlug --&quot;resolveRelative()&quot; --&gt; Relative
    MD{{Markdown File}} --&gt; FilePath{{File Path}} &amp;#x26; Links[Markdown links]
    Links --&quot;transformLink()&quot;--&gt; Relative
    FilePath --&quot;slugifyFilePath()&quot;--&gt; FullSlug[Full Slug]
    style FullSlug stroke-width:4px
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here are the main types of slugs with a rough description of each type of path:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FilePath&lt;/code&gt;: a real file path to a file on disk. Cannot be relative and must have a file extension.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FullSlug&lt;/code&gt;: cannot be relative and may not have leading or trailing slashes. It can have &lt;code&gt;index&lt;/code&gt; as it‚Äôs last segment. Use this wherever possible is it‚Äôs the most ‚Äògeneral‚Äô interpretation of a slug.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SimpleSlug&lt;/code&gt;: cannot be relative and shouldn‚Äôt have &lt;code&gt;/index&lt;/code&gt; as an ending or a file extension. It &lt;em&gt;can&lt;/em&gt; however have a trailing slash to indicate a folder path.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RelativeURL&lt;/code&gt;: must start with &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;..&lt;/code&gt; to indicate it‚Äôs a relative URL. Shouldn‚Äôt have &lt;code&gt;/index&lt;/code&gt; as an ending or a file extension but can contain a trailing slash.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get a clearer picture of how these relate to each other, take a look at the path tests in &lt;code&gt;quartz/path.test.ts&lt;/code&gt;.&lt;/p&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Authoring Content</title>
    <link>https://notes.zeyadnotes.dev/authoring-content</link>
    <guid>https://notes.zeyadnotes.dev/authoring-content</guid>
    <description>&lt;p&gt;All of the content in your Quartz should go in the¬†&lt;code&gt;/content&lt;/code&gt;¬†folder. The content for the home page of your Quartz lives in &lt;code&gt;content/index.md&lt;/code&gt;. If you‚Äôve &lt;a href=&quot;./#-get-started&quot; class=&quot;internal&quot; data-slug=&quot;&quot;&gt;setup Quartz&lt;/a&gt; already, this folder should already be initailized. Any Markdown in this folder will get processed by Quartz.&lt;/p&gt;
&lt;p&gt;It is recommended that you use &lt;a href=&quot;https://obsidian.md/&quot; class=&quot;external&quot;&gt;Obsidian&lt;/a&gt; as a way to edit and maintain your Quartz. It comes with a nice editor and graphical interface to preview, edit, and link your local files and attachments.&lt;/p&gt;
&lt;p&gt;Got everything setup? Let‚Äôs &lt;a href=&quot;./build&quot; class=&quot;internal&quot; data-slug=&quot;build&quot;&gt;build&lt;/a&gt; and preview your Quartz locally!&lt;/p&gt;
&lt;h2 id=&quot;syntax&quot;&gt;Syntax&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#syntax&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As Quartz uses Markdown files as the main way of writing content, it fully supports Markdown syntax. By default, Quartz also ships with a few syntax extensions like &lt;a href=&quot;https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax&quot; class=&quot;external&quot;&gt;Github Flavored Markdown&lt;/a&gt; (footnotes, strikethrough, tables, tasklists) and &lt;a href=&quot;https://help.obsidian.md/Editing+and+formatting/Obsidian+Flavored+Markdown&quot; class=&quot;external&quot;&gt;Obsidian Flavored Markdown&lt;/a&gt; (&lt;a href=&quot;./features/callouts&quot; class=&quot;internal&quot; data-slug=&quot;features/callouts&quot;&gt;callouts&lt;/a&gt;, &lt;a href=&quot;./features/wikilinks&quot; class=&quot;internal&quot; data-slug=&quot;features/wikilinks&quot;&gt;wikilinks&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Additionally, Quartz also allows you to specify additional metadata in your notes called &lt;strong&gt;frontmatter&lt;/strong&gt;.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;md&quot; data-theme=&quot;default&quot;&gt;content/note.md&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;md&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;md&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;---&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;title&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;Example Title&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;draft&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;false&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;tags&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  - &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;example-tag&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;---&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;The rest of your content lives here. You can use &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text); font-weight: bold&quot;&gt;**Markdown**&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; here :)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some common frontmatter fields that are natively supported by Quartz:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;title&lt;/code&gt;: Title of the page. If it isn‚Äôt provided, Quartz will use the name of the file as the title.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aliases&lt;/code&gt;: Other names for this note. This is a list of strings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;draft&lt;/code&gt;: Whether to publish the page or not. This is one way to make &lt;a href=&quot;./features/private-pages&quot; class=&quot;internal&quot; data-slug=&quot;features/private-pages&quot;&gt;pages private&lt;/a&gt; in Quartz.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date&lt;/code&gt;: A string representing the day the note was published. Normally uses &lt;code&gt;YYYY-MM-DD&lt;/code&gt; format.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;syncing-your-content&quot;&gt;Syncing your Content&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#syncing-your-content&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When your Quartz is at a point you‚Äôre happy with, you can save your changes to GitHub by doing &lt;code&gt;npx quartz sync&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;tip&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Flags and options &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;For full help options, you can run &lt;code&gt;npx quartz sync --help&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Most of these have sensible defaults but you can override them if you have a custom setup:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--directory&lt;/code&gt;: the content folder. This is normally just &lt;code&gt;content&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--verbose&lt;/code&gt;: print out extra logging information&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--commit&lt;/code&gt; or &lt;code&gt;--no-commit&lt;/code&gt;: whether to make a &lt;code&gt;git&lt;/code&gt; commit for your changes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--push&lt;/code&gt; or &lt;code&gt;--no-push&lt;/code&gt;: whether to push updates to your GitHub fork of Quartz&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--pull&lt;/code&gt; or &lt;code&gt;--no-pull&lt;/code&gt;: whether to try and pull in any updates from your GitHub fork (i.e. from other devices) before pushing&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    <pubDate>Thu, 24 Aug 2023 15:14:52 GMT</pubDate>
  </item><item>
    <title>Building your Quartz</title>
    <link>https://notes.zeyadnotes.dev/build</link>
    <guid>https://notes.zeyadnotes.dev/build</guid>
    <description>&lt;p&gt;Once you‚Äôve &lt;a href=&quot;./#-get-started&quot; class=&quot;internal&quot; data-slug=&quot;&quot;&gt;initialized&lt;/a&gt; Quartz, let‚Äôs see what it looks like locally:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;npx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;quartz&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;build&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;--serve&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will start a local web server to run your Quartz on your computer. Open a web browser and visit &lt;code&gt;http://localhost:8080/&lt;/code&gt; to view it.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;tip&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Flags and options &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;For full help options, you can run &lt;code&gt;npx quartz build --help&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Most of these have sensible defaults but you can override them if you have a custom setup:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--directory&lt;/code&gt;: the content folder. This is normally just &lt;code&gt;content&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--verbose&lt;/code&gt;: print out extra logging information&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--output&lt;/code&gt;: the output folder. This is normally just &lt;code&gt;public&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--serve&lt;/code&gt;: run a local hot-reloading server to preview your Quartz&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--port&lt;/code&gt;: what port to run the local preview server on&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--concurrency&lt;/code&gt;: how many threads to use to parse notes&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Configuration</title>
    <link>https://notes.zeyadnotes.dev/configuration</link>
    <guid>https://notes.zeyadnotes.dev/configuration</guid>
    <description>&lt;p&gt;Quartz is meant to be extremely configurable, even if you don‚Äôt know any coding. Most of the configuration you should need can be done by just editing &lt;code&gt;quartz.config.ts&lt;/code&gt; or changing &lt;a href=&quot;./layout&quot; class=&quot;internal&quot; data-slug=&quot;layout&quot;&gt;the layout&lt;/a&gt; in &lt;code&gt;quartz.layout.ts&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;tip&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;If you edit Quartz configuration using a text-editor that has TypeScript language support like VSCode, it will warn you when you you‚Äôve made an error in your configuration, helping you avoid configuration mistakes!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The configuration of Quartz can be broken down into two main parts:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz.config.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;config&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzConfig&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  configuration&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; { &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  plugins&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; { &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;general-configuration&quot;&gt;General Configuration&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#general-configuration&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This part of the configuration concerns anything that can affect the whole site. The following is a list breaking down all the things you can configure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pageTitle&lt;/code&gt;: title of the site. This is also used when generating the &lt;a href=&quot;./features/RSS-Feed&quot; class=&quot;internal&quot; data-slug=&quot;features/RSS-Feed&quot;&gt;RSS Feed&lt;/a&gt; for your site.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enableSPA&lt;/code&gt;: whether to enable &lt;a href=&quot;./features/SPA-Routing&quot; class=&quot;internal&quot; data-slug=&quot;features/SPA-Routing&quot;&gt;SPA Routing&lt;/a&gt; on your site.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enablePopovers&lt;/code&gt;: whether to enable &lt;a href=&quot;./features/popover-previews&quot; class=&quot;internal&quot; data-slug=&quot;features/popover-previews&quot;&gt;popover previews&lt;/a&gt; on your site.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;analytics&lt;/code&gt;: what to use for analytics on your site. Values can be
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;null&lt;/code&gt;: don‚Äôt use analytics;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{ provider: &#039;plausible&#039; }&lt;/code&gt;: use &lt;a href=&quot;https://plausible.io/&quot; class=&quot;external&quot;&gt;Plausible&lt;/a&gt;, a privacy-friendly alternative to Google Analytics; or&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{ provider: &#039;google&#039;, tagId: &amp;#x3C;your-google-tag&gt; }&lt;/code&gt;: use Google Analytics&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;baseUrl&lt;/code&gt;: this is used for sitemaps and RSS feeds that require an absolute URL to know where the canonical ‚Äòhome‚Äô of your site lives. This is normally the deployed URL of your site (e.g. &lt;code&gt;quartz.jzhao.xyz&lt;/code&gt; for this site). Do not include the protocol (i.e. &lt;code&gt;https://&lt;/code&gt;) or any leading or trailing slashes.
&lt;ul&gt;
&lt;li&gt;This should also include the subpath if you are &lt;a href=&quot;./hosting&quot; class=&quot;internal&quot; data-slug=&quot;hosting&quot;&gt;hosting&lt;/a&gt; on GitHub pages without a custom domain. For example, if my repository is &lt;code&gt;jackyzha0/quartz&lt;/code&gt;, GitHub pages would deploy to &lt;code&gt;https://jackyzha0.github.io/quartz&lt;/code&gt; and the &lt;code&gt;baseUrl&lt;/code&gt; would be &lt;code&gt;jackyzha0.github.io/quartz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Note that Quartz 4 will avoid using this as much as possible and use relative URLs whenever it can to make sure your site works no matter &lt;em&gt;where&lt;/em&gt; you end up actually deploying it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ignorePatterns&lt;/code&gt;: a list of &lt;a href=&quot;https://en.wikipedia.org/wiki/Glob_(programming)&quot; class=&quot;external&quot;&gt;glob&lt;/a&gt; patterns that Quartz should ignore and not search through when looking for files inside the &lt;code&gt;content&lt;/code&gt; folder. See &lt;a href=&quot;./features/private-pages&quot; class=&quot;internal&quot; data-slug=&quot;features/private-pages&quot;&gt;private pages&lt;/a&gt; for more details.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;defaultDateType&lt;/code&gt;: whether to use created, modified, or published as the default date to display on pages and page listings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: configure how the site looks.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;typography&lt;/code&gt;: what fonts to use. Any font available on &lt;a href=&quot;https://fonts.google.com/&quot; class=&quot;external&quot;&gt;Google Fonts&lt;/a&gt; works here.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;header&lt;/code&gt;: Font to use for headers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;code&lt;/code&gt;: Font for inline and block quotes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;body&lt;/code&gt;: Font for everything&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;colors&lt;/code&gt;: controls the theming of the site.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;light&lt;/code&gt;: page background&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lightgray&lt;/code&gt;: borders&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gray&lt;/code&gt;: graph links, heavier borders&lt;/li&gt;
&lt;li&gt;&lt;code&gt;darkgray&lt;/code&gt;: body text&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dark&lt;/code&gt;: header text and icons&lt;/li&gt;
&lt;li&gt;&lt;code&gt;secondary&lt;/code&gt;: link colour, current &lt;a href=&quot;./features/graph-view&quot; class=&quot;internal&quot; data-slug=&quot;features/graph-view&quot;&gt;graph&lt;/a&gt; node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tertiary&lt;/code&gt;: hover states and visited &lt;a href=&quot;./features/graph-view&quot; class=&quot;internal&quot; data-slug=&quot;features/graph-view&quot;&gt;graph&lt;/a&gt; nodes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;highlight&lt;/code&gt;: internal link background, highlighted text, &lt;a href=&quot;./features/syntax-highlighting&quot; class=&quot;internal&quot; data-slug=&quot;features/syntax-highlighting&quot;&gt;highlighted lines of code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;plugins&quot;&gt;Plugins&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#plugins&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can think of Quartz plugins as a series of transformations over content.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./images/quartz-transform-pipeline.png&quot; width=&quot;auto&quot; height=&quot;auto&quot;&gt;&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;plugins&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  transformers&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  filters&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  emitters&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;./advanced/making-plugins#transformers&quot; class=&quot;internal&quot; data-slug=&quot;advanced/making-plugins&quot;&gt;Transformers&lt;/a&gt; &lt;strong&gt;map&lt;/strong&gt; over content (e.g. parsing frontmatter, generating a description)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;./advanced/making-plugins#filters&quot; class=&quot;internal&quot; data-slug=&quot;advanced/making-plugins&quot;&gt;Filters&lt;/a&gt; &lt;strong&gt;filter&lt;/strong&gt; content (e.g. filtering out drafts)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;./advanced/making-plugins#emitters&quot; class=&quot;internal&quot; data-slug=&quot;advanced/making-plugins&quot;&gt;Emitters&lt;/a&gt; &lt;strong&gt;reduce&lt;/strong&gt; over content (e.g. creating an RSS feed or pages that list all files with a specific tag)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By adding, removing, and reordering plugins from the &lt;code&gt;tranformers&lt;/code&gt;, &lt;code&gt;filters&lt;/code&gt;, and &lt;code&gt;emitters&lt;/code&gt; fields, you can customize the behaviour of Quartz.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;note&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;line x1=&quot;18&quot; y1=&quot;2&quot; x2=&quot;22&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&lt;path d=&quot;M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Each node is modified by every transformer &lt;em&gt;in order&lt;/em&gt;. Some transformers are position-sensitive so you may need to take special note of whether it needs come before or after any other particular plugins.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Additionally, plugins may also have their own configuration settings that you can pass in. For example, the &lt;a href=&quot;./features/Latex&quot; class=&quot;internal&quot; data-slug=&quot;features/Latex&quot;&gt;Latex&lt;/a&gt; plugin allows you to pass in a field specifying the &lt;code&gt;renderEngine&lt;/code&gt; to choose between Katex and MathJax.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;transformers&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Plugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.FrontMatter&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// uses default options&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Plugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.Latex&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({ renderEngine&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;katex&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; })&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// specify some options&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you‚Äôd like to make your own plugins, read the guide on &lt;a href=&quot;./advanced/making-plugins&quot; class=&quot;internal&quot; data-slug=&quot;advanced/making-plugins&quot;&gt;making plugins&lt;/a&gt; for more information.&lt;/p&gt;</description>
    <pubDate>Wed, 20 Sep 2023 20:52:45 GMT</pubDate>
  </item><item>
    <title>Docker Support</title>
    <link>https://notes.zeyadnotes.dev/features/Docker-Support</link>
    <guid>https://notes.zeyadnotes.dev/features/Docker-Support</guid>
    <description>&lt;p&gt;Quartz comes shipped with a Docker image that will allow you to preview your Quartz locally without installing Node.&lt;/p&gt;
&lt;p&gt;You can run the below one-liner to run Quartz in Docker.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;sh&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;sh&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;docker&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;run&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;--rm&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;-itp&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;8080&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;:8080&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;$(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;docker&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;build&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;-q&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    <pubDate>Sun, 08 Oct 2023 16:59:18 GMT</pubDate>
  </item><item>
    <title>Latex</title>
    <link>https://notes.zeyadnotes.dev/features/Latex</link>
    <guid>https://notes.zeyadnotes.dev/features/Latex</guid>
    <description>&lt;p&gt;Quartz uses &lt;a href=&quot;https://katex.org/&quot; class=&quot;external&quot;&gt;Katex&lt;/a&gt; by default to typeset both inline and block math expressions at build time.&lt;/p&gt;
&lt;h2 id=&quot;syntax&quot;&gt;Syntax&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#syntax&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;block-math&quot;&gt;Block Math&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#block-math&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Block math can be rendered by delimiting math expression with &lt;code&gt;$$&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$
f(x) = \int_{-\infty}^\infty
    f\hat(\xi),e^{2 \pi i \xi x}
    \,d\xi
$$
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;math math-display&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.3846em;vertical-align:-0.9703em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mop&quot;&gt;&lt;span class=&quot;mop op-symbol large-op&quot; style=&quot;margin-right:0.44445em;position:relative;top:-0.0011em;&quot;&gt;‚à´&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.4143em;&quot;&gt;&lt;span style=&quot;top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;‚àí&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;‚àû&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.8129em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;‚àû&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;‚Äã&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.9703em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.1667em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mord accent&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.0134em;&quot;&gt;&lt;span style=&quot;top:-3em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.319em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;accent-body&quot; style=&quot;left:-0.25em;&quot;&gt;&lt;span class=&quot;mord&quot;&gt;^&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;‚Äã&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.25em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.04601em;&quot;&gt;Œæ&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.1667em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8991em;&quot;&gt;&lt;span style=&quot;top:-3.113em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;œÄi&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.04601em;&quot;&gt;Œæ&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.1667em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.04601em;&quot;&gt;Œæ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;math math-display&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:3em;vertical-align:-1.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mtable&quot;&gt;&lt;span class=&quot;col-align-r&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.75em;&quot;&gt;&lt;span style=&quot;top:-3.91em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.41em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;‚Äã&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.25em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;col-align-l&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.75em;&quot;&gt;&lt;span style=&quot;top:-3.91em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.41em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;‚Äã&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.25em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;math math-display&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.4em;vertical-align:-0.95em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;minner&quot;&gt;&lt;span class=&quot;mopen delimcenter&quot; style=&quot;top:0em;&quot;&gt;&lt;span class=&quot;delimsizing size3&quot;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mtable&quot;&gt;&lt;span class=&quot;col-align-c&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.45em;&quot;&gt;&lt;span style=&quot;top:-3.61em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.41em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;‚Äã&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.95em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;arraycolsep&quot; style=&quot;width:0.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;arraycolsep&quot; style=&quot;width:0.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;col-align-c&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.45em;&quot;&gt;&lt;span style=&quot;top:-3.61em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.41em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;b&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;‚Äã&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.95em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;arraycolsep&quot; style=&quot;width:0.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;arraycolsep&quot; style=&quot;width:0.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;col-align-c&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.45em;&quot;&gt;&lt;span style=&quot;top:-3.61em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.41em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;‚Äã&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.95em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose delimcenter&quot; style=&quot;top:0em;&quot;&gt;&lt;span class=&quot;delimsizing size3&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;h3 id=&quot;inline-math&quot;&gt;Inline Math&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#inline-math&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Similarly, inline math can be rendered by delimiting math expression with a single &lt;code&gt;$&lt;/code&gt;. For example, &lt;code&gt;$e^{i\pi} = -1$&lt;/code&gt; produces &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8247em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8247em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.03588em;&quot;&gt;iœÄ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7278em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;‚àí&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;escaping-symbols&quot;&gt;Escaping symbols&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#escaping-symbols&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There will be cases where you may have more than one &lt;code&gt;$&lt;/code&gt; in a paragraph at once which may accidentally trigger MathJax/Katex.&lt;/p&gt;
&lt;p&gt;To get around this, you can escape the dollar sign by doing &lt;code&gt;\$&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Incorrect: &lt;code&gt;I have $1 and you have $2&lt;/code&gt; produces I have &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;an&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;yo&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ha&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03588em;&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;2&lt;/li&gt;
&lt;li&gt;Correct: &lt;code&gt;I have \$1 and you have \$2&lt;/code&gt; produces I have $1 and you have $2&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;mathjax&quot;&gt;MathJax&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#mathjax&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In &lt;code&gt;quartz.config.ts&lt;/code&gt;, you can configure Quartz to use &lt;a href=&quot;https://docs.mathjax.org/en/latest/output/svg.html&quot; class=&quot;external&quot;&gt;MathJax SVG rendering&lt;/a&gt; by replacing &lt;code&gt;Plugin.Latex({ renderEngine: &#039;katex&#039; })&lt;/code&gt; with &lt;code&gt;Plugin.Latex({ renderEngine: &#039;mathjax&#039; })&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Removing Latex support: remove all instances of &lt;code&gt;Plugin.Latex()&lt;/code&gt; from &lt;code&gt;quartz.config.ts&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Plugin: &lt;code&gt;quartz/plugins/transformers/latex.ts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Mermaid diagrams</title>
    <link>https://notes.zeyadnotes.dev/features/Mermaid-diagrams</link>
    <guid>https://notes.zeyadnotes.dev/features/Mermaid-diagrams</guid>
    <description>&lt;p&gt;Quartz supports Mermaid which allows you to add diagrams and charts to your notes. Mermaid supports a range of diagrams, such as¬†&lt;a href=&quot;https://mermaid.js.org/syntax/flowchart.html&quot; class=&quot;external&quot;&gt;flow charts&lt;/a&gt;,¬†&lt;a href=&quot;https://mermaid.js.org/syntax/sequenceDiagram.html&quot; class=&quot;external&quot;&gt;sequence diagrams&lt;/a&gt;, and¬†&lt;a href=&quot;https://mermaid.js.org/syntax/timeline.html&quot; class=&quot;external&quot;&gt;timelines&lt;/a&gt;. This is enabled as a part of &lt;a href=&quot;../features/Obsidian-compatibility&quot; class=&quot;internal&quot; data-slug=&quot;features/Obsidian-compatibility&quot;&gt;Obsidian compatibility&lt;/a&gt; and can be configured and enabled/disabled from that plugin.&lt;/p&gt;
&lt;p&gt;By default, Quartz will render Mermaid diagrams to match the site theme.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;warning&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;9&quot; x2=&quot;12&quot; y2=&quot;13&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Wondering why Mermaid diagrams may not be showing up even if you have them enabled? You may need to reorder your plugins so that &lt;code&gt;Plugin.ObsidianFlavoredMarkdown()&lt;/code&gt; is &lt;em&gt;after&lt;/em&gt; &lt;code&gt;Plugin.SyntaxHighlighting()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;syntax&quot;&gt;Syntax&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#syntax&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To add a Mermaid diagram, create a mermaid code block.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
sequenceDiagram
    Alice-&gt;&gt;+John: Hello John, how are you?
    Alice-&gt;&gt;+John: John, can you hear me?
    John--&gt;&gt;-Alice: Hi Alice, I can hear you!
    John--&gt;&gt;-Alice: I feel great!
```
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;mermaid&quot;&gt;sequenceDiagram
    Alice-&gt;&gt;+John: Hello John, how are you?
    Alice-&gt;&gt;+John: John, can you hear me?
    John--&gt;&gt;-Alice: Hi Alice, I can hear you!
    John--&gt;&gt;-Alice: I feel great!
&lt;/code&gt;&lt;/pre&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Obsidian compatibility</title>
    <link>https://notes.zeyadnotes.dev/features/Obsidian-compatibility</link>
    <guid>https://notes.zeyadnotes.dev/features/Obsidian-compatibility</guid>
    <description>&lt;p&gt;Quartz was originally designed as a tool to publish Obsidian vaults as websites. Even as the scope of Quartz has widened over time, it hasn‚Äôt lost the ability to seamlessly interoperate with Obsidian.&lt;/p&gt;
&lt;p&gt;By default, Quartz ships with &lt;code&gt;Plugin.ObsidianFlavoredMarkdown&lt;/code&gt; which is a transformer plugin that adds support for &lt;a href=&quot;https://help.obsidian.md/Editing+and+formatting/Obsidian+Flavored+Markdown&quot; class=&quot;external&quot;&gt;Obsidian Flavored Markdown&lt;/a&gt;. This includes support for features like &lt;a href=&quot;../features/wikilinks&quot; class=&quot;internal&quot; data-slug=&quot;features/wikilinks&quot;&gt;wikilinks&lt;/a&gt; and &lt;a href=&quot;../features/Mermaid-diagrams&quot; class=&quot;internal&quot; data-slug=&quot;features/Mermaid-diagrams&quot;&gt;Mermaid diagrams&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It also ships with support for &lt;a href=&quot;https://help.obsidian.md/Editing+and+formatting/Properties&quot; class=&quot;external&quot;&gt;frontmatter parsing&lt;/a&gt; with the same fields that Obsidian uses through the &lt;code&gt;Plugin.FrontMatter&lt;/code&gt; transformer plugin.&lt;/p&gt;
&lt;p&gt;Finally, Quartz also provides &lt;code&gt;Plugin.CrawlLinks&lt;/code&gt; which allows you to customize Quartz‚Äôs link resolution behaviour to match Obsidian.&lt;/p&gt;
&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#configuration&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Frontmatter parsing:
&lt;ul&gt;
&lt;li&gt;Disabling: remove all instances of &lt;code&gt;Plugin.FrontMatter()&lt;/code&gt; from &lt;code&gt;quartz.config.ts&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Customize default values for frontmatter: edit &lt;code&gt;quartz/plugins/transformers/frontmatter.ts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Obsidian Flavored Markdown:
&lt;ul&gt;
&lt;li&gt;Disabling: remove all instances of &lt;code&gt;Plugin.ObsidianFlavoredMarkdown()&lt;/code&gt; from &lt;code&gt;quartz.config.ts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Customizing features: &lt;code&gt;Plugin.ObsidianFlavoredMarkdown&lt;/code&gt; has several other options to toggle on and off:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;comments&lt;/code&gt;: whether to enable &lt;code&gt;%%&lt;/code&gt; style Obsidian comments. Defaults to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;highlight&lt;/code&gt;: whether to enable &lt;code&gt;==&lt;/code&gt; style highlights. Defaults to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wikilinks&lt;/code&gt;: whether to enable turning &lt;a href=&quot;../features/wikilinks&quot; class=&quot;internal&quot; data-slug=&quot;features/wikilinks&quot;&gt;wikilinks&lt;/a&gt; into regular links. Defaults to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;callouts&lt;/code&gt;: whether to enable &lt;a href=&quot;../features/callouts&quot; class=&quot;internal&quot; data-slug=&quot;features/callouts&quot;&gt;callouts&lt;/a&gt;. Defaults to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mermaid&lt;/code&gt;: whether to enable &lt;a href=&quot;../features/Mermaid-diagrams&quot; class=&quot;internal&quot; data-slug=&quot;features/Mermaid-diagrams&quot;&gt;Mermaid diagrams&lt;/a&gt;. Defaults to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parseTags&lt;/code&gt;: whether to try and parse tags in the content body. Defaults to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enableInHtmlEmbed&lt;/code&gt;: whether to try and parse Obsidian flavoured markdown in raw HTML. Defaults to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Link resolution behaviour:
&lt;ul&gt;
&lt;li&gt;Disabling: remove all instances of &lt;code&gt;Plugin.CrawlLinks()&lt;/code&gt; from &lt;code&gt;quartz.config.ts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Changing link resolution preference: set &lt;code&gt;markdownLinkResolution&lt;/code&gt; to one of &lt;code&gt;absolute&lt;/code&gt;, &lt;code&gt;relative&lt;/code&gt; or &lt;code&gt;shortest&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>OxHugo compatibility</title>
    <link>https://notes.zeyadnotes.dev/features/OxHugo-compatibility</link>
    <guid>https://notes.zeyadnotes.dev/features/OxHugo-compatibility</guid>
    <description>&lt;p&gt;&lt;a href=&quot;https://www.orgroam.com/&quot; class=&quot;external&quot;&gt;org-roam&lt;/a&gt; is a plain-text personal knowledge management system for &lt;a href=&quot;https://en.wikipedia.org/wiki/Emacs&quot; class=&quot;external&quot;&gt;emacs&lt;/a&gt;. &lt;a href=&quot;https://github.com/kaushalmodi/ox-hugo&quot; class=&quot;external&quot;&gt;ox-hugo&lt;/a&gt; is org exporter backend that exports &lt;code&gt;org-mode&lt;/code&gt; files to &lt;a href=&quot;https://gohugo.io/&quot; class=&quot;external&quot;&gt;Hugo&lt;/a&gt; compatible Markdown.&lt;/p&gt;
&lt;p&gt;Because the Markdown generated by ox-hugo is not pure Markdown but Hugo specific, we need to transform it to fit into Quartz. This is done by &lt;code&gt;Plugin.OxHugoFlavouredMarkdown&lt;/code&gt;. Even though this &lt;a href=&quot;../advanced/making-plugins&quot; class=&quot;internal&quot; data-slug=&quot;advanced/making-plugins&quot;&gt;plugin&lt;/a&gt; was written with &lt;code&gt;ox-hugo&lt;/code&gt; in mind, it should work for any Hugo specific Markdown.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;quartz.config.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;plugins&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  transformers&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Plugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.FrontMatter&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({ delims&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;+++&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; language&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;toml&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; })&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// if toml frontmatter&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Plugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.OxHugoFlavouredMarkdown&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Plugin&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.GitHubFlavoredMarkdown&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;()&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  ]&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#usage&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Quartz by default doesn‚Äôt understand &lt;code&gt;org-roam&lt;/code&gt; files as they aren‚Äôt Markdown. You‚Äôre responsible for using an external tool like &lt;code&gt;ox-hugo&lt;/code&gt; to export the &lt;code&gt;org-roam&lt;/code&gt; files as Markdown content to Quartz and managing the static assets so that they‚Äôre available in the final output.&lt;/p&gt;
&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#configuration&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Link resolution
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wikilinks&lt;/code&gt;: Whether to replace &lt;code&gt;{{ relref }}&lt;/code&gt; with Quartz &lt;a href=&quot;../features/wikilinks&quot; class=&quot;internal&quot; data-slug=&quot;features/wikilinks&quot;&gt;wikilinks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;removePredefinedAnchor&lt;/code&gt;: Whether to remove &lt;a href=&quot;https://ox-hugo.scripter.co/doc/anchors/&quot; class=&quot;external&quot;&gt;pre-defined anchor set by ox-hugo&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Image handling
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;replaceFigureWithMdImg&lt;/code&gt;: Whether to replace &lt;code&gt;&amp;#x3C;figure/&gt;&lt;/code&gt; with &lt;code&gt;![]()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Formatting
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;removeHugoShortcode&lt;/code&gt;: Whether to remove hugo shortcode syntax (&lt;code&gt;{{}}&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;replaceOrgLatex&lt;/code&gt;: Whether to replace org-mode formatting for latex fragments with what &lt;code&gt;Plugin.Latex&lt;/code&gt; supports.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;warning&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;9&quot; x2=&quot;12&quot; y2=&quot;13&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;While you can use &lt;code&gt;Plugin.OxHugoFlavoredMarkdown&lt;/code&gt; and &lt;code&gt;Plugin.ObsidianFlavoredMarkdown&lt;/code&gt; together, it‚Äôs not recommended because it might mutate the file in unexpected ways. Use with caution.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    <pubDate>Fri, 29 Sep 2023 18:35:26 GMT</pubDate>
  </item><item>
    <title>RSS Feed</title>
    <link>https://notes.zeyadnotes.dev/features/RSS-Feed</link>
    <guid>https://notes.zeyadnotes.dev/features/RSS-Feed</guid>
    <description>&lt;p&gt;Quartz creates an RSS feed for all the content on your site by generating an &lt;code&gt;index.xml&lt;/code&gt; file that RSS readers can subscribe to. Because of the RSS spec, this requires the &lt;code&gt;baseUrl&lt;/code&gt; property in your &lt;a href=&quot;../configuration&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;configuration&lt;/a&gt; to be set properly for RSS readers to pick it up properly.&lt;/p&gt;
&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#configuration&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Remove RSS feed: set the &lt;code&gt;enableRSS&lt;/code&gt; field of &lt;code&gt;Plugin.ContentIndex&lt;/code&gt; in &lt;code&gt;quartz.config.ts&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Change number of entries: set the &lt;code&gt;rssLimit&lt;/code&gt; field of &lt;code&gt;Plugin.ContentIndex&lt;/code&gt; to be the desired value. It defaults to latest 10 items.&lt;/li&gt;
&lt;li&gt;Use rich HTML output in RSS: set &lt;code&gt;rssFullHtml&lt;/code&gt; field of &lt;code&gt;Plugin.ContentIndex&lt;/code&gt; to be &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 13 Sep 2023 04:44:03 GMT</pubDate>
  </item><item>
    <title>SPA Routing</title>
    <link>https://notes.zeyadnotes.dev/features/SPA-Routing</link>
    <guid>https://notes.zeyadnotes.dev/features/SPA-Routing</guid>
    <description>&lt;p&gt;Single-page-app style rendering. This prevents flashes of unstyled content and improves the smoothness of Quartz.&lt;/p&gt;
&lt;p&gt;Under the hood, this is done by hijacking page navigations and instead fetching the HTML via a &lt;code&gt;GET&lt;/code&gt; request and then diffing and selectively replacing parts of the page using &lt;a href=&quot;https://github.com/natemoo-re/micromorph&quot; class=&quot;external&quot;&gt;micromorph&lt;/a&gt;. This allows us to change the content of the page without fully refreshing the page, reducing the amount of content that the browser needs to load.&lt;/p&gt;
&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#configuration&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Disable SPA Routing: set the &lt;code&gt;enableSPA&lt;/code&gt; field of the &lt;a href=&quot;../configuration&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;configuration&lt;/a&gt; in &lt;code&gt;quartz.config.ts&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Backlinks</title>
    <link>https://notes.zeyadnotes.dev/features/backlinks</link>
    <guid>https://notes.zeyadnotes.dev/features/backlinks</guid>
    <description>&lt;p&gt;A backlink for a note is a link from another note to that note. Links in the backlink pane also feature rich &lt;a href=&quot;../features/popover-previews&quot; class=&quot;internal&quot; data-slug=&quot;features/popover-previews&quot;&gt;popover previews&lt;/a&gt; if you have that feature enabled.&lt;/p&gt;
&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Removing backlinks: delete all usages of &lt;code&gt;Component.Backlinks()&lt;/code&gt; from &lt;code&gt;quartz.layout.ts&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Component: &lt;code&gt;quartz/components/Backlinks.tsx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Style: &lt;code&gt;quartz/components/styles/backlinks.scss&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Script: &lt;code&gt;quartz/components/scripts/search.inline.ts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Breadcrumbs</title>
    <link>https://notes.zeyadnotes.dev/features/breadcrumbs</link>
    <guid>https://notes.zeyadnotes.dev/features/breadcrumbs</guid>
    <description>&lt;p&gt;Breadcrumbs provide a way to navigate a hierarchy of pages within your site using a list of its parent folders.&lt;/p&gt;
&lt;p&gt;By default, the element at the very top of your page is the breadcrumb navigation bar (can also be seen at the top on this page!).&lt;/p&gt;
&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Most configuration can be done by passing in options to &lt;code&gt;Component.Breadcrumbs()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, here‚Äôs what the default configuration looks like:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;quartz.layout.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Component&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.Breadcrumbs&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  spacerSymbol&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// symbol between crumbs&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  rootName&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;Home&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// name of first/root element&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  resolveFrontmatterTitle&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// wether to resolve folder names through frontmatter titles (more computationally expensive)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  hideOnRoot&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// wether to hide breadcrumbs on root `index.md` page&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When passing in your own options, you can omit any or all of these fields if you‚Äôd like to keep the default value for that field.&lt;/p&gt;
&lt;p&gt;You can also adjust where the breadcrumbs will be displayed by adjusting the &lt;a href=&quot;../layout&quot; class=&quot;internal&quot; data-slug=&quot;layout&quot;&gt;layout&lt;/a&gt; (moving &lt;code&gt;Component.Breadcrumbs()&lt;/code&gt; up or down)&lt;/p&gt;
&lt;p&gt;Want to customize it even more?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Removing breadcrumbs: delete all usages of &lt;code&gt;Component.Breadcrumbs()&lt;/code&gt; from &lt;code&gt;quartz.layout.ts&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Component: &lt;code&gt;quartz/components/Breadcrumbs.tsx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Style: &lt;code&gt;quartz/components/styles/breadcrumbs.scss&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Script: inline at &lt;code&gt;quartz/components/Breadcrumbs.tsx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Fri, 29 Sep 2023 15:19:10 GMT</pubDate>
  </item><item>
    <title>Callouts</title>
    <link>https://notes.zeyadnotes.dev/features/callouts</link>
    <guid>https://notes.zeyadnotes.dev/features/callouts</guid>
    <description>&lt;p&gt;Quartz supports the same Admonition-callout syntax as Obsidian.&lt;/p&gt;
&lt;p&gt;This includes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;12 Distinct callout types (each with several aliases)&lt;/li&gt;
&lt;li&gt;Collapsable callouts&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&gt; [!info] Title
&gt;
&gt; This is a callout!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See¬†&lt;a href=&quot;https://help.obsidian.md/Editing+and+formatting/Callouts&quot; class=&quot;external&quot;&gt;documentation on supported types and syntax here&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;warning&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;9&quot; x2=&quot;12&quot; y2=&quot;13&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Wondering why callouts may not be showing up even if you have them enabled? You may need to reorder your plugins so that &lt;code&gt;Plugin.ObsidianFlavoredMarkdown()&lt;/code&gt; is &lt;em&gt;after&lt;/em&gt; &lt;code&gt;Plugin.SyntaxHighlighting()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Disable callouts: simply pass &lt;code&gt;callouts: false&lt;/code&gt; to the plugin: &lt;code&gt;Plugin.ObsidianFlavoredMarkdown({ callouts: false })&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Editing icons: &lt;code&gt;quartz/plugins/transformers/ofm.ts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;showcase&quot;&gt;Showcase&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#showcase&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;info&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot;&gt;&lt;/circle&gt;&lt;line x1=&quot;12&quot; y1=&quot;16&quot; x2=&quot;12&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;8&quot; x2=&quot;12.01&quot; y2=&quot;8&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Info &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Default title&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout is-collapsible&quot; data-callout=&quot;question&quot; data-callout-fold=&quot;&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot;&gt;&lt;/circle&gt;&lt;path d=&quot;M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Can callouts be nested? &lt;/p&gt;&lt;/div&gt;
                  &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; class=&quot;fold&quot;&gt;
                  &lt;polyline points=&quot;6 9 12 15 18 9&quot;&gt;&lt;/polyline&gt;
                &lt;/svg&gt;
                &lt;/div&gt;
&lt;blockquote class=&quot;callout is-collapsible is-collapsed&quot; data-callout=&quot;todo&quot; data-callout-fold=&quot;&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z&quot;&gt;&lt;/path&gt;&lt;path d=&quot;m9 12 2 2 4-4&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Yes!, they can. &lt;/p&gt;&lt;/div&gt;
                  &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; class=&quot;fold&quot;&gt;
                  &lt;polyline points=&quot;6 9 12 15 18 9&quot;&gt;&lt;/polyline&gt;
                &lt;/svg&gt;
                &lt;/div&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;example&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;line x1=&quot;8&quot; y1=&quot;6&quot; x2=&quot;21&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;8&quot; y1=&quot;12&quot; x2=&quot;21&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;8&quot; y1=&quot;18&quot; x2=&quot;21&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;3&quot; y1=&quot;6&quot; x2=&quot;3.01&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;3&quot; y1=&quot;12&quot; x2=&quot;3.01&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;3&quot; y1=&quot;18&quot; x2=&quot;3.01&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;You can even use multiple layers of nesting. &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;example&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;line x1=&quot;8&quot; y1=&quot;6&quot; x2=&quot;21&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;8&quot; y1=&quot;12&quot; x2=&quot;21&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;8&quot; y1=&quot;18&quot; x2=&quot;21&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;3&quot; y1=&quot;6&quot; x2=&quot;3.01&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;3&quot; y1=&quot;12&quot; x2=&quot;3.01&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;3&quot; y1=&quot;18&quot; x2=&quot;3.01&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Examples &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Aliases: example&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;note&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;line x1=&quot;18&quot; y1=&quot;2&quot; x2=&quot;22&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&lt;path d=&quot;M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Notes &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Aliases: note&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;abstract&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;rect x=&quot;8&quot; y=&quot;2&quot; width=&quot;8&quot; height=&quot;4&quot; rx=&quot;1&quot; ry=&quot;1&quot;&gt;&lt;/rect&gt;&lt;path d=&quot;M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M12 11h4&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M12 16h4&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M8 11h.01&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M8 16h.01&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Summaries &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Aliases: abstract, summary, tldr&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;info&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot;&gt;&lt;/circle&gt;&lt;line x1=&quot;12&quot; y1=&quot;16&quot; x2=&quot;12&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;8&quot; x2=&quot;12.01&quot; y2=&quot;8&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Info &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Aliases: info, todo&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;tip&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Hint &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Aliases: tip, hint, important&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;success&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;polyline points=&quot;20 6 9 17 4 12&quot;&gt;&lt;/polyline&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Success &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Aliases: success, check, done&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;question&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot;&gt;&lt;/circle&gt;&lt;path d=&quot;M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Question &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Aliases: question, help, faq&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;warning&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;9&quot; x2=&quot;12&quot; y2=&quot;13&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Aliases: warning, caution, attention&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;failure&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;line x1=&quot;18&quot; y1=&quot;6&quot; x2=&quot;6&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;6&quot; y1=&quot;6&quot; x2=&quot;18&quot; y2=&quot;18&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Failure &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Aliases: failure, fail, missing&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;danger&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;polygon points=&quot;13 2 3 14 12 14 11 22 21 10 12 10 13 2&quot;&gt;&lt;/polygon&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Error &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Aliases: danger, error&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;bug&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;rect width=&quot;8&quot; height=&quot;14&quot; x=&quot;8&quot; y=&quot;6&quot; rx=&quot;4&quot;&gt;&lt;/rect&gt;&lt;path d=&quot;m19 7-3 2&quot;&gt;&lt;/path&gt;&lt;path d=&quot;m5 7 3 2&quot;&gt;&lt;/path&gt;&lt;path d=&quot;m19 19-3-2&quot;&gt;&lt;/path&gt;&lt;path d=&quot;m5 19 3-2&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M20 13h-4&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M4 13h4&quot;&gt;&lt;/path&gt;&lt;path d=&quot;m10 4 1 2&quot;&gt;&lt;/path&gt;&lt;path d=&quot;m14 4-1 2&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Bug &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Aliases: bug&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;quote&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Quote &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Aliases: quote, cite&lt;/p&gt;
&lt;/blockquote&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Darkmode</title>
    <link>https://notes.zeyadnotes.dev/features/darkmode</link>
    <guid>https://notes.zeyadnotes.dev/features/darkmode</guid>
    <description>&lt;p&gt;Quartz supports darkmode out of the box that respects the user‚Äôs theme preference. Any future manual toggles of the darkmode switch will be saved in the browser‚Äôs local storage so it can be persisted across future page loads.&lt;/p&gt;
&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Removing darkmode: delete all usages of &lt;code&gt;Component.Darkmode()&lt;/code&gt; from &lt;code&gt;quartz.layout.ts&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Component: &lt;code&gt;quartz/components/Darkmode.tsx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Style: &lt;code&gt;quartz/components/styles/darkmode.scss&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Script: &lt;code&gt;quartz/components/scripts/darkmode.inline.ts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Explorer</title>
    <link>https://notes.zeyadnotes.dev/features/explorer</link>
    <guid>https://notes.zeyadnotes.dev/features/explorer</guid>
    <description>&lt;p&gt;Quartz features an explorer that allows you to navigate all files and folders on your site. It supports nested folders and is highly customizable.&lt;/p&gt;
&lt;p&gt;By default, it shows all folders and files on your page. To display the explorer in a different spot, you can edit the &lt;a href=&quot;../layout&quot; class=&quot;internal&quot; data-slug=&quot;layout&quot;&gt;layout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Display names for folders get determined by the &lt;code&gt;title&lt;/code&gt; frontmatter field in &lt;code&gt;folder/index.md&lt;/code&gt; (more detail in &lt;a href=&quot;../authoring-content&quot; class=&quot;internal&quot; data-slug=&quot;authoring-content&quot;&gt;Authoring Content&lt;/a&gt;). If this file does not exist or does not contain frontmatter, the local folder name will be used instead.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;info&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot;&gt;&lt;/circle&gt;&lt;line x1=&quot;12&quot; y1=&quot;16&quot; x2=&quot;12&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;8&quot; x2=&quot;12.01&quot; y2=&quot;8&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Info &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;The explorer uses local storage by default to save the state of your explorer. This is done to ensure a smooth experience when navigating to different pages.&lt;/p&gt;
&lt;p&gt;To clear/delete the explorer state from local storage, delete the &lt;code&gt;fileTree&lt;/code&gt; entry (guide on how to delete a key from local storage in chromium based browsers can be found &lt;a href=&quot;https://docs.devolutions.net/kb/general-knowledge-base/clear-browser-local-storage/clear-chrome-local-storage/&quot; class=&quot;external&quot;&gt;here&lt;/a&gt;). You can disable this by passing &lt;code&gt;useSavedState: false&lt;/code&gt; as an argument.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Most configuration can be done by passing in options to &lt;code&gt;Component.Explorer()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, here‚Äôs what the default configuration looks like:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;quartz.layout.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Component&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.Explorer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  title&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;Explorer&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// title of the explorer component&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  folderClickBehavior&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;collapse&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// what happens when you click a folder (&quot;link&quot; to navigate to folder page on click or &quot;collapse&quot; to collapse folder on click)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  folderDefaultState&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;collapsed&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// default state of folders (&quot;collapsed&quot; or &quot;open&quot;)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  useSavedState&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// wether to use local storage to save &quot;state&quot; (which folders are opened) of explorer&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// Sort order: folders first, then files. Sort folders and files alphabetically&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;sortFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; b) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// default implementation shown later&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  filterFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; filterFn: (node) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.name &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;!==&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;tags&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// filters out &#039;tags&#039; folder&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  mapFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// what order to apply functions in&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  order&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;filter&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;map&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;sort&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When passing in your own options, you can omit any or all of these fields if you‚Äôd like to keep the default value for that field.&lt;/p&gt;
&lt;p&gt;Want to customize it even more?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Removing table of contents: remove &lt;code&gt;Component.Explorer()&lt;/code&gt; from &lt;code&gt;quartz.layout.ts&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;(optional): After removing the explorer component, you can move the &lt;a href=&quot;../features/table-of-contents&quot; class=&quot;internal&quot; data-slug=&quot;features/table-of-contents&quot;&gt;Table of Contents&lt;/a&gt; component back to the &lt;code&gt;left&lt;/code&gt; part of the layout&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Changing &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; behavior: explained in &lt;a href=&quot;#advanced-customization&quot; class=&quot;internal&quot;&gt;Advanced customization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Component:
&lt;ul&gt;
&lt;li&gt;Wrapper (Outer component, generates file tree, etc): &lt;code&gt;quartz/components/Explorer.tsx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Explorer node (recursive, either a folder or a file): &lt;code&gt;quartz/components/ExplorerNode.tsx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Style: &lt;code&gt;quartz/components/styles/explorer.scss&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Script: &lt;code&gt;quartz/components/scripts/explorer.inline.ts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;advanced-customization&quot;&gt;Advanced customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#advanced-customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This component allows you to fully customize all of its behavior. You can pass a custom &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; function.
All functions you can pass work with the &lt;code&gt;FileNode&lt;/code&gt; class, which has the following properties:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz/components/ExplorerNode.tsx&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FileNode&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  children&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FileNode&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[]  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// children of current node&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// last part of slug&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  displayName&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// what actually should be displayed in the explorer&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  file&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzPluginData&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// set if node is a file, see `QuartzPluginData` for more detail&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  depth&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;number&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// depth of current node&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;...&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// rest of implementation&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Every function you can pass is optional. By default, only a &lt;code&gt;sort&lt;/code&gt; function will be used:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;Default sort function&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// Sort order: folders first, then files. Sort folders and files alphabetically&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Component&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.Explorer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;sortFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; b) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; ((&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;&amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;||&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;&amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file)) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// sensitivity: &quot;base&quot;: Only strings that differ in base letters compare as unequal. Examples: a ‚â† b, a = √°, a = A&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// numeric: true: Whether numeric collation should be used, such that &quot;1&quot; &amp;#x3C; &quot;2&quot; &amp;#x3C; &quot;10&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;displayName&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.localeCompare&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.displayName&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        numeric&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        sensitivity&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;base&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      })&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;&amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    } &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;You can pass your own functions for &lt;code&gt;sortFn&lt;/code&gt;, &lt;code&gt;filterFn&lt;/code&gt; and &lt;code&gt;mapFn&lt;/code&gt;. All functions will be executed in the order provided by the &lt;code&gt;order&lt;/code&gt; option (see &lt;a href=&quot;#customization&quot; class=&quot;internal&quot;&gt;Customization&lt;/a&gt;). These functions behave similarly to their &lt;code&gt;Array.prototype&lt;/code&gt; counterpart, except they modify the entire &lt;code&gt;FileNode&lt;/code&gt; tree in place instead of returning a new one.&lt;/p&gt;
&lt;p&gt;For more information on how to use &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt;, you can check &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort&quot; class=&quot;external&quot;&gt;Array.prototype.sort()&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot; class=&quot;external&quot;&gt;Array.prototype.filter()&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot; class=&quot;external&quot;&gt;Array.prototype.map()&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Type definitions look like this:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;sortFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FileNode&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; b&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FileNode&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; number&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;filterFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FileNode&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; boolean&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;mapFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FileNode&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;tip&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;You can check if a &lt;code&gt;FileNode&lt;/code&gt; is a folder or a file like this:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// node is a file&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;} &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// node is a folder&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;basic-examples&quot;&gt;Basic examples&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#basic-examples&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;These examples show the basic usage of &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;use-sort-to-put-files-first&quot;&gt;Use &lt;code&gt;sort&lt;/code&gt; to put files first&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#use-sort-to-put-files-first&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Using this example, the explorer will alphabetically sort everything, but put all &lt;strong&gt;files&lt;/strong&gt; above all &lt;strong&gt;folders&lt;/strong&gt;.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz.layout.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Component&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.Explorer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;sortFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; b) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; ((&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;&amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;||&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;&amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file)) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;displayName&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.localeCompare&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.displayName)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;&amp;#x26;&amp;#x26;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    } &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;change-display-names-map&quot;&gt;Change display names (&lt;code&gt;map&lt;/code&gt;)&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#change-display-names-map&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Using this example, the display names of all &lt;code&gt;FileNodes&lt;/code&gt; (folders + files) will be converted to full upper case.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz.layout.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Component&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.Explorer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;mapFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (node) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.displayName &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;displayName&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.toUpperCase&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;remove-list-of-elements-filter&quot;&gt;Remove list of elements (&lt;code&gt;filter&lt;/code&gt;)&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#remove-list-of-elements-filter&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Using this example, you can remove elements from your explorer by providing an array of folders/files using the &lt;code&gt;omit&lt;/code&gt; set.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz.layout.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Component&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.Explorer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;filterFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (node) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// set containing names of everything you want to filter out&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;omit&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Set&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;([&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;authoring content&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;tags&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;hosting&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;omit&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.has&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.toLowerCase&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;())&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can customize this by changing the entries of the &lt;code&gt;omit&lt;/code&gt; set. Simply add all folder or file names you want to remove.&lt;/p&gt;
&lt;h3 id=&quot;show-every-element-in-explorer&quot;&gt;Show every element in explorer&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#show-every-element-in-explorer&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To override the default filter function that removes the &lt;code&gt;tags&lt;/code&gt; folder from the explorer, you can set the filter function to &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz.layout.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Component&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.Explorer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  filterFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// apply no filter function, every file and folder will visible&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;advanced-examples&quot;&gt;Advanced examples&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#advanced-examples&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;add-emoji-prefix&quot;&gt;Add emoji prefix&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#add-emoji-prefix&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To add emoji prefixes (üìÅ for folders, üìÑ for files), you could use a map function like this:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz.layout.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Component&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.Explorer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;mapFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (node) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// dont change name of root node&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.depth &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// set emoji for file/folder&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.file) {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.displayName &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;üìÑ &quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.displayName&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      } &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.displayName &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;üìÅ &quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;.displayName&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;putting-it-all-together&quot;&gt;Putting it all together&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#putting-it-all-together&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In this example, we‚Äôre going to customize the explorer by using functions from examples above to &lt;a href=&quot;#add-emoji-prefix&quot; class=&quot;internal&quot;&gt;add emoji prefixes&lt;/a&gt;, &lt;a href=&quot;#remove-list-of-elements-filter&quot; class=&quot;internal&quot;&gt;filter out some folders&lt;/a&gt; and &lt;a href=&quot;#use-sort-to-put-files-first&quot; class=&quot;internal&quot;&gt;sort with files above folders&lt;/a&gt;.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz.layout.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Component&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.Explorer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  filterFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; sampleFilterFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  mapFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; sampleMapFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  sortFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; sampleSortFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  order&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;filter&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;sort&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;map&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice how we customized the &lt;code&gt;order&lt;/code&gt; array here. This is done because the default order applies the &lt;code&gt;sort&lt;/code&gt; function last. While this normally works well, it would cause unintended behavior here, since we changed the first characters of all display names. In our example, &lt;code&gt;sort&lt;/code&gt; would be applied based off the emoji prefix instead of the first &lt;em&gt;real&lt;/em&gt; character.&lt;/p&gt;
&lt;p&gt;To fix this, we just changed around the order and apply the &lt;code&gt;sort&lt;/code&gt; function before changing the display names in the &lt;code&gt;map&lt;/code&gt; function.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;tip&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;When writing more complicated functions, the &lt;code&gt;layout&lt;/code&gt; file can start to look very cramped.
You can fix this by defining your functions in another file.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;functions.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; { Options } &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;./quartz/components/ExplorerNode&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;mapFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;mapFn&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (node) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// implement your function here&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;filterFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;filterFn&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (node) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// implement your function here&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;sortFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;Options&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;sortFn&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; (a&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; b) &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&gt;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// implement your function here&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can then import them like this:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz.layout.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; { mapFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; filterFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; sortFn } &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;from&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;./functions.ts&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Component&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.Explorer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  mapFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; mapFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  filterFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; filterFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  sortFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; sortFn&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;</description>
    <pubDate>Wed, 18 Oct 2023 02:43:20 GMT</pubDate>
  </item><item>
    <title>Folder and Tag Listings</title>
    <link>https://notes.zeyadnotes.dev/features/folder-and-tag-listings</link>
    <guid>https://notes.zeyadnotes.dev/features/folder-and-tag-listings</guid>
    <description>&lt;p&gt;Quartz creates listing pages for any folders and tags you have.&lt;/p&gt;
&lt;h2 id=&quot;folder-listings&quot;&gt;Folder Listings&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#folder-listings&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Quartz will generate an index page for all the pages under that folder. This includes any content that is multiple levels deep.&lt;/p&gt;
&lt;p&gt;Additionally, Quartz will also generate pages for subfolders. Say you have a note in a nested folder &lt;code&gt;content/abc/def/note.md&lt;/code&gt;. Then, Quartz would generate a page for all the notes under &lt;code&gt;abc&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; a page for all the notes under &lt;code&gt;abc/def&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default, Quartz will title the page &lt;code&gt;Folder: &amp;#x3C;name of folder&gt;&lt;/code&gt; and no description. You can override this by creating an &lt;code&gt;index.md&lt;/code&gt; file in the folder with the &lt;code&gt;title&lt;/code&gt; &lt;a href=&quot;../authoring-content#syntax&quot; class=&quot;internal&quot; data-slug=&quot;authoring-content&quot;&gt;frontmatter&lt;/a&gt; field. Any content you write in this file will also be used in the description of the folder.&lt;/p&gt;
&lt;p&gt;For example, for the folder &lt;code&gt;content/posts&lt;/code&gt;, you can add another file &lt;code&gt;content/posts/index.md&lt;/code&gt; to add a specific description for it.&lt;/p&gt;
&lt;h2 id=&quot;tag-listings&quot;&gt;Tag Listings&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#tag-listings&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Quartz will also create an index page for each unique tag in your vault and render a list of all notes with that tag.&lt;/p&gt;
&lt;p&gt;Quartz also supports tag hierarchies as well (e.g. &lt;code&gt;plugin/emitter&lt;/code&gt;) and will also render a separate tag page for each layer of the tag hierarchy. It will also create a default global tag index page at &lt;code&gt;/tags&lt;/code&gt; that displays a list of all the tags in your Quartz.&lt;/p&gt;
&lt;p&gt;Like folder listings, you can also provide a description and title for a tag page by creating a file for each tag. For example, if you wanted to create a custom description for the&lt;a href=&quot;.././tags/component&quot; class=&quot;tag-link internal&quot; data-slug=&quot;tags/component&quot;&gt;#component&lt;/a&gt; tag, you would create a file at &lt;code&gt;content/tags/component.md&lt;/code&gt; with a title and description.&lt;/p&gt;
&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The layout for both the folder and content pages can be customized. By default, they use the &lt;code&gt;defaultListPageLayout&lt;/code&gt; in &lt;code&gt;quartz.layouts.ts&lt;/code&gt;. If you‚Äôd like to make more involved changes to the layout and don‚Äôt mind editing some &lt;a href=&quot;../advanced/creating-components&quot; class=&quot;internal&quot; data-slug=&quot;advanced/creating-components&quot;&gt;Quartz components&lt;/a&gt;, you can take a look at &lt;code&gt;quartz/components/pages/FolderContent.tsx&lt;/code&gt; and &lt;code&gt;quartz/components/pages/TagContent.tsx&lt;/code&gt; respectively.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Removing folder listings: remove &lt;code&gt;Plugin.FolderPage()&lt;/code&gt; from &lt;code&gt;emitters&lt;/code&gt; in &lt;code&gt;quartz.config.ts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Removing tag listings: remove &lt;code&gt;Plugin.TagPage()&lt;/code&gt; from &lt;code&gt;emitters&lt;/code&gt; in &lt;code&gt;quartz.config.ts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Full-text Search</title>
    <link>https://notes.zeyadnotes.dev/features/full-text-search</link>
    <guid>https://notes.zeyadnotes.dev/features/full-text-search</guid>
    <description>&lt;p&gt;Full-text search in Quartz is powered by &lt;a href=&quot;https://github.com/nextapps-de/flexsearch&quot; class=&quot;external&quot;&gt;Flexsearch&lt;/a&gt;. It‚Äôs fast enough to return search results in under 10ms for Quartzs as large as half a million words.&lt;/p&gt;
&lt;p&gt;It can be opened by either clicking on the search bar or pressing &lt;code&gt;‚åò&lt;/code&gt;/&lt;code&gt;ctrl&lt;/code&gt; + &lt;code&gt;K&lt;/code&gt;. The top 5 search results are shown on each query. Matching subterms are highlighted and the most relevant 30 words are excerpted. Clicking on a search result will navigate to that page.&lt;/p&gt;
&lt;p&gt;To search content by tags, you can either press &lt;code&gt;‚åò&lt;/code&gt;/&lt;code&gt;ctrl&lt;/code&gt; + &lt;code&gt;shift&lt;/code&gt; + &lt;code&gt;K&lt;/code&gt; or start your query with &lt;code&gt;#&lt;/code&gt; (e.g. &lt;code&gt;#components&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This component is also keyboard accessible: Tab and Shift+Tab will cycle forward and backward through search results and Enter will navigate to the highlighted result (first result by default). You are also able to navigate search results using &lt;code&gt;ArrowUp&lt;/code&gt; and &lt;code&gt;ArrowDown&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;info&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot;&gt;&lt;/circle&gt;&lt;line x1=&quot;12&quot; y1=&quot;16&quot; x2=&quot;12&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;8&quot; x2=&quot;12.01&quot; y2=&quot;8&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Info &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Search requires the &lt;code&gt;ContentIndex&lt;/code&gt; emitter plugin to be present in the &lt;a href=&quot;../configuration&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;configuration&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;indexing-behaviour&quot;&gt;Indexing Behaviour&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#indexing-behaviour&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;By default, it indexes every page on the site with &lt;strong&gt;Markdown syntax removed&lt;/strong&gt;. This means link URLs for instance are not indexed.&lt;/p&gt;
&lt;p&gt;It properly tokenizes Chinese, Korean, and Japenese characters and constructs separate indexes for the title, content and tags, weighing title matches above content matches.&lt;/p&gt;
&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Removing search: delete all usages of &lt;code&gt;Component.Search()&lt;/code&gt; from &lt;code&gt;quartz.layout.ts&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Component: &lt;code&gt;quartz/components/Search.tsx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Style: &lt;code&gt;quartz/components/styles/search.scss&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Script: &lt;code&gt;quartz/components/scripts/search.inline.ts&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;You can edit &lt;code&gt;contextWindowWords&lt;/code&gt;, &lt;code&gt;numSearchResults&lt;/code&gt; or &lt;code&gt;numTagResults&lt;/code&gt; to suit your needs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Mon, 04 Sep 2023 05:36:30 GMT</pubDate>
  </item><item>
    <title>Graph View</title>
    <link>https://notes.zeyadnotes.dev/features/graph-view</link>
    <guid>https://notes.zeyadnotes.dev/features/graph-view</guid>
    <description>&lt;p&gt;Quartz features a graph-view that can show both a local graph view and a global graph view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The local graph view shows files that either link to the current file or are linked from the current file. In other words, it shows all notes that are &lt;em&gt;at most&lt;/em&gt; one hop away.&lt;/li&gt;
&lt;li&gt;The global graph view can be toggled by clicking the graph icon on the top-right of the local graph view. It shows &lt;em&gt;all&lt;/em&gt; the notes in your graph and how they connect to each other.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By default, the node radius is proportional to the total number of incoming and outgoing internal links from that file.&lt;/p&gt;
&lt;p&gt;Additionally, similar to how browsers highlight visited links a different colour, the graph view will also show nodes that you have visited in a different colour.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;info&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot;&gt;&lt;/circle&gt;&lt;line x1=&quot;12&quot; y1=&quot;16&quot; x2=&quot;12&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;8&quot; x2=&quot;12.01&quot; y2=&quot;8&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Info &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Graph View requires the &lt;code&gt;ContentIndex&lt;/code&gt; emitter plugin to be present in the &lt;a href=&quot;../configuration&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;configuration&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Most configuration can be done by passing in options to &lt;code&gt;Component.Graph()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, here‚Äôs what the default configuration looks like:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;quartz.layout.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;Component&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.Graph&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  localGraph&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    drag&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// whether to allow panning the view around&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    zoom&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// whether to allow zooming in and out&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    depth&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// how many hops of notes to display&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    scale&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;1.1&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// default view scale&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    repelForce&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;0.5&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// how much nodes should repel each other&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    centerForce&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;0.3&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// how much force to use when trying to center the nodes&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    linkDistance&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;30&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// how long should the links be by default?&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    fontSize&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;0.6&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// what size should the node labels be?&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    opacityScale&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// how quickly do we fade out the labels when zooming out?&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  globalGraph&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    drag&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    zoom&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    depth&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    scale&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;0.9&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    repelForce&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;0.5&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    centerForce&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;0.3&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    linkDistance&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;30&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    fontSize&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;0.6&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    opacityScale&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  }&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When passing in your own options, you can omit any or all of these fields if you‚Äôd like to keep the default value for that field.&lt;/p&gt;
&lt;p&gt;Want to customize it even more?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Removing graph view: delete all usages of &lt;code&gt;Component.Graph()&lt;/code&gt; from &lt;code&gt;quartz.layout.ts&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Component: &lt;code&gt;quartz/components/Graph.tsx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Style: &lt;code&gt;quartz/components/styles/graph.scss&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Script: &lt;code&gt;quartz/components/scripts/graph.inline.ts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Feature List</title>
    <link>https://notes.zeyadnotes.dev/features/</link>
    <guid>https://notes.zeyadnotes.dev/features/</guid>
    <description></description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Popover Previews</title>
    <link>https://notes.zeyadnotes.dev/features/popover-previews</link>
    <guid>https://notes.zeyadnotes.dev/features/popover-previews</guid>
    <description>&lt;p&gt;Like Wikipedia, when you hover over a link in Quartz, there is a popup of a page preview that you can scroll to see the entire content. Links to headers will also scroll the popup to show that specific header in view.&lt;/p&gt;
&lt;p&gt;By default, Quartz only fetches previews for pages inside your vault due to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot; class=&quot;external&quot;&gt;CORS&lt;/a&gt;. It does this by selecting all HTML elements with the &lt;code&gt;popover-hint&lt;/code&gt; class. For most pages, this includes the page title, page metadata like words and time to read, tags, and the actual page content.&lt;/p&gt;
&lt;p&gt;When &lt;a href=&quot;../advanced/creating-components&quot; class=&quot;internal&quot; data-slug=&quot;advanced/creating-components&quot;&gt;creating your own components&lt;/a&gt;, you can include this &lt;code&gt;popover-hint&lt;/code&gt; class to also include it in the popover.&lt;/p&gt;
&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#configuration&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Remove popovers: set the &lt;code&gt;enablePopovers&lt;/code&gt; field in &lt;code&gt;quartz.config.ts&lt;/code&gt; to be &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Style: &lt;code&gt;quartz/components/styles/popover.scss&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Script: &lt;code&gt;quartz/components/scripts/popover.inline.ts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Private Pages</title>
    <link>https://notes.zeyadnotes.dev/features/private-pages</link>
    <guid>https://notes.zeyadnotes.dev/features/private-pages</guid>
    <description>&lt;p&gt;There may be some notes you want to avoid publishing as a website. Quartz supports this through two mechanisms which can be used in conjunction:&lt;/p&gt;
&lt;h2 id=&quot;filter-plugins&quot;&gt;Filter Plugins&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#filter-plugins&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;../advanced/making-plugins#filters&quot; class=&quot;internal&quot; data-slug=&quot;advanced/making-plugins&quot;&gt;Filter plugins&lt;/a&gt; are plugins that filter out content based off of certain criteria. By default, Quartz uses the &lt;code&gt;Plugin.RemoveDrafts&lt;/code&gt; plugin which filters out any note that has &lt;code&gt;draft: true&lt;/code&gt; in the frontmatter.&lt;/p&gt;
&lt;p&gt;If you‚Äôd like to only publish a select number of notes, you can instead use &lt;code&gt;Plugin.ExplicitPublish&lt;/code&gt; which will filter out all notes except for any that have &lt;code&gt;publish: true&lt;/code&gt; in the frontmatter.&lt;/p&gt;
&lt;h2 id=&quot;ignorepatterns&quot;&gt;&lt;code&gt;ignorePatterns&lt;/code&gt;&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#ignorepatterns&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is a field in &lt;code&gt;quartz.config.ts&lt;/code&gt; under the main &lt;a href=&quot;../configuration&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;configuration&lt;/a&gt; which allows you to specify a list of patterns to effectively exclude from parsing all together. Any valid &lt;a href=&quot;https://github.com/mrmlnc/fast-glob#pattern-syntax&quot; class=&quot;external&quot;&gt;glob&lt;/a&gt; pattern works here.&lt;/p&gt;
&lt;p&gt;Common examples include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;some/folder&lt;/code&gt;: exclude the entire of &lt;code&gt;some/folder&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*.md&lt;/code&gt;: exclude all files with a &lt;code&gt;.md&lt;/code&gt; extension&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!*.md&lt;/code&gt; exclude all files that &lt;em&gt;don‚Äôt&lt;/em&gt; have a &lt;code&gt;.md&lt;/code&gt; extension&lt;/li&gt;
&lt;li&gt;&lt;code&gt;**/private&lt;/code&gt;: exclude any files or folders named &lt;code&gt;private&lt;/code&gt; at any level of nesting&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;warning&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;9&quot; x2=&quot;12&quot; y2=&quot;13&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Marking something as private via either a plugin or through the &lt;code&gt;ignorePatterns&lt;/code&gt; pattern will only prevent a page from being included in the final built site. If your GitHub repository is public, also be sure to include an ignore for those in the &lt;code&gt;.gitignore&lt;/code&gt; of your Quartz. See the &lt;code&gt;git&lt;/code&gt; &lt;a href=&quot;https://git-scm.com/docs/gitignore#_pattern_format&quot; class=&quot;external&quot;&gt;documentation&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    <pubDate>Thu, 07 Sep 2023 15:13:41 GMT</pubDate>
  </item><item>
    <title>Recent Notes</title>
    <link>https://notes.zeyadnotes.dev/features/recent-notes</link>
    <guid>https://notes.zeyadnotes.dev/features/recent-notes</guid>
    <description>&lt;p&gt;Quartz can generate a list of recent notes for based on some filtering and sorting criteria. Though this component isn‚Äôt included in any &lt;a href=&quot;../layout&quot; class=&quot;internal&quot; data-slug=&quot;layout&quot;&gt;layout&lt;/a&gt; by default, you can add it by using &lt;code&gt;Component.RecentNotes&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Changing the title from ‚ÄúRecent notes‚Äù: pass in an additional parameter to &lt;code&gt;Component.RecentNotes({ title: &quot;Recent writing&quot; })&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Changing the number of recent notes: pass in an additional parameter to &lt;code&gt;Component.RecentNotes({ limit: 5 })&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Show a ‚Äòsee more‚Äô link: pass in an additional parameter to &lt;code&gt;Component.RecentNotes({ linkToMore: &quot;tags/components&quot; })&lt;/code&gt;. This field should be a full slug to a page that exists.&lt;/li&gt;
&lt;li&gt;Customize filtering: pass in an additional parameter to &lt;code&gt;Component.RecentNotes({ filter: someFilterFunction })&lt;/code&gt;. The filter function should be a function that has the signature &lt;code&gt;(f: QuartzPluginData) =&gt; boolean&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Customize sorting: pass in an additional parameter to &lt;code&gt;Component.RecentNotes({ sort: someSortFunction })&lt;/code&gt;. By default, Quartz will sort by date and then tie break lexographically. The sort function should be a function that has the signature &lt;code&gt;(f1: QuartzPluginData, f2: QuartzPluginData) =&gt; number&lt;/code&gt;. See &lt;code&gt;byDateAndAlphabetical&lt;/code&gt; in &lt;code&gt;quartz/components/PageList.tsx&lt;/code&gt; for an example.&lt;/li&gt;
&lt;li&gt;Component: &lt;code&gt;quartz/components/RecentNotes.tsx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Style: &lt;code&gt;quartz/components/styles/recentNotes.scss&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Syntax Highlighting</title>
    <link>https://notes.zeyadnotes.dev/features/syntax-highlighting</link>
    <guid>https://notes.zeyadnotes.dev/features/syntax-highlighting</guid>
    <description>&lt;p&gt;Syntax highlighting in Quartz is completely done at build-time. This means that Quartz only ships pre-calculated CSS to highlight the right words so there is no heavy client-side bundle that does the syntax highlighting.&lt;/p&gt;
&lt;p&gt;And, unlike some client-side highlighters, it has a full TextMate parser grammar instead of using Regexes, allowing for highly accurate code highlighting.&lt;/p&gt;
&lt;p&gt;In short, it generates HTML that looks exactly like your code in an editor like VS Code. Under the hood, it‚Äôs powered by &lt;a href=&quot;https://rehype-pretty-code.netlify.app/&quot; class=&quot;external&quot;&gt;Rehype Pretty Code&lt;/a&gt; which uses &lt;a href=&quot;https://github.com/shikijs/shiki&quot; class=&quot;external&quot;&gt;Shiki&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;warning&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;9&quot; x2=&quot;12&quot; y2=&quot;13&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Syntax highlighting does have an impact on build speed if you have a lot of code snippets in your notes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;formatting&quot;&gt;Formatting&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#formatting&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Text inside &lt;code&gt;backticks&lt;/code&gt; on a line will be formatted like code.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```ts
export function trimPathSuffix(fp: string): string {
  fp = clientSideSlug(fp)
  let [cleanPath, anchor] = fp.split(&quot;#&quot;, 2)
  anchor = anchor === undefined ? &quot;&quot; : &quot;#&quot; + anchor

  return cleanPath + anchor
}
```
&lt;/code&gt;&lt;/pre&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;trimPathSuffix&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(fp&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  fp &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;clientSideSlug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(fp)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;let&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [cleanPath&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;fp&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.split&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  anchor &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;===&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; cleanPath &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;titles&quot;&gt;Titles&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#titles&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Add a file title to your code block, with text inside double quotes (&lt;code&gt;&quot;&quot;&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```js title=&quot;...&quot;

```
&lt;/code&gt;&lt;/pre&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;quartz/path.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;trimPathSuffix&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(fp&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  fp &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;clientSideSlug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(fp)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;let&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [cleanPath&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;fp&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.split&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  anchor &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;===&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; cleanPath &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;line-highlighting&quot;&gt;Line highlighting&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#line-highlighting&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Place a numeric range inside¬†&lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```js {1-3,4}

```
&lt;/code&gt;&lt;/pre&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;trimPathSuffix&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(fp&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  fp &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;clientSideSlug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(fp)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;let&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [cleanPath&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;fp&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.split&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  anchor &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;===&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot; data-highlighted-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; cleanPath &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;word-highlighting&quot;&gt;Word highlighting&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#word-highlighting&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A series of characters, like a literal regex.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```js /useState/
const [age, setAge] = useState(50);
const [name, setName] = useState(&#039;Taylor&#039;);
```
&lt;/code&gt;&lt;/pre&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;js&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;js&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;age&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;setAge&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot; data-highlighted-chars=&quot;&quot;&gt;useState&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;50&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;setName&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot; data-highlighted-chars=&quot;&quot;&gt;useState&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;Taylor&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;line-numbers&quot;&gt;Line numbers&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#line-numbers&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Syntax highlighting has line numbers configured automatically. If you want to start line numbers at a specific number, use¬†&lt;code&gt;showLineNumbers{number}&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```js showLineNumbers{number}

```
&lt;/code&gt;&lt;/pre&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot;&gt;&lt;code data-line-numbers=&quot;&quot; style=&quot;counter-set: line 19;&quot; data-language=&quot;ts&quot; data-theme=&quot;default&quot; data-line-numbers-max-digits=&quot;2&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;function&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;trimPathSuffix&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(fp&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  fp &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;clientSideSlug&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(fp)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;let&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; [cleanPath&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;fp&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;.split&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  anchor &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;===&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;undefined&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; cleanPath &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; anchor&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;escaping-code-blocks&quot;&gt;Escaping code blocks&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#escaping-code-blocks&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can format a codeblock inside of a codeblock by wrapping it with another level of backtick fences that has one more backtick than the previous fence.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;````
```js /useState/
const [age, setAge] = useState(50);
const [name, setName] = useState(&#039;Taylor&#039;);
```
````
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Removing syntax highlighting: delete all usages of &lt;code&gt;Plugin.SyntaxHighlighting()&lt;/code&gt; from &lt;code&gt;quartz.config.ts&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Style: By default, Quartz uses derivatives of the GitHub light and dark themes. You can customize the colours in the &lt;code&gt;quartz/styles/syntax.scss&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Plugin: &lt;code&gt;quartz/plugins/transformers/syntax.ts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Table of Contents</title>
    <link>https://notes.zeyadnotes.dev/features/table-of-contents</link>
    <guid>https://notes.zeyadnotes.dev/features/table-of-contents</guid>
    <description>&lt;p&gt;Quartz can automatically generate a table of contents from a list of headings on each page. It will also show you your current scroll position on the site by marking headings you‚Äôve scrolled through with a different colour.&lt;/p&gt;
&lt;p&gt;By default, it will show all headers from H1 (&lt;code&gt;# Title&lt;/code&gt;) all the way to H3 (&lt;code&gt;### Title&lt;/code&gt;) and will only show the table of contents if there is more than 1 header on the page.
You can also hide the table of contents on a page by adding &lt;code&gt;showToc: false&lt;/code&gt; to the frontmatter for that page.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;info&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot;&gt;&lt;/circle&gt;&lt;line x1=&quot;12&quot; y1=&quot;16&quot; x2=&quot;12&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;8&quot; x2=&quot;12.01&quot; y2=&quot;8&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Info &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;This feature requires both &lt;code&gt;Plugin.TableOfContents&lt;/code&gt; in your &lt;code&gt;quartz.config.ts&lt;/code&gt; and &lt;code&gt;Component.TableOfContents&lt;/code&gt; in your &lt;code&gt;quartz.layout.ts&lt;/code&gt; to function correctly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#customization&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Removing table of contents: remove all instances of &lt;code&gt;Plugin.TableOfContents()&lt;/code&gt; from &lt;code&gt;quartz.config.ts&lt;/code&gt;. and &lt;code&gt;Component.TableOfContents()&lt;/code&gt; from &lt;code&gt;quartz.layout.ts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Changing the max depth: pass in a parameter to &lt;code&gt;Plugin.TableOfContents({ maxDepth: 4 })&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Changing the minimum number of entries in the Table of Contents before it renders: pass in a parameter to &lt;code&gt;Plugin.TableOfContents({ minEntries: 3 })&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Component: &lt;code&gt;quartz/components/TableOfContents.tsx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Style:
&lt;ul&gt;
&lt;li&gt;Modern (default): &lt;code&gt;quartz/components/styles/toc.scss&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Legacy Quartz 3 style: &lt;code&gt;quartz/components/styles/legacyToc.scss&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Script: &lt;code&gt;quartz/components/scripts/toc.inline.ts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 20 Sep 2023 18:58:52 GMT</pubDate>
  </item><item>
    <title>Wikilinks</title>
    <link>https://notes.zeyadnotes.dev/features/wikilinks</link>
    <guid>https://notes.zeyadnotes.dev/features/wikilinks</guid>
    <description>&lt;p&gt;Wikilinks were pioneered by earlier internet wikis to make it easier to write links across pages without needing to write Markdown or HTML links each time.&lt;/p&gt;
&lt;p&gt;Quartz supports Wikilinks by default and these links are resolved by Quartz using &lt;code&gt;Plugin.CrawlLinks&lt;/code&gt;. See the &lt;a href=&quot;https://help.obsidian.md/Linking+notes+and+files/Internal+links&quot; class=&quot;external&quot;&gt;Obsidian Help page on Internal Links&lt;/a&gt; for more information on Wikilink syntax.&lt;/p&gt;
&lt;p&gt;This is enabled as a part of &lt;a href=&quot;../features/Obsidian-compatibility&quot; class=&quot;internal&quot; data-slug=&quot;features/Obsidian-compatibility&quot;&gt;Obsidian compatibility&lt;/a&gt; and can be configured and enabled/disabled from that plugin.&lt;/p&gt;
&lt;h2 id=&quot;syntax&quot;&gt;Syntax&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#syntax&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[[Path to file]]&lt;/code&gt;: produces a link to &lt;code&gt;Path to file.md&lt;/code&gt; (or &lt;code&gt;Path-to-file.md&lt;/code&gt;) with the text &lt;code&gt;Path to file&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[[Path to file | Here&#039;s the title override]]&lt;/code&gt;: produces a link to &lt;code&gt;Path to file.md&lt;/code&gt; with the text &lt;code&gt;Here&#039;s the title override&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[[Path to file#anchor|Anchor]]&lt;/code&gt;: produces a link to the anchor &lt;code&gt;Anchor&lt;/code&gt; in the file &lt;code&gt;Path to file.md&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[[Path to file#block-ref|^block-ref]]&lt;/code&gt;: produces a link to the specific block &lt;code&gt;block-ref&lt;/code&gt; in the file &lt;code&gt;Path to file.md&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 13 Sep 2023 18:28:53 GMT</pubDate>
  </item><item>
    <title>Hosting</title>
    <link>https://notes.zeyadnotes.dev/hosting</link>
    <guid>https://notes.zeyadnotes.dev/hosting</guid>
    <description>&lt;p&gt;Quartz effectively turns your Markdown files and other resources into a bundle of HTML, JS, and CSS files (a website!).&lt;/p&gt;
&lt;p&gt;However, if you‚Äôd like to publish your site to the world, you need a way to host it online. This guide will detail how to deploy with either GitHub Pages or Cloudflare pages but any service that allows you to deploy static HTML should work as well (e.g. Netlify, Replit, etc.)&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;tip&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Some Quartz features (like &lt;a href=&quot;./features/RSS-Feed&quot; class=&quot;internal&quot; data-slug=&quot;features/RSS-Feed&quot;&gt;RSS Feed&lt;/a&gt; and sitemap generation) require &lt;code&gt;baseUrl&lt;/code&gt; to be configured properly in your &lt;a href=&quot;./configuration&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;configuration&lt;/a&gt; to work properly. Make sure you set this before deploying!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;cloudflare-pages&quot;&gt;Cloudflare Pages&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#cloudflare-pages&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Log in to the¬†&lt;a href=&quot;https://dash.cloudflare.com/&quot; class=&quot;external&quot;&gt;Cloudflare dashboard&lt;/a&gt;¬†and select your account.&lt;/li&gt;
&lt;li&gt;In Account Home, select¬†&lt;strong&gt;Workers &amp;#x26; Pages&lt;/strong&gt;¬†&gt;¬†&lt;strong&gt;Create application&lt;/strong&gt;¬†&gt;¬†&lt;strong&gt;Pages&lt;/strong&gt;¬†&gt;¬†&lt;strong&gt;Connect to Git&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Select the new GitHub repository that you created and, in the¬†&lt;strong&gt;Set up builds and deployments&lt;/strong&gt;¬†section, provide the following information:&lt;/li&gt;
&lt;/ol&gt;

























&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Configuration option&lt;/th&gt;&lt;th&gt;Value&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Production branch&lt;/td&gt;&lt;td&gt;&lt;code&gt;v4&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Framework preset&lt;/td&gt;&lt;td&gt;&lt;code&gt;None&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Build command&lt;/td&gt;&lt;td&gt;&lt;code&gt;npx quartz build&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Build output directory&lt;/td&gt;&lt;td&gt;&lt;code&gt;public&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Press ‚ÄúSave and deploy‚Äù and Cloudflare should have a deployed version of your site in about a minute. Then, every time you sync your Quartz changes to GitHub, your site should be updated.&lt;/p&gt;
&lt;p&gt;To add a custom domain, check out &lt;a href=&quot;https://developers.cloudflare.com/pages/platform/custom-domains/&quot; class=&quot;external&quot;&gt;Cloudflare‚Äôs documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;github-pages&quot;&gt;GitHub Pages&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#github-pages&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Like Quartz 3, you can deploy the site generated by Quartz 4 via GitHub Pages.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;warning&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;9&quot; x2=&quot;12&quot; y2=&quot;13&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Warning &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Quartz generates files in the format of &lt;code&gt;file.html&lt;/code&gt; instead of &lt;code&gt;file/index.html&lt;/code&gt; which means the trailing slashes for &lt;em&gt;non-folder paths&lt;/em&gt; are dropped. As GitHub pages does not do this redirect, this may cause existing links to your site that use trailing slashes to break. If not breaking existing links is important to you, consider using &lt;a href=&quot;#cloudflare-pages&quot; class=&quot;internal&quot;&gt;Cloudflare Pages&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In your local Quartz, create a new file &lt;code&gt;quartz/.github/workflows/deploy.yml&lt;/code&gt;.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;yaml&quot; data-theme=&quot;default&quot;&gt;quartz/.github/workflows/deploy.yml&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;yaml&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;yaml&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;Deploy Quartz site to GitHub Pages&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;on&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;push&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;branches&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      - &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;v4&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;permissions&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;contents&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;read&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;pages&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;write&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;id-token&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;write&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;concurrency&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;group&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;&quot;pages&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;cancel-in-progress&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;false&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;jobs&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;build&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;runs-on&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;ubuntu-22.04&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;steps&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      - &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;uses&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;actions/checkout@v3&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;with&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;fetch-depth&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;# Fetch all history for git info&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      - &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;uses&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;actions/setup-node@v3&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;with&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;node-version&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;18.14&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      - &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;Install Dependencies&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;run&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;npm ci&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      - &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;Build Quartz&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;run&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;npx quartz build&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      - &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;Upload artifact&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;uses&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;actions/upload-pages-artifact@v2&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;with&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;          &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;path&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;public&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt; &lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;deploy&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;needs&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;build&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;environment&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;github-pages&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;url&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;${{ steps.deployment.outputs.page_url }}&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;runs-on&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;ubuntu-latest&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;steps&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;      - &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;Deploy to GitHub Pages&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;deployment&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;uses&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string-expression)&quot;&gt;actions/deploy-pages@v2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Head to ‚ÄúSettings‚Äù tab of your forked repository and in the sidebar, click ‚ÄúPages‚Äù. Under ‚ÄúSource‚Äù, select ‚ÄúGitHub Actions‚Äù.&lt;/li&gt;
&lt;li&gt;Commit these changes by doing &lt;code&gt;npx quartz sync&lt;/code&gt;. This should deploy your site to &lt;code&gt;&amp;#x3C;github-username&gt;.github.io/&amp;#x3C;repository-name&gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;tip&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;If you get an error about not being allowed to deploy to &lt;code&gt;github-pages&lt;/code&gt; due to environment protection rules, make sure you remove any existing GitHub pages environments.&lt;/p&gt;
&lt;p&gt;You can do this by going to your Settings page on your GitHub fork and going to the Environments tab and pressing the trash icon. The GitHub action will recreate the environment for you correctly the next time you sync your Quartz.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;custom-domain&quot;&gt;Custom Domain&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#custom-domain&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here‚Äôs how to add a custom domain to your GitHub pages deployment.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Head to the ‚ÄúSettings‚Äù tab of your forked repository.&lt;/li&gt;
&lt;li&gt;In the ‚ÄúCode and automation‚Äù section of the sidebar, click ‚ÄúPages‚Äù.&lt;/li&gt;
&lt;li&gt;Under ‚ÄúCustom Domain‚Äù, type your custom domain and click ‚ÄúSave‚Äù.&lt;/li&gt;
&lt;li&gt;This next step depends on whether you are using an apex domain (&lt;code&gt;example.com&lt;/code&gt;) or a subdomain (&lt;code&gt;subdomain.example.com&lt;/code&gt;).
&lt;ul&gt;
&lt;li&gt;If you are using an apex domain, navigate to your DNS provider and create an &lt;code&gt;A&lt;/code&gt; record that points your apex domain to GitHub‚Äôs name servers which have the following IP addresses:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;185.199.108.153&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;185.199.109.153&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;185.199.110.153&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;185.199.111.153&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If you are using a subdomain, navigate to your DNS provider and create a¬†&lt;code&gt;CNAME&lt;/code&gt;¬†record that points your subdomain to the default domain for your site. For example, if you want to use the subdomain¬†&lt;code&gt;quartz.example.com&lt;/code&gt;¬†for your user site, create a¬†&lt;code&gt;CNAME&lt;/code&gt;¬†record that points¬†&lt;code&gt;quartz.example.com&lt;/code&gt;¬†to¬†&lt;code&gt;&amp;#x3C;github-username&gt;.github.io&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;./images/dns-records.png&quot; width=&quot;auto&quot; height=&quot;auto&quot;&gt;&lt;em&gt;The above shows a screenshot of Google Domains configured for both &lt;code&gt;jzhao.xyz&lt;/code&gt; (an apex domain) and &lt;code&gt;quartz.jzhao.xyz&lt;/code&gt; (a subdomain).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-a-subdomain&quot; class=&quot;external&quot;&gt;GitHub documentation&lt;/a&gt; for more detail about how to setup your own custom domain with GitHub Pages.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;question&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot;&gt;&lt;/circle&gt;&lt;path d=&quot;M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3&quot;&gt;&lt;/path&gt;&lt;line x1=&quot;12&quot; y1=&quot;17&quot; x2=&quot;12.01&quot; y2=&quot;17&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Why aren&#039;t my changes showing up? &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;There could be many different reasons why your changes aren‚Äôt showing up but the most likely reason is that you forgot to push your changes to GitHub.&lt;/p&gt;
&lt;p&gt;Make sure you save your changes to Git and sync it to GitHub by doing &lt;code&gt;npx quartz sync&lt;/code&gt;. This will also make sure to pull any updates you may have made from other devices so you have them locally.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;vercel&quot;&gt;Vercel&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#vercel&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;fix-urls&quot;&gt;Fix URLs&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#fix-urls&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Before deploying to Vercel, a &lt;code&gt;vercel.json&lt;/code&gt; file is required at the root of the project directory. It needs to contain the following configuration so that URLs don‚Äôt require the &lt;code&gt;.html&lt;/code&gt; extension:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;json&quot; data-theme=&quot;default&quot;&gt;vercel.json&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;json&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;json&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;&quot;cleanUrls&quot;&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-punctuation)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-constant)&quot;&gt;true&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;deploy-to-vercel&quot;&gt;Deploy to Vercel&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#deploy-to-vercel&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Log in to the &lt;a href=&quot;https://vercel.com/dashboard&quot; class=&quot;external&quot;&gt;Vercel Dashboard&lt;/a&gt; and click ‚ÄúAdd New‚Ä¶‚Äù &gt; Project&lt;/li&gt;
&lt;li&gt;Import the Git repository containing your Quartz project.&lt;/li&gt;
&lt;li&gt;Give the project a name (lowercase characters and hyphens only)&lt;/li&gt;
&lt;li&gt;Check that these configuration options are set:&lt;/li&gt;
&lt;/ol&gt;





















&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Configuration option&lt;/th&gt;&lt;th&gt;Value&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Framework Preset&lt;/td&gt;&lt;td&gt;&lt;code&gt;Other&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Root Directory&lt;/td&gt;&lt;td&gt;&lt;code&gt;./&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Build and Output Settings &gt; Build Command&lt;/td&gt;&lt;td&gt;&lt;code&gt;npx quartz build&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;Press Deploy. Once it‚Äôs live, you‚Äôll have 2 &lt;code&gt;*.vercel.app&lt;/code&gt; URLs to view the page.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;custom-domain-1&quot;&gt;Custom Domain&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#custom-domain-1&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;note&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;line x1=&quot;18&quot; y1=&quot;2&quot; x2=&quot;22&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&lt;path d=&quot;M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;If there is something already hosted on the domain, these steps will not work without replacing the previous content. As a workaround, you could use Next.js rewrites or use the next section to create a subdomain.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Update the &lt;code&gt;baseUrl&lt;/code&gt; in &lt;code&gt;quartz.config.js&lt;/code&gt; if necessary.&lt;/li&gt;
&lt;li&gt;Go to the &lt;a href=&quot;https://vercel.com/dashboard/domains&quot; class=&quot;external&quot;&gt;Domains - Dashboard&lt;/a&gt; page in Vercel.&lt;/li&gt;
&lt;li&gt;Connect the domain to Vercel&lt;/li&gt;
&lt;li&gt;Press ‚ÄúAdd‚Äù to connect a custom domain to Vercel.&lt;/li&gt;
&lt;li&gt;Select your Quartz repository and press Continue.&lt;/li&gt;
&lt;li&gt;Enter the domain you want to connect it to.&lt;/li&gt;
&lt;li&gt;Follow the instructions to update your DNS records until you see ‚ÄúValid Configuration‚Äù&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;use-a-subdomain&quot;&gt;Use a Subdomain&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#use-a-subdomain&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Using &lt;code&gt;docs.example.com&lt;/code&gt; is an example of a subdomain. They‚Äôre a simple way of connecting multiple deployments to one domain.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Update the &lt;code&gt;baseUrl&lt;/code&gt; in &lt;code&gt;quartz.config.js&lt;/code&gt; if necessary.&lt;/li&gt;
&lt;li&gt;Ensure your domain has been added to the &lt;a href=&quot;https://vercel.com/dashboard/domains&quot; class=&quot;external&quot;&gt;Domains - Dashboard&lt;/a&gt; page in Vercel.&lt;/li&gt;
&lt;li&gt;Go to the &lt;a href=&quot;https://vercel.com/dashboard&quot; class=&quot;external&quot;&gt;Vercel Dashboard&lt;/a&gt; and select your Quartz project.&lt;/li&gt;
&lt;li&gt;Go to the Settings tab and then click Domains in the sidebar&lt;/li&gt;
&lt;li&gt;Enter your subdomain into the field and press Add&lt;/li&gt;
&lt;/ol&gt;</description>
    <pubDate>Wed, 23 Aug 2023 22:14:23 GMT</pubDate>
  </item><item>
    <title>Welcome to Quartz 4</title>
    <link>https://notes.zeyadnotes.dev/</link>
    <guid>https://notes.zeyadnotes.dev/</guid>
    <description>&lt;p&gt;Quartz is a fast, batteries-included static-site generator that transforms Markdown content into fully functional websites. Thousands of students, developers, and teachers are &lt;a href=&quot;./showcase&quot; class=&quot;internal&quot; data-slug=&quot;showcase&quot;&gt;already using Quartz&lt;/a&gt; to publish personal notes, wikis, and &lt;a href=&quot;https://jzhao.xyz/posts/networked-thought&quot; class=&quot;external&quot;&gt;digital gardens&lt;/a&gt; to the web.&lt;/p&gt;
&lt;h2 id=&quot;-get-started&quot;&gt;ü™¥ Get Started&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#-get-started&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Quartz requires &lt;strong&gt;at least &lt;a href=&quot;https://nodejs.org/&quot; class=&quot;external&quot;&gt;Node&lt;/a&gt; v18.14&lt;/strong&gt; and &lt;code&gt;npm&lt;/code&gt; v9.3.1 to function correctly. Ensure you have this installed on your machine before continuing.&lt;/p&gt;
&lt;p&gt;Then, in your terminal of choice, enter the following commands line by line:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;shell&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;shell&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;clone&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;https://github.com/jackyzha0/quartz.git&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;cd&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;quartz&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;npm&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;i&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;npx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;quartz&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;create&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will guide you through initializing your Quartz with content. Once you‚Äôve done so, see how to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;./authoring-content&quot; class=&quot;internal&quot; data-slug=&quot;authoring-content&quot;&gt;Author content&lt;/a&gt; in Quartz&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;./configuration&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;Configure&lt;/a&gt; Quartz‚Äôs behaviour&lt;/li&gt;
&lt;li&gt;Change Quartz‚Äôs &lt;a href=&quot;./layout&quot; class=&quot;internal&quot; data-slug=&quot;layout&quot;&gt;layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;./build&quot; class=&quot;internal&quot; data-slug=&quot;build&quot;&gt;Build and preview&lt;/a&gt; Quartz&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;./hosting&quot; class=&quot;internal&quot; data-slug=&quot;hosting&quot;&gt;Host&lt;/a&gt; Quartz online&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;info&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot;&gt;&lt;/circle&gt;&lt;line x1=&quot;12&quot; y1=&quot;16&quot; x2=&quot;12&quot; y2=&quot;12&quot;&gt;&lt;/line&gt;&lt;line x1=&quot;12&quot; y1=&quot;8&quot; x2=&quot;12.01&quot; y2=&quot;8&quot;&gt;&lt;/line&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Info &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Coming from Quartz 3? See the &lt;a href=&quot;./migrating-from-Quartz-3&quot; class=&quot;internal&quot; data-slug=&quot;migrating-from-Quartz-3&quot;&gt;migration guide&lt;/a&gt; for the differences between Quartz 3 and Quartz 4 and how to migrate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;-features&quot;&gt;üîß Features&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#-features&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;./features/Obsidian-compatibility&quot; class=&quot;internal&quot; data-slug=&quot;features/Obsidian-compatibility&quot;&gt;Obsidian compatibility&lt;/a&gt;, &lt;a href=&quot;./features/full-text-search&quot; class=&quot;internal&quot; data-slug=&quot;features/full-text-search&quot;&gt;full-text search&lt;/a&gt;, &lt;a href=&quot;./features/graph-view&quot; class=&quot;internal&quot; data-slug=&quot;features/graph-view&quot;&gt;graph view&lt;/a&gt;, note transclusion, &lt;a href=&quot;./features/wikilinks&quot; class=&quot;internal&quot; data-slug=&quot;features/wikilinks&quot;&gt;wikilinks&lt;/a&gt;, &lt;a href=&quot;./features/backlinks&quot; class=&quot;internal&quot; data-slug=&quot;features/backlinks&quot;&gt;backlinks&lt;/a&gt;, &lt;a href=&quot;./features/Latex&quot; class=&quot;internal&quot; data-slug=&quot;features/Latex&quot;&gt;Latex&lt;/a&gt;, &lt;a href=&quot;./features/syntax-highlighting&quot; class=&quot;internal&quot; data-slug=&quot;features/syntax-highlighting&quot;&gt;syntax highlighting&lt;/a&gt;, &lt;a href=&quot;./features/popover-previews&quot; class=&quot;internal&quot; data-slug=&quot;features/popover-previews&quot;&gt;popover previews&lt;/a&gt;, &lt;a href=&quot;./features/Docker-Support&quot; class=&quot;internal&quot; data-slug=&quot;features/Docker-Support&quot;&gt;Docker Support&lt;/a&gt;, and &lt;a href=&quot;./features&quot; class=&quot;internal&quot; data-slug=&quot;features&quot;&gt;many more&lt;/a&gt; right out of the box&lt;/li&gt;
&lt;li&gt;Hot-reload for both configuration and content&lt;/li&gt;
&lt;li&gt;Simple JSX layouts and &lt;a href=&quot;./advanced/creating-components&quot; class=&quot;internal&quot; data-slug=&quot;advanced/creating-components&quot;&gt;page components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;./features/SPA-Routing&quot; class=&quot;internal&quot; data-slug=&quot;features/SPA-Routing&quot;&gt;Ridiculously fast page loads&lt;/a&gt; and tiny bundle sizes&lt;/li&gt;
&lt;li&gt;Fully-customizable parsing, filtering, and page generation through &lt;a href=&quot;./advanced/making-plugins&quot; class=&quot;internal&quot; data-slug=&quot;advanced/making-plugins&quot;&gt;plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a comprehensive list of features, visit the &lt;a href=&quot;./features&quot; class=&quot;internal&quot; data-slug=&quot;features&quot;&gt;features page&lt;/a&gt;. You can read more about the &lt;em&gt;why&lt;/em&gt; behind these features on the &lt;a href=&quot;./philosophy&quot; class=&quot;internal&quot; data-slug=&quot;philosophy&quot;&gt;philosophy&lt;/a&gt; page and a technical overview on the &lt;a href=&quot;./advanced/architecture&quot; class=&quot;internal&quot; data-slug=&quot;advanced/architecture&quot;&gt;architecture&lt;/a&gt; page.&lt;/p&gt;
&lt;h3 id=&quot;-troubleshooting--updating&quot;&gt;üöß Troubleshooting + Updating&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#-troubleshooting--updating&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Having trouble with Quartz? Try searching for your issue using the search feature. If you haven‚Äôt already, &lt;a href=&quot;./upgrading&quot; class=&quot;internal&quot; data-slug=&quot;upgrading&quot;&gt;upgrade&lt;/a&gt; to the newest version of Quartz to see if this fixes your issue.&lt;/p&gt;
&lt;p&gt;If you‚Äôre still having trouble, feel free to &lt;a href=&quot;https://github.com/jackyzha0/quartz/issues&quot; class=&quot;external&quot;&gt;submit an issue&lt;/a&gt; if you feel you found a bug or ask for help in our &lt;a href=&quot;https://discord.gg/cRFFHYye7t&quot; class=&quot;external&quot;&gt;Discord Community&lt;/a&gt;.&lt;/p&gt;</description>
    <pubDate>Sun, 08 Oct 2023 16:59:18 GMT</pubDate>
  </item><item>
    <title>Layout</title>
    <link>https://notes.zeyadnotes.dev/layout</link>
    <guid>https://notes.zeyadnotes.dev/layout</guid>
    <description>&lt;p&gt;Certain emitters may also output &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML&quot; class=&quot;external&quot;&gt;HTML&lt;/a&gt; files. To enable easy customization, these emitters allow you to fully rearrange the layout of the page. The default page layouts can be found in &lt;code&gt;quartz.layout.ts&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Each page is composed of multiple different sections which contain &lt;code&gt;QuartzComponents&lt;/code&gt;. The following code snippet lists all of the valid sections that you can add components to:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;div data-rehype-pretty-code-title=&quot;&quot; data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;quartz/cfg.ts&lt;/div&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;typescript&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;export&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;interface&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;FullPageLayout&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  head&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// single component&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  header&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// laid out horizontally&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  beforeBody&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// laid out vertically&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  pageBody&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// single component&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  left&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// vertical on desktop, horizontal on mobile&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  right&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;[] &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// vertical on desktop, horizontal on mobile&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;  footer&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-keyword)&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;QuartzComponent&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-comment)&quot;&gt;// single component&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These correspond to following parts of the page:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./images/quartz-layout.png&quot; width=&quot;800&quot; height=&quot;auto&quot;&gt;&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;note&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;line x1=&quot;18&quot; y1=&quot;2&quot; x2=&quot;22&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&lt;path d=&quot;M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;There are two additional layout fields that are &lt;em&gt;not&lt;/em&gt; shown in the above diagram.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;head&lt;/code&gt; is a single component that renders the &lt;code&gt;&amp;#x3C;head&gt;&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head&quot; class=&quot;external&quot;&gt;tag&lt;/a&gt; in the HTML. This doesn‚Äôt appear visually on the page and is only is responsible for metadata about the document like the tab title, scripts, and styles.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;header&lt;/code&gt; is a set of components that are laid out horizontally and appears &lt;em&gt;before&lt;/em&gt; the &lt;code&gt;beforeBody&lt;/code&gt; section. This enables you to replicate the old Quartz 3 header bar where the title, search bar, and dark mode toggle. By default, Quartz 4 doesn‚Äôt place any components in the &lt;code&gt;header&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Quartz &lt;strong&gt;components&lt;/strong&gt;, like plugins, can take in additional properties as configuration options. If you‚Äôre familiar with React terminology, you can think of them as Higher-order Components.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;./tags/component&quot; class=&quot;internal&quot; data-slug=&quot;tags/component&quot;&gt;a list of all the components&lt;/a&gt; for all available components along with their configuration options. You can also checkout the guide on &lt;a href=&quot;./advanced/creating-components&quot; class=&quot;internal&quot; data-slug=&quot;advanced/creating-components&quot;&gt;creating components&lt;/a&gt; if you‚Äôre interested in further customizing the behaviour of Quartz.&lt;/p&gt;
&lt;h3 id=&quot;style&quot;&gt;Style&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#style&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Most meaningful style changes like colour scheme and font can be done simply through the &lt;a href=&quot;./configuration#general-configuration&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;general configuration&lt;/a&gt; options. However, if you‚Äôd like to make more involved style changes, you can do this by writing your own styles. Quartz 4, like Quartz 3, uses &lt;a href=&quot;https://sass-lang.com/guide/&quot; class=&quot;external&quot;&gt;Sass&lt;/a&gt; for styling.&lt;/p&gt;
&lt;p&gt;You can see the base style sheet in &lt;code&gt;quartz/styles/base.scss&lt;/code&gt; and write your own in &lt;code&gt;quartz/styles/custom.scss&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;note&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;line x1=&quot;18&quot; y1=&quot;2&quot; x2=&quot;22&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&lt;path d=&quot;M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Some components may provide their own styling as well! For example, &lt;code&gt;quartz/components/Darkmode.tsx&lt;/code&gt; imports styles from &lt;code&gt;quartz/components/styles/darkmode.scss&lt;/code&gt;. If you‚Äôd like to customize styling for a specific component, double check the component definition to see how its styles are defined.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Migrating from Quartz 3</title>
    <link>https://notes.zeyadnotes.dev/migrating-from-Quartz-3</link>
    <guid>https://notes.zeyadnotes.dev/migrating-from-Quartz-3</guid>
    <description>&lt;p&gt;As you already have Quartz locally, you don‚Äôt need to fork or clone it again. Simply just checkout the alpha branch, install the dependencies, and import your old vault.&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;fetch&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;checkout&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;v4&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;pull&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;upstream&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;v4&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;npm&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;i&lt;/span&gt;&lt;/span&gt;
&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;npx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;quartz&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;create&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you get an error like &lt;code&gt;fatal: &#039;upstream&#039; does not appear to be a git repository&lt;/code&gt;, make sure you add &lt;code&gt;upstream&lt;/code&gt; as a remote origin:&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;shell&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;shell&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;git&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;remote&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;add&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;upstream&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;https://github.com/jackyzha0/quartz.git&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When running &lt;code&gt;npx quartz create&lt;/code&gt;, you will be prompted as to how to initialize your content folder. Here, you can choose to import or link your previous content folder and Quartz should work just as you expect it to.&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;note&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;line x1=&quot;18&quot; y1=&quot;2&quot; x2=&quot;22&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&lt;path d=&quot;M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;If the existing content folder you‚Äôd like to use is at the &lt;em&gt;same&lt;/em&gt; path on a different branch, clone the repo again somewhere at a &lt;em&gt;different&lt;/em&gt; path in order to use it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;key-changes&quot;&gt;Key changes&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#key-changes&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Removing Hugo and &lt;code&gt;hugo-obsidian&lt;/code&gt;&lt;/strong&gt;: Hugo worked well for earlier versions of Quartz but it also made it hard for people outside of the Golang and Hugo communities to fully understand what Quartz was doing under the hood and be able to properly customize it to their needs. Quartz 4 now uses a Node-based static-site generation process which should lead to a much more helpful error messages and an overall smoother user experience.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Full-hot reload&lt;/strong&gt;: The many rough edges of how &lt;code&gt;hugo-obsidian&lt;/code&gt; integrated with Hugo meant that watch mode didn‚Äôt re-trigger &lt;code&gt;hugo-obsidian&lt;/code&gt; to update the content index. This lead to a lot of weird cases where the watch mode output wasn‚Äôt accurate. Quartz 4 now uses a cohesive parse, filter, and emit pipeline which gets run on every change so hot-reloads are always accurate.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Replacing Go template syntax with JSX&lt;/strong&gt;: Quartz 3 used &lt;a href=&quot;https://pkg.go.dev/text/template&quot; class=&quot;external&quot;&gt;Go templates&lt;/a&gt; to create layouts for pages. However, the syntax isn‚Äôt great for doing any sort of complex rendering (like &lt;a href=&quot;https://github.com/jackyzha0/quartz/blob/hugo/layouts/partials/textprocessing.html&quot; class=&quot;external&quot;&gt;text processing&lt;/a&gt;) and it got very difficult to make any meaningful layout changes to Quartz 3. Quartz 4 uses an extension of JavaScript syntax called JSX which allows you to write layout code that looks like HTML in JavaScript which is significantly easier to understand and maintain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A new extensible &lt;a href=&quot;./configuration&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;configuration&lt;/a&gt; and &lt;a href=&quot;./configuration#plugins&quot; class=&quot;internal&quot; data-slug=&quot;configuration&quot;&gt;plugin&lt;/a&gt; system&lt;/strong&gt;: Quartz 3 was hard to configure without technical knowledge of how Hugo‚Äôs partials worked. Extensions were even hard to make. Quartz 4‚Äôs configuration and plugin system is designed to be extended by users while making updating to new versions of Quartz easy.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;things-to-update&quot;&gt;Things to update&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#things-to-update&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You will need to update your deploy scripts. See the &lt;a href=&quot;./hosting&quot; class=&quot;internal&quot; data-slug=&quot;hosting&quot;&gt;hosting&lt;/a&gt; guide for more details.&lt;/li&gt;
&lt;li&gt;Ensure that your default branch on GitHub is updated from &lt;code&gt;hugo&lt;/code&gt; to &lt;code&gt;v4&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;./features/folder-and-tag-listings&quot; class=&quot;internal&quot; data-slug=&quot;features/folder-and-tag-listings&quot;&gt;Folder and tag listings&lt;/a&gt; have also changed.
&lt;ul&gt;
&lt;li&gt;Folder descriptions should go under &lt;code&gt;content/&amp;#x3C;folder-name&gt;/index.md&lt;/code&gt; where &lt;code&gt;&amp;#x3C;folder-name&gt;&lt;/code&gt; is the name of the folder.&lt;/li&gt;
&lt;li&gt;Tag descriptions should go under &lt;code&gt;content/tags/&amp;#x3C;tag-name&gt;.md&lt;/code&gt; where &lt;code&gt;&amp;#x3C;tag-name&gt;&lt;/code&gt; is the name of the tag.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Some HTML layout may not be the same between Quartz 3 and Quartz 4. If you depended on a particular HTML hierarchy or class names, you may need to update your custom CSS to reflect these changes.&lt;/li&gt;
&lt;li&gt;If you customized the layout of Quartz 3, you may need to translate these changes from Go templates back to JSX as Quartz 4 no longer uses Hugo. For components, check out the guide on &lt;a href=&quot;./advanced/creating-components&quot; class=&quot;internal&quot; data-slug=&quot;advanced/creating-components&quot;&gt;creating components&lt;/a&gt; for more details on this.&lt;/li&gt;
&lt;/ul&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Philosophy of Quartz</title>
    <link>https://notes.zeyadnotes.dev/philosophy</link>
    <guid>https://notes.zeyadnotes.dev/philosophy</guid>
    <description>&lt;h2 id=&quot;a-garden-should-be-a-true-hypertext&quot;&gt;A garden should be a true hypertext&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#a-garden-should-be-a-true-hypertext&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The garden is the web as topology. Every walk through the garden creates new paths, new meanings, and when we add things to the garden we add them in a way that allows many future, unpredicted relationships.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(The Garden and the Stream)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The problem with the file cabinet is that it focuses on efficiency of access and interoperability rather than generativity and creativity. Thinking is not linear, nor is it hierarchical. In fact, not many things are linear or hierarchical at all. Then why is it that most tools and thinking strategies assume a nice chronological or hierarchical order for my thought processes? The ideal tool for thought for me would embrace the messiness of my mind, and organically help insights emerge from chaos instead of forcing an artificial order. A rhizomatic, not arboresecent, form of note taking.&lt;/p&gt;
&lt;p&gt;My goal with a digital garden is not purely as an organizing system and information store (though it works nicely for that). I want my digital garden to be a playground for new ways ideas can connect together. As a result, existing formal organizing systems like Zettelkasten or the hierarchical folder structures of Notion don‚Äôt work well for me. There is way too much upfront friction that by the time I‚Äôve thought about how to organize my thought into folders categories, I‚Äôve lost it.&lt;/p&gt;
&lt;p&gt;Quartz embraces the inherent rhizomatic and web-like nature of our thinking and tries to encourage note-taking in a similar form.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;a-garden-should-be-shared&quot;&gt;A garden should be shared&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; href=&quot;#a-garden-should-be-shared&quot; class=&quot;internal&quot;&gt; ¬ß&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The goal of digital gardening should be to tap into your network‚Äôs collective intelligence to create constructive feedback loops. If done well, I have a shareable representation of my thoughts that I can send out into the world and people can respond. Even for my most half-baked thoughts, this helps me create a feedback cycle to strengthen and fully flesh out that idea.&lt;/p&gt;
&lt;p&gt;Quartz is designed first and foremost as a tool for publishing &lt;a href=&quot;https://jzhao.xyz/posts/networked-thought&quot; class=&quot;external&quot;&gt;digital gardens&lt;/a&gt; to the web. To me, digital gardening is not just passive knowledge collection. It‚Äôs a form of expression and sharing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚Äú[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.‚Äù
‚Äî Richard Hamming&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;The goal of Quartz is to make sharing your digital garden free and simple.&lt;/strong&gt; At its core, Quartz is designed to be easy to use enough for non-technical people to get going but also powerful enough that senior developers can tweak it to work how they‚Äôd like it to work.&lt;/p&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Quartz Showcase</title>
    <link>https://notes.zeyadnotes.dev/showcase</link>
    <guid>https://notes.zeyadnotes.dev/showcase</guid>
    <description>&lt;p&gt;Want to see what Quartz can do? Here are some cool community gardens:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://quartz.jzhao.xyz/&quot; class=&quot;external&quot;&gt;Quartz Documentation (this site!)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jzhao.xyz/&quot; class=&quot;external&quot;&gt;Jacky Zhao‚Äôs Garden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://brandonkboswell.com&quot; class=&quot;external&quot;&gt;Brandon Boswell‚Äôs Garden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://scalingsynthesis.com/&quot; class=&quot;external&quot;&gt;Scaling Synthesis - A hypertext research notebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://notes.awagmi.xyz/&quot; class=&quot;external&quot;&gt;AWAGMI Intern Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://a2itnotes.github.io/quartz/&quot; class=&quot;external&quot;&gt;Course notes for Information Technology Advanced Theory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://glossary.airbyte.com/&quot; class=&quot;external&quot;&gt;Data Dictionary üß†&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://brain.sspaeti.com/&quot; class=&quot;external&quot;&gt;sspaeti.com‚Äôs Second Brain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://garden.oldwinter.top/&quot; class=&quot;external&quot;&gt;oldwinter „ÅÆÊï∞Â≠óËä±Âõ≠&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://abhmul.github.io/quartz/Math-Wiki/&quot; class=&quot;external&quot;&gt;Abhijeet‚Äôs Math Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mwalton.me/&quot; class=&quot;external&quot;&gt;Mike‚Äôs AI Garden ü§ñü™¥&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mattdunn.info/&quot; class=&quot;external&quot;&gt;Matt Dunn‚Äôs Second Brain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pelayoarbues.github.io/&quot; class=&quot;external&quot;&gt;Pelayo Arbues‚Äô Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://vinceimbat.com/&quot; class=&quot;external&quot;&gt;Vince Imbat‚Äôs Talahardin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chadly.net/&quot; class=&quot;external&quot;&gt;üß†üå≥ Chad‚Äôs Mind Garden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.pmcf.xyz/topo-da-mente/&quot; class=&quot;external&quot;&gt;Pedro MC Fernandes‚Äôs Topo da Mente&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to see your own on here, submit a &lt;a href=&quot;https://github.com/jackyzha0/quartz/blob/v4/docs/showcase.md&quot; class=&quot;external&quot;&gt;Pull Request adding yourself to this file&lt;/a&gt;!&lt;/p&gt;</description>
    <pubDate>Wed, 18 Oct 2023 02:43:41 GMT</pubDate>
  </item><item>
    <title>Components</title>
    <link>https://notes.zeyadnotes.dev/tags/component</link>
    <guid>https://notes.zeyadnotes.dev/tags/component</guid>
    <description>&lt;p&gt;Want to create your own custom component? Check out the advanced guide on &lt;a href=&quot;../advanced/creating-components&quot; class=&quot;internal&quot; data-slug=&quot;advanced/creating-components&quot;&gt;creating components&lt;/a&gt; for more information.&lt;/p&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item><item>
    <title>Upgrading Quartz</title>
    <link>https://notes.zeyadnotes.dev/upgrading</link>
    <guid>https://notes.zeyadnotes.dev/upgrading</guid>
    <description>&lt;blockquote class=&quot;callout&quot; data-callout=&quot;note&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;line x1=&quot;18&quot; y1=&quot;2&quot; x2=&quot;22&quot; y2=&quot;6&quot;&gt;&lt;/line&gt;&lt;path d=&quot;M7.5 20.5 19 9l-4-4L3.5 16.5 2 22z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Note &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;This is specifically a guide for upgrading Quartz 4 version to a more recent update. If you are coming from Quartz 3, check out the &lt;a href=&quot;./migrating-from-Quartz-3&quot; class=&quot;internal&quot; data-slug=&quot;migrating-from-Quartz-3&quot;&gt;migration guide&lt;/a&gt; for more info.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To fetch the latest Quartz updates, simply run&lt;/p&gt;
&lt;div data-rehype-pretty-code-fragment=&quot;&quot;&gt;&lt;pre style=&quot;background-color: var(--shiki-color-background)&quot; tabindex=&quot;0&quot; data-language=&quot;bash&quot; data-theme=&quot;default&quot;&gt;&lt;code data-language=&quot;bash&quot; data-theme=&quot;default&quot;&gt;&lt;span data-line=&quot;&quot;&gt;&lt;span style=&quot;color: var(--shiki-token-function)&quot;&gt;npx&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;quartz&lt;/span&gt;&lt;span style=&quot;color: var(--shiki-color-text)&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: var(--shiki-token-string)&quot;&gt;update&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As Quartz uses &lt;a href=&quot;https://git-scm.com/&quot; class=&quot;external&quot;&gt;git&lt;/a&gt; under the hood for versioning, updating effectively ‚Äòpulls‚Äô in the updates from the official Quartz GitHub repository. If you have local changes that might conflict with the updates, you may need to resolve these manually yourself (or, pull manually using &lt;code&gt;git pull origin upstream&lt;/code&gt;).&lt;/p&gt;
&lt;blockquote class=&quot;callout&quot; data-callout=&quot;tip&quot;&gt;
&lt;div class=&quot;callout-title&quot;&gt;
                  &lt;div class=&quot;callout-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;100%&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;&gt;&lt;path d=&quot;M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;
                  &lt;div class=&quot;callout-title-inner&quot;&gt;&lt;p&gt;Tip &lt;/p&gt;&lt;/div&gt;

                &lt;/div&gt;
&lt;p&gt;Quartz will try to cache your content before updating to try and prevent merge conflicts. If you get a conflict mid-merge, you can stop the merge and then run &lt;code&gt;npx quartz restore&lt;/code&gt; to restore your content from the cache.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you have the &lt;a href=&quot;https://desktop.github.com/&quot; class=&quot;external&quot;&gt;GitHub desktop app&lt;/a&gt;, this will automatically open to help you resolve the conflicts. Otherwise, you will need to resolve this in a text editor like VSCode. For more help on resolving conflicts manually, check out the &lt;a href=&quot;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/addressing-merge-conflicts/resolving-a-merge-conflict-using-the-command-line#competing-line-change-merge-conflicts&quot; class=&quot;external&quot;&gt;GitHub guide on resolving merge conflicts&lt;/a&gt;.&lt;/p&gt;</description>
    <pubDate>Wed, 23 Aug 2023 19:09:04 GMT</pubDate>
  </item>
    </channel>
  </rss>