<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Design-patterns on</title><link>https://notes.zeyadetman.com/design-patterns/</link><description>Recent content in Design-patterns on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://notes.zeyadetman.com/design-patterns/index.xml" rel="self" type="application/rss+xml"/><item><title>Behavioral Design Patterns</title><link>https://notes.zeyadetman.com/design-patterns/behavioral/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.zeyadetman.com/design-patterns/behavioral/</guid><description>Strategy Design Pattern (Behavioral) Define a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm exist very independently from clients that use it.</description></item><item><title>Design Patterns</title><link>https://notes.zeyadetman.com/design-patterns/home/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.zeyadetman.com/design-patterns/home/</guid><description>Design patterns is a kinda tough to be remembered, so i created this pages to list what design patterns i do know, and what i need to know, and some links i find it useful.</description></item></channel></rss>